<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Workspace" referent="RBX55C09B3EFF7842D78768CC14B1BD1811">
		<Properties>
			<bool name="AllowThirdPartySales">false</bool>
			<token name="AnimationWeightedBlendFix">0</token>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<token name="ClientAnimatorThrottling">0</token>
			<BinaryString name="CollisionGroupData"><![CDATA[AQIABP3///8HRGVmYXVsdAEE/v///x9QbHVnaW5fU3R1ZGlvVHdlYWtzX0JvdW5kaW5nQm94
]]></BinaryString>
			<string name="CollisionGroups">Default^0^-3\Plugin_StudioTweaks_BoundingBox^1^-2</string>
			<Ref name="CurrentCamera">RBX0F01C2780FC6466095A19E1448DDE9AF</Ref>
			<double name="DistributedGameTime">0</double>
			<bool name="ExplicitAutoJoints">true</bool>
			<float name="FallenPartsDestroyHeight">-500</float>
			<Vector3 name="GlobalWind">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<float name="Gravity">196.199997</float>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<token name="HumanoidOnlySetCollisionsOnStateChange">0</token>
			<token name="InterpolationThrottling">0</token>
			<token name="LevelOfDetail">0</token>
			<token name="MeshPartHeadsAndAccessories">0</token>
			<CoordinateFrame name="ModelMeshCFrame">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
			<Vector3 name="ModelMeshSize">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<token name="ModelStreamingMode">0</token>
			<string name="Name">Workspace</string>
			<bool name="NeedsPivotMigration">false</bool>
			<token name="PhysicsSteppingMethod">0</token>
			<Ref name="PrimaryPart">null</Ref>
			<token name="ReplicateInstanceDestroySetting">0</token>
			<token name="Retargeting">0</token>
			<token name="SignalBehavior">0</token>
			<int64 name="SourceAssetId">-1</int64>
			<token name="StreamOutBehavior">0</token>
			<bool name="StreamingEnabled">false</bool>
			<token name="StreamingIntegrityMode">0</token>
			<int name="StreamingMinRadius">64</int>
			<int name="StreamingTargetRadius">1024</int>
			<BinaryString name="Tags"></BinaryString>
			<bool name="TerrainWeldsFixed">true</bool>
			<bool name="TouchesUseCollisionGroups">false</bool>
			<token name="UnionsScaleNonuniformly">0</token>
			<UniqueId name="UniqueId">46009198e08047480187a7bd00017e4d</UniqueId>
			<OptionalCoordinateFrame name="WorldPivotData">
				<CFrame>
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CFrame>
			</OptionalCoordinateFrame>
		</Properties>
		<Item class="Camera" referent="RBX0F01C2780FC6466095A19E1448DDE9AF">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<CoordinateFrame name="CFrame">
					<X>-37.9205551</X>
					<Y>23.3193817</Y>
					<Z>-35.9288521</Z>
					<R00>-0.351817161</R00>
					<R01>0.362037539</R01>
					<R02>-0.863222718</R02>
					<R10>1.4901163e-08</R10>
					<R11>0.922178805</R11>
					<R12>0.386763841</R12>
					<R20>0.936068773</R20>
					<R21>0.136070147</R21>
					<R22>-0.324438334</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<float name="FieldOfView">70</float>
				<token name="FieldOfViewMode">0</token>
				<CoordinateFrame name="Focus">
					<X>-36.1941109</X>
					<Y>22.5458546</Y>
					<Z>-35.2799759</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Camera</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">46009198e08047480187a7bd00019165</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXB54DFB609ECC411A91C50C88C5070B18">
			<Properties>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>-8</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4284177243</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">Baseplate</string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">46009198e08047480187a7bd00019166</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">0</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>2048</X>
					<Y>16</Y>
					<Z>2048</Z>
				</Vector3>
			</Properties>
			<Item class="Texture" referent="RBX3B80724E471D49C6AEAABEDEC5B096E8">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Color3 name="Color3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="Face">1</token>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Texture</string>
					<float name="OffsetStudsU">0</float>
					<float name="OffsetStudsV">0</float>
					<int64 name="SourceAssetId">-1</int64>
					<float name="StudsPerTileU">8</float>
					<float name="StudsPerTileV">8</float>
					<BinaryString name="Tags"></BinaryString>
					<Content name="Texture"><url>rbxassetid://6372755229</url></Content>
					<float name="Transparency">0.800000012</float>
					<UniqueId name="UniqueId">46009198e08047480187a7bd00019167</UniqueId>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
		</Item>
		<Item class="Terrain" referent="RBX8A9B30FE51B74823A1D96384A31882E4">
			<Properties>
				<token name="AcquisitionMethod">0</token>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="Decoration">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<BinaryString name="MaterialColors"><![CDATA[AAAAAAAAan8/P39rf2Y/ilY+j35fi21PZmxvZbDqw8faiVpHOi4kHh4lZlw76JxKc3trhHta
gcLgc4RKxr21zq2UlJSM]]></BinaryString>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">Terrain</string>
				<BinaryString name="PhysicsGrid">AgMAAAAAAAAAAAAAAAA=</BinaryString>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<BinaryString name="SmoothGrid">AQU=</BinaryString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">46009198e08047480187a7bd00019168</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Color3 name="WaterColor">
					<R>0.0470588282</R>
					<G>0.329411775</G>
					<B>0.360784322</B>
				</Color3>
				<float name="WaterReflectance">1</float>
				<float name="WaterTransparency">0.300000012</float>
				<float name="WaterWaveSize">0.150000006</float>
				<float name="WaterWaveSpeed">10</float>
				<Vector3 name="size">
					<X>2044</X>
					<Y>252</Y>
					<Z>2044</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="SpawnLocation" referent="RBXBB922A66541844B989F3503CD6D7F658">
			<Properties>
				<bool name="AllowTeamChangeOnTouch">false</bool>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>2</X>
					<Y>0.5</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<int name="Duration">0</int>
				<bool name="Enabled">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">Spawn_White</string>
				<bool name="Neutral">true</bool>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<int name="TeamColor">194</int>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">46009198e08047480187a7bd00019169</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>12</X>
					<Y>1</Y>
					<Z>12</Z>
				</Vector3>
			</Properties>
			<Item class="Decal" referent="RBX4C85D6A0A57C4260A5D1955C66BDAE78">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Color3 name="Color3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<token name="Face">1</token>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Decal</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<Content name="Texture"><url>rbxasset://textures/SpawnLocation.png</url></Content>
					<float name="Transparency">0</float>
					<UniqueId name="UniqueId">46009198e08047480187a7bd0001916a</UniqueId>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
		</Item>
		<Item class="Part" referent="RBX058125FFCE2240628A06E0E82F0ACE1C">
			<Properties>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>2</X>
					<Y>4.5</Y>
					<Z>-22</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">SceneObject_Block</string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">0fc089a5a774912b01988041007a6556</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>4</X>
					<Y>9</Y>
					<Z>4</Z>
				</Vector3>
			</Properties>
			<Item class="SurfaceGui" referent="RBXB36C50425F8F4FDAB3C5F45F88A30457">
				<Properties>
					<bool name="Active">true</bool>
					<Ref name="Adornee">null</Ref>
					<bool name="AlwaysOnTop">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<float name="Brightness">1</float>
					<Vector2 name="CanvasSize">
						<X>800</X>
						<Y>600</Y>
					</Vector2>
					<bool name="ClipsDescendants">true</bool>
					<bool name="Enabled">true</bool>
					<token name="Face">2</token>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<float name="LightInfluence">1</float>
					<string name="Name">SurfaceGui</string>
					<float name="PixelsPerStud">50</float>
					<bool name="ResetOnSpawn">true</bool>
					<Ref name="RootLocalizationTable">null</Ref>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<token name="SizingMode">1</token>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<float name="ToolPunchThroughDistance">0</float>
					<UniqueId name="UniqueId">0fc089a5a774912b019880410168fd0c</UniqueId>
					<token name="ZIndexBehavior">1</token>
					<float name="ZOffset">0</float>
				</Properties>
				<Item class="TextLabel" referent="RBXF46BBCED6DA94DF2BF12B493783839B5">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0.5</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">TextLabel</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">Label</string>
						<Color3 name="TextColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<bool name="TextScaled">true</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">0fc089a5a774912b019880410168fd16</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Part" referent="RBX30133D1A59FE4C94A81EAF9606CAC2A0">
			<Properties>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>20</X>
					<Y>4.5</Y>
					<Z>-22</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">SceneObject_Sphere</string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">0fc089a5a774912b0198804100825bdd</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">0</token>
				<Vector3 name="size">
					<X>10</X>
					<Y>10</Y>
					<Z>10</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX32D570C9026745419F44B7324F70A061">
			<Properties>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-16</X>
					<Y>4.5</Y>
					<Z>-22</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>1</R10>
					<R11>0</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">SceneObject_Cylinder</string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">0fc089a5a774912b0198804100825c83</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">2</token>
				<Vector3 name="size">
					<X>9</X>
					<Y>4</Y>
					<Z>4</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="SpawnLocation" referent="RBX7A918B8643AC47E382169A31BE9DE53E">
			<Properties>
				<bool name="AllowTeamChangeOnTouch">false</bool>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>62</X>
					<Y>0.5</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4289020495</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<int name="Duration">0</int>
				<bool name="Enabled">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">Spawn_Red</string>
				<bool name="Neutral">false</bool>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<int name="TeamColor">1004</int>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">0fc089a5a774912b0198804102871048</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>12</X>
					<Y>1</Y>
					<Z>12</Z>
				</Vector3>
			</Properties>
			<Item class="Decal" referent="RBXC8F07DCE21584B36A5D099D8F5A5418F">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Color3 name="Color3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<token name="Face">1</token>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Decal</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<Content name="Texture"><url>rbxasset://textures/SpawnLocation.png</url></Content>
					<float name="Transparency">0</float>
					<UniqueId name="UniqueId">0fc089a5a774912b0198804102871049</UniqueId>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
		</Item>
		<Item class="SpawnLocation" referent="RBX10F2520D88A546FFBCD35F92EDA96486">
			<Properties>
				<bool name="AllowTeamChangeOnTouch">false</bool>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-58</X>
					<Y>0.5</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4281705755</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<int name="Duration">0</int>
				<bool name="Enabled">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">Spawn_Green</string>
				<bool name="Neutral">false</bool>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<int name="TeamColor">1020</int>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">0fc089a5a774912b01988041028711c0</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>12</X>
					<Y>1</Y>
					<Z>12</Z>
				</Vector3>
			</Properties>
			<Item class="Decal" referent="RBX48D3899A55954533A298C8FE05246588">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Color3 name="Color3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<token name="Face">1</token>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Decal</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<Content name="Texture"><url>rbxasset://textures/SpawnLocation.png</url></Content>
					<float name="Transparency">0</float>
					<UniqueId name="UniqueId">0fc089a5a774912b01988041028711c1</UniqueId>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="SoundService" referent="RBX18BB97F7FA9344B1BD75E560D3B7F3A1">
		<Properties>
			<token name="AmbientReverb">0</token>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<float name="DistanceFactor">3.32999992</float>
			<float name="DopplerScale">1</float>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">SoundService</string>
			<bool name="RespectFilteringEnabled">true</bool>
			<float name="RolloffScale">1</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190b9</UniqueId>
			<token name="VolumetricAudio">1</token>
		</Properties>
	</Item>
	<Item class="NonReplicatedCSGDictionaryService" referent="RBXA0290C6B22FD40DC98628E1ACAD0D6A1">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">NonReplicatedCSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190c5</UniqueId>
		</Properties>
	</Item>
	<Item class="CSGDictionaryService" referent="RBXBAC29ED8630A4A5EBB8D4D355EE4428C">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">CSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190c6</UniqueId>
		</Properties>
	</Item>
	<Item class="Chat" referent="RBXEFE6B100D94C47C69A462DB8D8AE1067">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="BubbleChatEnabled">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="LoadDefaultChat">true</bool>
			<string name="Name">Chat</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190ca</UniqueId>
		</Properties>
	</Item>
	<Item class="TimerService" referent="RBX593BF212D26B4922AB3093154554CF94">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190cb</UniqueId>
		</Properties>
	</Item>
	<Item class="Players" referent="RBX0BCB2545A14F4660A7032355CEA51846">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="CharacterAutoLoads">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<int name="MaxPlayersInternal">30</int>
			<string name="Name">Players</string>
			<int name="PreferredPlayersInternal">30</int>
			<float name="RespawnTime">3</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190cd</UniqueId>
		</Properties>
	</Item>
	<Item class="ReplicatedFirst" referent="RBXF07FFD1CC9734F4E99775E629A2C0F62">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ReplicatedFirst</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190d1</UniqueId>
		</Properties>
	</Item>
	<Item class="TweenService" referent="RBX7E7A289D5A5E49CA91FCA434300C10A5">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TweenService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190d3</UniqueId>
		</Properties>
	</Item>
	<Item class="MaterialService" referent="RBXD4A0DEA1C73F4AC597123E6ABF8C225A">
		<Properties>
			<string name="AsphaltName">Asphalt</string>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="BasaltName">Basalt</string>
			<string name="BrickName">Brick</string>
			<string name="CobblestoneName">Cobblestone</string>
			<string name="ConcreteName">Concrete</string>
			<string name="CorrodedMetalName">CorrodedMetal</string>
			<string name="CrackedLavaName">CrackedLava</string>
			<string name="DiamondPlateName">DiamondPlate</string>
			<string name="FabricName">Fabric</string>
			<string name="FoilName">Foil</string>
			<string name="GlacierName">Glacier</string>
			<string name="GraniteName">Granite</string>
			<string name="GrassName">Grass</string>
			<string name="GroundName">Ground</string>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="IceName">Ice</string>
			<string name="LeafyGrassName">LeafyGrass</string>
			<string name="LimestoneName">Limestone</string>
			<string name="MarbleName">Marble</string>
			<string name="MetalName">Metal</string>
			<string name="MudName">Mud</string>
			<string name="Name">MaterialService</string>
			<string name="PavementName">Pavement</string>
			<string name="PebbleName">Pebble</string>
			<string name="PlasticName">Plastic</string>
			<string name="RockName">Rock</string>
			<string name="SaltName">Salt</string>
			<string name="SandName">Sand</string>
			<string name="SandstoneName">Sandstone</string>
			<string name="SlateName">Slate</string>
			<string name="SmoothPlasticName">SmoothPlastic</string>
			<string name="SnowName">Snow</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">4d4d492d303ed20a0386ca3c000002c8</UniqueId>
			<bool name="Use2022MaterialsXml">false</bool>
			<string name="WoodName">Wood</string>
			<string name="WoodPlanksName">WoodPlanks</string>
		</Properties>
	</Item>
	<Item class="PermissionsService" referent="RBX4F946AA548064AE3B6B5B3C0854897F1">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">PermissionsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190d7</UniqueId>
		</Properties>
	</Item>
	<Item class="PlayerEmulatorService" referent="RBX11B751FF9BEA4AEC965F2947460C2BB3">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="CustomPoliciesEnabled">false</bool>
			<string name="EmulatedCountryCode"></string>
			<string name="EmulatedGameLocale"></string>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">PlayerEmulatorService</string>
			<bool name="PlayerEmulationEnabled">false</bool>
			<BinaryString name="SerializedEmulatedPolicyInfo"></BinaryString>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190d9</UniqueId>
		</Properties>
	</Item>
	<Item class="StudioData" referent="RBX616DF6630AD24495AE13EF1F13ECA07B">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="EnableScriptCollabByDefaultOnLoad">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StudioData</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190db</UniqueId>
		</Properties>
	</Item>
	<Item class="StarterPlayer" referent="RBX9FE0244AA02D49D5AF901BEFA89919C8">
		<Properties>
			<bool name="AllowCustomAnimations">true</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutoJumpEnabled">true</bool>
			<float name="CameraMaxZoomDistance">128</float>
			<float name="CameraMinZoomDistance">0.5</float>
			<token name="CameraMode">0</token>
			<float name="CharacterJumpHeight">7.19999981</float>
			<float name="CharacterJumpPower">50</float>
			<float name="CharacterMaxSlopeAngle">89</float>
			<bool name="CharacterUseJumpPower">true</bool>
			<float name="CharacterWalkSpeed">16</float>
			<token name="DevCameraOcclusionMode">0</token>
			<token name="DevComputerCameraMovementMode">0</token>
			<token name="DevComputerMovementMode">0</token>
			<token name="DevTouchCameraMovementMode">0</token>
			<token name="DevTouchMovementMode">0</token>
			<token name="EnableDynamicHeads">0</token>
			<bool name="EnableMouseLockOption">true</bool>
			<int64 name="GameSettingsAssetIDFace">0</int64>
			<int64 name="GameSettingsAssetIDHead">0</int64>
			<int64 name="GameSettingsAssetIDLeftArm">0</int64>
			<int64 name="GameSettingsAssetIDLeftLeg">0</int64>
			<int64 name="GameSettingsAssetIDPants">0</int64>
			<int64 name="GameSettingsAssetIDRightArm">0</int64>
			<int64 name="GameSettingsAssetIDRightLeg">0</int64>
			<int64 name="GameSettingsAssetIDShirt">0</int64>
			<int64 name="GameSettingsAssetIDTeeShirt">0</int64>
			<int64 name="GameSettingsAssetIDTorso">0</int64>
			<token name="GameSettingsAvatar">1</token>
			<token name="GameSettingsR15Collision">0</token>
			<NumberRange name="GameSettingsScaleRangeBodyType">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHead">0.95 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHeight">0.9 1.05 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeProportion">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeWidth">0.7 1 </NumberRange>
			<float name="HealthDisplayDistance">100</float>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<token name="HumanoidStateMachineMode">0</token>
			<bool name="LoadCharacterAppearance">true</bool>
			<token name="LoadCharacterLayeredClothing">0</token>
			<string name="Name">StarterPlayer</string>
			<float name="NameDisplayDistance">100</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190dc</UniqueId>
			<bool name="UserEmotesEnabled">true</bool>
		</Properties>
		<Item class="StarterPlayerScripts" referent="RBXAD0B9D2AACCF457C9C4D4C71874FC7FC">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">StarterPlayerScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">46009198e08047480187a7bd0001916c</UniqueId>
			</Properties>
			<Item class="LocalScript" referent="RBX2E58C660846941D48CEBB0AF75D7C5FB">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Example</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{5AA24728-A29F-407D-84BF-9BF3D8F51509}</string>
					<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Roblox Services --
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Module --
local DebuGui = require(ReplicatedStorage.DebuGui)

-- Create New Window
local Gui1 = DebuGui.NewWindow('Core', {
	Title = 'API Examples',
	X = 150,
	Y = 20,
	Width = 600,
	Height = 520,
})
Gui1.Minimize()
Gui1.SetTopBarColor(Color3.fromRGB(103, 65, 161))
Gui1.SetScrollbarWidth(10)
Gui1.SetScrollbarColor(Color3.fromRGB(134, 29, 103))

-- Additional Master Functions for testing
--	Gui1.Disable()
--	Gui1.Enable()
--	Gui1.ToggleEnabled()
--	Gui1.Hide()
--	Gui1.Show()
--	Gui1.Minimize()
--	Gui1.Maximize()
--	Gui1.ToggleVisibility()
--	Gui1.ToggleMinimized()
--  Gui1.SetPosition(100, 100)
--  Gui1.SetSize(500, 5)

-- Getting Reference to Gui
local Gui1_AlternateRef = DebuGui.GetWindow('Core')
Gui1_AlternateRef.AddIntegerSlider('TEST123', 2, 0, 10)
Gui1_AlternateRef.Remove('TEST123')


-- Text --
Gui1.AddSeparator('TEXT_SEPARATOR').SetName('TEXT')
--
Gui1.AddText('text1', 'abc')
Gui1.AddText('text2', 'abc').SetName('custom name')
Gui1.AddText('text3', 'zxc').SetValue('Funky')
Gui1.AddText('text4', 'text')
	.SetNameColor(Color3.fromRGB(223, 78, 78))
	.SetValueTextColor(Color3.fromRGB(78, 93, 223))

Gui1.AddText('text5', 'abc')
	.Listen(function(V)
		print('text5 changed to: ', V)
	end)
	.SetValue('Krankey Kong')

Gui1.AddText('text6', 'abc')
	.SetValue('Frankey Kong')
	.Listen(function(V)
		print('text6 changed to: ', V)
	end)


-- Booleans --
Gui1.AddSeparator('BOOL_SEPARATOR').SetName('BOOLS')
--
Gui1.AddBool('bool1', true).SetName('fancy bool')
Gui1.AddBool('bool2', false).SetNameColor(Color3.new(1,0,0))
Gui1.AddBool('bool3').SetCheckboxColor(Color3.fromRGB(46, 106, 124))
Gui1.AddBool('bool4', true).Listen(function(NewValue)
	print("New Bool4 Value: ", NewValue)
end)
Gui1.AddBool('bool5', false).SetValue(true).SetCheckboxColor(Color3.fromRGB(122, 40, 122))
Gui1.AddBool('bool6', true).SetReadOnly()
Gui1.AddBool('bool7', false).SetReadOnly().SetValue(true).SetValue(false)

Gui1.AddBool('bool_multi_listen', true)
	.Listen(function()
		print('multi listen A')
	end)
	.Listen(function()
		print('multi listen B')
	end)

-- Buttons --
Gui1.AddSeparator('BUTTON_SEPARATOR').SetName('BUTTONS')
--
Gui1.AddButton('button1').SetName('fancy button')
Gui1.AddButton('button2').Listen(function()
	print("PRESSED BUTTON 2")
end).SetColor(Color3.fromRGB(54, 45, 134))
Gui1.AddButton('(X)').SetNameColor(Color3.fromRGB(255, 148, 148))
Gui1.AddButton('1234567890123456789012345678901234567890').SetColor(Color3.fromRGB(52, 134, 45))
local B3 = Gui1.AddButton('button3').SetName('Locked Button').SetReadOnly().Listen(function()
	print("PRESS")
end)
Gui1.AddButton('button4').SetName('Toggle Locked Button').Listen(function()
	if B3.IsReadOnly() then
		B3.SetReadOnly(false)
		B3.SetName('Unlocked Button')
	else
		B3.SetReadOnly(true)
		B3.SetName('Locked Button')
	end
end)


-- Integers --
Gui1.AddSeparator('INTEGERS_SEPARATOR').SetName('INTEGERS')
--
Gui1.AddInteger('int1', 1).SetName('fancy integer')
Gui1.AddInteger('int2', -1).SetNameColor(Color3.fromRGB(255, 148, 148))
Gui1.AddInteger('int3', '_9_#$%#$&*')
Gui1.AddInteger('int4')
Gui1.AddInteger('int5', 6.6).Listen(function(NewValue)
	print("NEW int5 Value: "..NewValue)
end).SetValueBGColor(Color3.fromRGB(39, 87, 59))
Gui1.AddInteger('int6', 1).SetValue(2).SetValueTextColor(Color3.fromRGB(62, 197, 118))
Gui1.AddInteger('int7', 1).SetValue('a')
Gui1.AddInteger('int8', 'a').SetValue(1).SetValueTextColor(Color3.fromRGB(0, 0, 0))
Gui1.AddInteger('int9', 99).SetReadOnly()

-- Integer Sliders --
Gui1.AddSeparator('INTEGER_SLIDER_SEPARATOR').SetName('INTEGER SLIDERS')
--
Gui1.AddIntegerSlider('intslider1', 2, 0, 10, DebuGui.SLIDERPARAM_UPDATE_ON_MOVEMENT).Listen(function(NewValue)
	print('New intslider1 Value: '..NewValue)
end)
Gui1.AddIntegerSlider('intslider2', 0, -5, 5, DebuGui.SLIDERPARAM_UPDATE_ON_RELEASE).Listen(function(NewValue)
	print('New intslider2 Value: '..NewValue)
end)
Gui1.AddIntegerSlider('intslider3', 50.1, 0.1, 50.1)
Gui1.AddIntegerSlider('intslider4', 25, 0, 50).SetValue(99)
Gui1.AddIntegerSlider('intslider5', 25, 0, 50).SetValue(-1)
Gui1.AddIntegerSlider('intslider6', 1, -2, 2).SetReadOnly()

Gui1.AddIntegerSlider('intslider_min', 0, -20, 20)
	.SetMinValue(1)

Gui1.AddIntegerSlider('intslider_max', 0, -20, 20)
	.SetMaxValue(-1)

-- Long String
Gui1.AddSeparator('LONG_STRING_SEPARATOR').SetName('LONG STRING')
--
Gui1.AddLongString('longstring1', "line1\nline2\nline3")
Gui1.AddLongString('longstring2', "a\nb\nc\nd\ne")
	.SetHeightBasedOnLineCount(5)

Gui1.AddLongString('longstring3', "line1\nline2\nline3", false, 30)
Gui1.AddLongString('longstring4', "line1\nline2\nline3", false, 30).SetHeight(100)

Gui1.AddLongString('longstring_locked', "line1\nline2\nline3")
	.SetReadOnly()

-- Numbers --
Gui1.AddSeparator('NUMBER_SEPARATOR').SetName('NUMBERS')
--
Gui1.AddNumber('num1', 1).SetName('fancy number')
Gui1.AddNumber('num2', -1).SetNameColor(Color3.fromRGB(148, 255, 175))
Gui1.AddNumber('num3', '9__#$%#$&*')
Gui1.AddNumber('num4')
Gui1.AddNumber('num5', 6.6).Listen(function(NewValue)
	print("New num5 Value: "..NewValue)
end).SetValueBGColor(Color3.fromRGB(87, 86, 39))
Gui1.AddNumber('num6', 1).SetValue(2).SetValueTextColor(Color3.fromRGB(197, 62, 175))
Gui1.AddNumber('num7', 1).SetValue('a').SetReadOnly()
Gui1.AddNumber('num8', 'a').SetValue(1).SetValueTextColor(Color3.fromRGB(0, 0, 0))
Gui1.AddNumber('num9', '123.456789', 3).Listen(function(NewValue)
	print("New num9 Value: "..NewValue)
end)

Gui1.AddNumber('num_colorOnNumber', 100)
	.SetValueTextColor(Color3.new(0,0,0))
	.SetValueBGColor(Color3.fromRGB(100, 255, 255))
	.Listen(function(NewValue)
		Gui1.Get('num_colorOnNumber').SetValueBGColor(Color3.fromRGB(NewValue, NewValue * 0.5, 255 - NewValue))
end)


-- Number Sliders --
Gui1.AddSeparator('NUMBER_SLIDER_SEPARATOR').SetName('NUMBER SLIDERS')
--
Gui1.AddNumberSlider('numslider1', 100, 50, 100, nil, DebuGui.SLIDERPARAM_UPDATE_ON_MOVEMENT).SetValueBGColor(Color3.fromRGB(197, 62, 175)).Listen(function(NewValue)
	print('New numslider1 Value: '..NewValue)
end)
Gui1.AddNumberSlider('numslider2', 100, 100, 200, 4, DebuGui.SLIDERPARAM_UPDATE_ON_RELEASE).SetValueTextColor(Color3.fromRGB(62, 197, 118)).Listen(function(NewValue)
	print('New numslider2 Value: '..NewValue)
end)
Gui1.AddNumberSlider('numslider3', 20, 0, 100, 3).SetValue(45)
Gui1.AddNumberSlider('numslider4', 40, 33, 44)
Gui1.AddNumberSlider('numslider5', 1, 2, 3, 2)
Gui1.AddNumberSlider('numslider6', 20, 0, 100, 1).SetValue(-1)
Gui1.AddNumberSlider('numslider7', 20, 0, 100, 0)
	.SetName('No Decimals')
	.SetNameColor(Color3.fromRGB(223, 157, 35))

Gui1.Remove('numslider4')

Gui1.AddNumberSlider('numslider8', 1, 2, 3, 2).SetReadOnly()

Gui1.AddNumberSlider('numslider_min', 0, -20, 20, 4)
	.SetMinValue(1)

Gui1.AddNumberSlider('numslider_max', 0, -20, 20, 4)
	.SetMaxValue(-1)

-- Separators --
Gui1.AddSeparator('SEPARATOR_SEPARATOR').SetName('SEPARATORS')
--
Gui1.AddSeparator('separator1')
Gui1.AddSeparator('separator2', Color3.fromRGB(223, 157, 35))
Gui1.AddSeparator('separator3', Color3.fromRGB(129, 175, 36)).SetName('TEST TEST')
Gui1.AddSeparator('separator4', nil, 42)
Gui1.AddSeparator('separator5').SetFrameColor(Color3.fromRGB(173, 72, 72))
Gui1.AddSeparator('separator6').SetName('junkster')
Gui1.AddSeparator('separator7').SetHeight(8)


-- Strings --
Gui1.AddSeparator('STRING_SEPARATOR').SetName('STRINGS')
--
Gui1.AddString('string1', 'aa').SetName('fancy string')
Gui1.AddString('string2', '1').SetNameColor(Color3.fromRGB(255, 200, 148))
Gui1.AddString('string3', '__#$%#$&*').SetValueBGColor(Color3.fromRGB(87, 86, 39))
Gui1.AddString('string4').SetValueTextColor(Color3.fromRGB(248, 150, 232))
Gui1.AddString('string5', 'default').Listen(function(NewValue)
	print("New String5 Value: "..NewValue)
end)
Gui1.AddString('string6', 'a').SetValue('b')
Gui1.AddString('string7', 'readonly string').SetReadOnly()


-- Vectors --
Gui1.AddSeparator('VECTOR_SEPARATOR').SetName('VECTORS')
--
Gui1.AddVector2('vec2_1', Vector2.new(7.9, -2)).Listen(function(NewVector)
	print("New vec2_1 Value: ", NewVector)
end)
Gui1.AddVector2('vec2_2', Vector2.new(666, 999)).SetReadOnly()
Gui1.AddVector2('vec2_3')
Gui1.AddVector2('vec2_4', Vector2.new(123.456789, 987.654321), 3)
Gui1.AddVector2('vec2_5', Vector2.new(-1, -1))
	.SetNameColor(Color3.fromRGB(223, 157, 35))
	.SetValueBGColor(Color3.fromRGB(248, 150, 232))
	.SetValueTextColor(Color3.fromRGB(0, 0, 0))

Gui1.AddVector2('vec2_6', Vector2.new(6, 6)).SetReadOnly()


Gui1.AddVector3('vec3_1', Vector3.new(7.9, -2, 54)).Listen(function(NewVector)
	print("New vec3_1 Value: ", NewVector)
end)
Gui1.AddVector3('vec3_2', Vector3.new(666, 999, -1)).SetReadOnly()
Gui1.AddVector3('vec3_3')
Gui1.AddVector3('vec3_4', Vector3.new(123.456789, 987.654321, 555.55555), 3)
Gui1.AddVector3('vec3_5', Vector3.new(-1, -1, -1))
	.SetNameColor(Color3.fromRGB(223, 157, 35))
	.SetValueBGColor(Color3.fromRGB(248, 150, 232))
	.SetValueTextColor(Color3.fromRGB(0, 0, 0))

Gui1.AddVector3('vec3_6', Vector3.new(6, 6, 6)).SetReadOnly()

-- Color Slider
Gui1.AddSeparator('COLOR_SLIDER_SEPARATOR').SetName('COLOR SLIDERS')
--
Gui1.AddColorSliderRGB('ColorSliderRGB_1', Color3.fromRGB(123, 69, 255), 2, true)
	.Listen(function(NewValue)
		print('New ColorSliderRGB_1 Value: ', NewValue)
end)

Gui1.AddColorSliderRGB('ColorSliderRGB_2', Color3.fromRGB(0, 255, 77), nil, true)
	.Listen(function(NewValue)
		print('New ColorSliderRGB_2 Value: ', NewValue)
end)

Gui1.AddColorSliderRGBInt('ColorSliderRGBInt_1', Color3.fromRGB(10, 44, 78))
	.SetValue(Color3.fromRGB(126, 0, 0))

Gui1.AddColorSliderRGBInt('ColorSliderRGBInt_2', Color3.fromRGB(66, 67, 68), true)
	.Listen(function(NewValue)
		print('New ColorSliderRGBInt_2 Value: ', NewValue)
end)

Gui1.AddColorSliderHSV('ColorSliderHSV_1', Color3.fromRGB(255, 255, 0), true)
	.SetValue(Color3.fromRGB(126, 0, 0))
	.Listen(function(NewValue)
		print('New ColorSliderHSV_1 Value: ', NewValue)
end)

Gui1.AddColorSliderHSVInt('ColorSliderHSV_2', Color3.fromRGB(111, 0, 255), true)
	.SetValue(Color3.fromRGB(0, 107, 126))
	.Listen(function(NewValue)
		print('New ColorSliderHSV_2 Value: ', NewValue)
end)

Gui1.AddColorSliderRGBInt('ColorSliderRGB_Locked', Color3.fromRGB(123, 69, 255))
	.SetReadOnly()


-- List Picker --
Gui1.AddSeparator('LIST_PICKER_SEPARATOR').SetName('LIST PICKERS')
--
Gui1.AddListPicker('listpicker1', 'bbb', {
	'aaa', 'bbb', 'ccc', 'ddd', 'eee_1234567890123456789012345678901234567890_eee'
}).Listen(function(NewChoice)
	print('listpicker1 choice: ', NewChoice)
end)

Gui1.AddListPicker('listpicker2', 'true', {
	'false', 'true', 'false', 'true', 'false', 'true', 'none'
}).SetValue('false')

Gui1.AddListPicker('listpicker3', nil, {'a', 'b', 'c'})
	.Listen(function(NewChoice)
		print('listpicker3 choice: ', NewChoice)
	end)

Gui1.AddListPicker('listpicker4', nil, {'a', 'b', 'c'}, true)
	.Listen(function(NewChoice)
		print('listpicker4 choice: ', NewChoice)
	end)
	.SetName('funny custom name')

Gui1.AddListPicker('listpicker5', '1', {'1'})
	.AddChoice('2')
	.AddChoice('3')
	.AddChoice('4')
	.SetValue('3')

Gui1.AddListPicker('listpicker6', '4', {'1', '2', '3', '4'})
	.RemoveChoice('2')
	.RemoveChoice('4')
	.RemoveChoice('1')
	.SetValue('1')
	.SetNameColor(Color3.fromRGB(223, 78, 78))

Gui1.AddListPicker('listpicker7', '3', {'1', '2', '3', '4'})
	.ChangeChoices({'a', 'b', 'c', 'd', '3'})
	.SetValueTextColor(Color3.fromRGB(223, 78, 78))

Gui1.AddListPicker('listpicker8', '3', {'1', '2', '3', '4'})
	.ChangeChoices({'a', 'b', 'c', 'd', 'e'})

Gui1.AddListPicker('listpicker_locked', '1', {'1', '2', '3'}).SetReadOnly()

-------------
-- Folders --
-------------

Gui1.AddSeparator('FOLDER_SEPARATOR').SetName('FOLDERS')

local Folder1 = Gui1.AddFolder('folder1', true)
	.SetName('My Cool Folder')
	.SetNameColor(Color3.fromRGB(0, 0, 0))
	.SetColor(Color3.fromRGB(82, 79, 235))

Folder1.AddBool('bool1', true)
Folder1.AddButton('button1')

local SubFolder1 = Folder1.AddFolder('SubFolder1', false)
	.SetColor(Color3.fromRGB(139, 108, 41))
SubFolder1.AddBool('bool1', false)
SubFolder1.AddInteger('int', 12)
SubFolder1.AddNumber('num1', 24)

local SubSubFolder1 = SubFolder1.AddFolder('SubSubFolder1', true)
	.SetNameColor(Color3.fromRGB(0, 0, 0))
	.SetColor(Color3.fromRGB(82, 79, 235))
SubSubFolder1.AddBool('bool1', false)
SubSubFolder1.AddInteger('int', 12)
SubSubFolder1.AddNumber('num1', 24)

Folder1.AddInteger('int1', 99)
Folder1.AddNumber('num1', 99.99)
Folder1.AddSeparator('separator1')
Folder1.AddString('string1', 'Cool Beans')
Folder1.AddVector2('vec2', Vector2.new(33, 565))
Folder1.AddVector2('vec3', Vector2.new(33, 565))
Folder1.AddNumberSlider('numslider', 100, 0, 200)
Folder1.AddColorSliderHSV('colorsliderhsv', Color3.fromRGB(67, 44, 129), true)
Folder1.AddListPicker('listpicker1', 'bbb', {
	'aaa', 'bbb', 'ccc', 'ddd', 'eee_1234567890123456789012345678901234567890_eee'
}).Listen(function(NewChoice)
	print('listpicker1 choice: ', NewChoice)
end)

SubSubFolder1.AddString('test1', 'xxx')
SubFolder1.AddString('test1', 'xxx')

local DeepFolder1 = SubSubFolder1.AddFolder('DeepFolder1', false)
local DeepFolder2 = DeepFolder1.AddFolder('DeepFolder2', false)
local DeepFolder3 = DeepFolder2.AddFolder('DeepFolder3', false)
DeepFolder3.AddFolder('DeepFolder4', false)

local SmallFrameFolder1 = Gui1.AddFolder('Small Frame Folder', false)
SmallFrameFolder1
	.SetColor(Color3.fromRGB(184, 163, 44))
	.SetNameColor(Color3.new(0,0,0))

SmallFrameFolder1.AddString('string1', 'text')
SmallFrameFolder1.AddString('string2', 'text')
SmallFrameFolder1.AddString('string3', 'text')
SmallFrameFolder1.AddString('string4', 'text')
SmallFrameFolder1.AddString('string5', 'text')
SmallFrameFolder1.AddString('string6', 'text')
SmallFrameFolder1.AddString('string7', 'text')

local SmallFrameFolder2 = Gui1.AddFolder('Small Frame Folder 2', true)
SmallFrameFolder2
	.SetColor(Color3.fromRGB(184, 163, 44))
	.SetNameColor(Color3.new(0,0,0))

SmallFrameFolder2.AddString('string1', 'text')
SmallFrameFolder2.AddString('string2', 'text')
SmallFrameFolder2.AddString('string3', 'text')
SmallFrameFolder2.AddString('string4', 'text')
SmallFrameFolder2.AddString('string5', 'text')
SmallFrameFolder2.AddString('string6', 'text')
SmallFrameFolder2.AddString('string7', 'text')

Gui1.Remove('Small Frame Folder 2')

----------------
-- Getter API --
----------------

-- Getters for Values

-- print("~~~ Quick Value Getters")
-- print('bool1 = ', Gui1.Get('bool1').GetValue())
-- print('button1 = ', Gui1.Get('button1').GetValue())
-- print('ColorSliderRGB_1 = ', Gui1.Get('ColorSliderRGB_1').GetValue())
-- print('folder1 = ', Gui1.Get('folder1').GetValue())
-- print('int1 = ', Gui1.Get('int1').GetValue())
-- print('intslider1 = ', Gui1.Get('intslider1').GetValue())
-- print('num1 = ', Gui1.Get('num1').GetValue())
-- print('numslider1 = ', Gui1.Get('numslider1').GetValue())
-- print('separator6 = ', Gui1.Get('separator6').GetValue())
-- print('string1 = ', Gui1.Get('string1').GetValue())
-- print('text1 = ', Gui1.Get('text1').GetValue())
-- print('vec2_1 = ', Gui1.Get('vec2_1').GetValue())
-- print('vec3_1 = ', Gui1.Get('vec3_1').GetValue())

-- API Acessing
-- !!! EXPENSIVE/SLOW TO PRINT, only use for testing/sparingly !!! --

-- print("BoolGui API: ", Gui1.Get('bool1'))
-- print("ButtonGui API: ", Gui1.Get('button1'))
-- print("ColorSliderGui API: ", Gui1.Get('ColorSliderRGB_1'))
-- print("FolderGui API: ", Gui1.Get('folder1'))
-- print("IntegerGui API: ", Gui1.Get('int1'))
-- print("IntegerSliderGui API: ", Gui1.Get('intslider1'))
-- print("ListPickerGui API: ", Gui1.Get('listpicker1'))
-- print("LongStringGui API: ", Gui1.Get('longstring1'))
-- print("NumberGui API: ", Gui1.Get('num1'))
-- print("NumberSliderGui API: ", Gui1.Get('numslider1'))
-- print("SeparatorGui API: ", Gui1.Get('separator1'))
-- print("StringGui API: ", Gui1.Get('string1'))
-- print("TextGui API: ", Gui1.Get('text1'))
-- print("Vector2Gui API: ", Gui1.Get('vec2_1'))
-- print("Vector3Gui API: ", Gui1.Get('vec3_1'))

---------------
-- Removal API --
---------------

-- removing invalid Gui --
Gui1.Remove('Fake Non-ExistantGui')

-- removing valid Gui --
Gui1.AddInteger('remove1', 1)
Gui1.Remove('remove1')

-- Examples of attempting to access removed Guis --
print("~~~")
local rBool = Gui1.AddBool('removeBool', true)
print(Gui1.Get('removeBool').GetValue())
Gui1.Remove('removeBool')
rBool.SetName('Invalid')

local rButton = Gui1.AddButton('removeButton')
Gui1.Remove('removeButton')
rButton.SetName('Invalid')

local rInteger = Gui1.AddInteger('removeInteger')
Gui1.Remove('removeInteger')
rInteger.SetName('Invalid')

local rNumber = Gui1.AddNumber('removeNumber')
Gui1.Remove('removeNumber')
rNumber.SetName('Invalid')

local rSeparator = Gui1.AddSeparator('removeSeparator')
Gui1.Remove('removeSeparator')
rSeparator.SetName('Invalid')

local rString = Gui1.AddString('removeString')
Gui1.Remove('removeString')
rString.SetName('Invalid')

local rVec2 = Gui1.AddVector2('removeVector2')
Gui1.Remove('removeVector2')
rVec2.SetName('Invalid')

------------------------
-- Destroy Entire Gui --
------------------------
--Gui1.Destroy()

----------------------
-- Multiple Windows --
----------------------
-- local Extra1 = DebuGui.NewWindow('Extra1', {
--     Title = 'Extra1',
--     X = 100,
--     Y = 70,
--     Width = 400,
--     Height = 300,
-- })
-- Extra1.SetTopBarColor(Color3.fromRGB(65, 103, 161))

-- local Extra2 = DebuGui.NewWindow('Extra2', {
--     Title = 'Extra2',
--     X = 50,
--     Y = 130,
--     Width = 400,
--     Height = 300,
-- })
-- Extra2.SetTopBarColor(Color3.fromRGB(65, 103, 161))]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">46009198e08047480187a7bd0001916d</UniqueId>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBXA886B93B325648F098D34CBBE08AB9AF">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Example_RacingCondition</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{AABD3203-6AF9-4265-ABD5-477C5AB24D66}</string>
					<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Roblox Services --
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Module
local DebuGui = require(ReplicatedStorage.DebuGui)

-- Get Existing Window
local Gui1 = DebuGui.WaitForWindow('Core')

-- This should end up at the bottom after everything from example 1 is finished
Gui1.AddBool('NewWindowBool', true).SetName('Racing Condition Test')]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">69021653e03abbda01910337002abafe</UniqueId>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX05B60732FDB54816AC05F5693C43ED67">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Example_Scene</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{CD28711D-DAC4-43CC-A702-40582EA48F59}</string>
					<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Roblox Services --
local Chat = game:GetService("Chat")
local Debris = game:GetService("Debris")
local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local Workspace = game:GetService("Workspace")
local StarterPlayer = game:GetService("StarterPlayer")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Module --
local DebuGui = require(ReplicatedStorage.DebuGui)

-- Defines
local LocalPlayer = Players.LocalPlayer
local Camera = Workspace.CurrentCamera
local Humanoid = nil
local Mouse = LocalPlayer:GetMouse()
local RNG = Random.new()

-- Create New Window
local Gui = DebuGui.NewWindow('Scene', {
	Title = 'Scene Modifier',
	X = 250,
	Y = 30,
	Width = 600,
	Height = 520,
})
--Gui.Minimize()

-- Humanoid
local function UpdateHumanoid(Character)
	Humanoid = Character:WaitForChild('Humanoid')
	Humanoid.StateChanged:Connect(function(_, NewState)
		-- If Jumping
		if NewState == Enum.HumanoidStateType.Jumping then
			local JumpCounterGui = Gui.Get("Player Settings").Get('Jump Counter')
			local NewValue = tonumber(JumpCounterGui:GetValue()) + 1
			JumpCounterGui.SetValue(NewValue)
		end
	end)
end
-- Mouse
Mouse.Button1Down:Connect(function()
	local ClickCounterGui = Gui.Get("Click Counter")
	local NewValue = tonumber(ClickCounterGui:GetValue()) + 1
	ClickCounterGui.SetValue(NewValue)
end)

LocalPlayer.CharacterAdded:Connect(function(Character)
	UpdateHumanoid(Character)
end)
if LocalPlayer.Character then
	UpdateHumanoid(LocalPlayer.Character)
end

-- Settings
Gui.AddColorSliderRGBInt('Folder Color', DebuGui.GetConstants().DEFAULT_FOLDER_COLOR, nil, true).Listen(function(NewColor)
	Gui.GetFolder('Chat').SetColor(NewColor)
	Gui.GetFolder('Object Spawning').SetColor(NewColor)
	Gui.GetFolder('Player Settings').SetColor(NewColor)
	Gui.GetFolder('Scene Objects').SetColor(NewColor)
	Gui.GetFolder('Scene Lighting').SetColor(NewColor)
end)

Gui.AddInteger('Click Counter', 0).SetReadOnly()
Gui.AddText('_Info1', '(Does not count for clicking inside DebuGui)')
	.SetName('^')
	.SetValueTextColor(Color3.fromRGB(100, 100, 100))

-- Fake Chat
local Gui_Chat = Gui.AddFolder('Chat', false)

Gui_Chat.AddLongString('Chat', 'Insert Text Here', true)
	.SetHeightBasedOnLineCount(4)

Gui_Chat.AddButton('Send').Listen(function()
	Chat:Chat(LocalPlayer.Character, Gui_Chat.Get('Chat').GetValue())
end)

-- Spawn Items
local Gui_Spawner = Gui.AddFolder('Object Spawning', false)

Gui_Spawner.AddButton('Spawn Sphere').Listen(function()
	local Object = Instance.new('Part')
	Object.Shape = Enum.PartType.Ball
	Object.Parent = workspace
	Object.Anchored = false
	Object.CanCollide = true
	Object.Color = Color3.fromRGB(240, 100, 100)
	Object.Position = LocalPlayer.Character.PrimaryPart.Position + Vector3.new(Camera.CFrame.LookVector.X, 0, Camera.CFrame.LookVector.Z).Unit * 3.0
	Object.Size = Vector3.new(3, 3, 3)
	Debris:AddItem(Object, 5)
end)

Gui_Spawner.AddButton('Spawn Block').Listen(function()
	local Object = Instance.new('Part')
	Object.Shape = Enum.PartType.Block
	Object.Parent = workspace
	Object.Anchored = false
	Object.CanCollide = true
	Object.Color = Color3.fromRGB(100, 240, 100)
	Object.Position = LocalPlayer.Character.PrimaryPart.Position + Vector3.new(Camera.CFrame.LookVector.X, 0, Camera.CFrame.LookVector.Z).Unit * 3.0
	Object.Size = Vector3.new(3, 3, 3)
	Object.Orientation = Vector3.new(RNG:NextNumber(0, 180), RNG:NextNumber(0, 180), RNG:NextNumber(0, 180))
	Debris:AddItem(Object, 5)
end)

Gui_Spawner.AddButton('Spawn Cylinder').Listen(function()
	local Object = Instance.new('Part')
	Object.Shape = Enum.PartType.Cylinder
	Object.Parent = workspace
	Object.Anchored = false
	Object.CanCollide = true
	Object.Color = Color3.fromRGB(100, 100, 240)
	Object.Position = LocalPlayer.Character.PrimaryPart.Position + Vector3.new(Camera.CFrame.LookVector.X, 0, Camera.CFrame.LookVector.Z).Unit * 3.0
	Object.Size = Vector3.new(3, 3, 3)
	Object.Orientation = Vector3.new(RNG:NextNumber(0, 180), RNG:NextNumber(0, 180), RNG:NextNumber(0, 180))
	Debris:AddItem(Object, 5)
end)

Gui_Spawner.AddButton('Spawn Platform').Listen(function()
	local Object = Instance.new('Part')
	Object.Transparency = 0.5
	Object.Shape = Enum.PartType.Cylinder
	Object.Parent = workspace
	Object.Anchored = true
	Object.CanCollide = true
	Object.Color = Color3.fromRGB(175, 175, 175)
	Object.Position = LocalPlayer.Character.PrimaryPart.Position + LocalPlayer.Character.PrimaryPart.CFrame.LookVector * 7.0 + Vector3.new(0, 4, 0)
	Object.Size = Vector3.new(1, 8, 8)
	Object.Orientation = Vector3.new(0, 0, 90)
	Debris:AddItem(Object, 5)
end)


-- Player
local Gui_PlayerSettings = Gui.AddFolder('Player Settings', false)

Gui_PlayerSettings.AddSeparator('Read Only')
	.SetNameColor(Color3.fromRGB(237, 255, 172))
	.SetFrameColor(Color3.fromRGB(39, 167, 92))

-- Jump Counter
Gui_PlayerSettings.AddInteger('Jump Counter', 0).SetReadOnly()

-- Teleport
Gui_PlayerSettings.AddSeparator('Teleport')
	.SetNameColor(Color3.fromRGB(237, 255, 172))
	.SetFrameColor(Color3.fromRGB(39, 167, 92))

Gui_PlayerSettings.AddButton('Teleport_White_Spawn')
	.SetName('White Spawn')
	.SetColor(Color3.fromRGB(255, 255, 255))
	.SetNameColor(Color3.fromRGB(0, 0, 0))
	.Listen(function()
		if LocalPlayer.Character and LocalPlayer.Character.PrimaryPart then
			LocalPlayer.Character:SetPrimaryPartCFrame(Workspace.Spawn_White.CFrame + Vector3.new(0, 4, 0))
		end
	end)

Gui_PlayerSettings.AddButton('Teleport_Red_Spawn')
	.SetName('Red Spawn')
	.SetColor(Color3.fromRGB(240, 100, 100))
	.SetNameColor(Color3.fromRGB(0, 0, 0))
	.Listen(function()
		if LocalPlayer.Character and LocalPlayer.Character.PrimaryPart then
			LocalPlayer.Character:SetPrimaryPartCFrame(Workspace.Spawn_Red.CFrame + Vector3.new(0, 4, 0))
		end
	end)

Gui_PlayerSettings.AddButton('Teleport_Green_Spawn')
	.SetName('Green Spawn')
	.SetColor(Color3.fromRGB(100, 240, 100))
	.SetNameColor(Color3.fromRGB(0, 0, 0))
	.Listen(function()
		if LocalPlayer.Character and LocalPlayer.Character.PrimaryPart then
			LocalPlayer.Character:SetPrimaryPartCFrame(Workspace.Spawn_Green.CFrame + Vector3.new(0, 4, 0))
		end
	end)

-- WalkSpeed
Gui_PlayerSettings.AddSeparator('WalkSpeed')
	.SetNameColor(Color3.fromRGB(237, 255, 172))
	.SetFrameColor(Color3.fromRGB(39, 167, 92))

Gui_PlayerSettings.AddNumberSlider('WalkSpeed_Value', StarterPlayer.CharacterWalkSpeed, 0, 50, 1, true)
	.SetName('Value')
	.Listen(function(NewNumber)
		if Humanoid then
			LocalPlayer.Character.Humanoid.WalkSpeed = NewNumber
		end
	end)
Gui_PlayerSettings.AddButton('WalkSpeed_Reset')
	.SetName('Reset')
	.Listen(function()
		Gui_PlayerSettings.Get('WalkSpeed_Value').SetValue(StarterPlayer.CharacterWalkSpeed)
	end)

-- JumpPower
Gui_PlayerSettings.AddSeparator('JumpPower')
	.SetNameColor(Color3.fromRGB(237, 255, 172))
	.SetFrameColor(Color3.fromRGB(39, 167, 92))

Gui_PlayerSettings.AddNumberSlider('JumpPower_Value', StarterPlayer.CharacterJumpPower, 0, 100, 1, true)
	.SetName('Value')
	.Listen(function(NewNumber)
		if Humanoid then
			LocalPlayer.Character.Humanoid.JumpPower = NewNumber
		end
	end)
Gui_PlayerSettings.AddButton('JumpPower_Reset')
	.SetName('Reset')
	.Listen(function()
		Gui_PlayerSettings.Get('JumpPower_Value').SetValue(StarterPlayer.CharacterJumpPower)
	end)

-- Humanoid State
Gui_PlayerSettings.AddSeparator('Humanoid State')
	.SetNameColor(Color3.fromRGB(237, 255, 172))
	.SetFrameColor(Color3.fromRGB(39, 167, 92))

Gui_PlayerSettings.AddButton('ChangeState_Jump')
	.SetName('Jump')
	.Listen(function()
		if Humanoid then
			LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
		end
	end)

Gui_PlayerSettings.AddButton('ChangeState_Ragdoll')
	.SetName('Ragdoll')
	.Listen(function()
		if Humanoid then
			LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Ragdoll)
		end
	end)

Gui_PlayerSettings.AddButton('ChangeState_Dead')
	.SetName('Dead')
	.Listen(function()
		if Humanoid then
			LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Dead)
		end
	end)


-- Objects
local Gui_Objects = Gui.AddFolder('Scene Objects', false)

Gui_Objects.AddSeparator('BLOCK')

Gui_Objects.AddColorSliderHSV('Block Color', workspace.SceneObject_Block.Color).Listen(function(NewColor)
	workspace.SceneObject_Block.Color = NewColor
end)
Gui_Objects.AddNumberSlider('Block Transparency', workspace.SceneObject_Block.Transparency, 0.0, 1.0, 1).Listen(function(NewNumber)
	workspace.SceneObject_Block.Transparency = NewNumber
end)
Gui_Objects.AddBool('Block Anchored', workspace.SceneObject_Block.Anchored).Listen(function(NewBool)
	workspace.SceneObject_Block.Anchored = NewBool
end)
Gui_Objects.AddBool('Block CanCollide', workspace.SceneObject_Block.CanCollide).Listen(function(NewBool)
	workspace.SceneObject_Block.CanCollide = NewBool
end)
Gui_Objects.AddVector3('Block Orientation', workspace.SceneObject_Block.Orientation).Listen(function(NewVec3)
	workspace.SceneObject_Block.Orientation = NewVec3
end)
Gui_Objects.AddVector3('Block Size', workspace.SceneObject_Block.Size).Listen(function(NewVec3)
	workspace.SceneObject_Block.Size = NewVec3
end)
Gui_Objects.AddBool('Block Cast Shadow', workspace.SceneObject_Block.CastShadow).Listen(function(NewBool)
	workspace.SceneObject_Block.CastShadow = NewBool
end)
Gui_Objects.AddString('Block Text', workspace.SceneObject_Block.SurfaceGui.TextLabel.Text, true).Listen(function(NewString)
	workspace.SceneObject_Block.SurfaceGui.TextLabel.Text = NewString
end)
Gui_Objects.AddBool('Block Text Visible', workspace.SceneObject_Block.SurfaceGui.Enabled, true).Listen(function(NewBool)
	workspace.SceneObject_Block.SurfaceGui.Enabled = NewBool
end)

Gui_Objects.AddSeparator('SPHERE')

Gui_Objects.AddColorSliderHSV('Sphere Color', workspace.SceneObject_Sphere.Color).Listen(function(NewColor)
	workspace.SceneObject_Sphere.Color = NewColor
end)
Gui_Objects.AddBool('Sphere CanCollide', workspace.SceneObject_Sphere.CanCollide).Listen(function(NewBool)
	workspace.SceneObject_Sphere.CanCollide = NewBool
end)
Gui_Objects.AddIntegerSlider('Sphere Size', workspace.SceneObject_Sphere.Size.X, 1, 40).Listen(function(NewNumber)
	workspace.SceneObject_Sphere.Size = Vector3.new(NewNumber, NewNumber, NewNumber)
end)

Gui_Objects.AddSeparator('CYLINDER')

Gui_Objects.AddColorSliderHSV('Cylinder Color', workspace.SceneObject_Cylinder.Color).Listen(function(NewColor)
	workspace.SceneObject_Cylinder.Color = NewColor
end)
Gui_Objects.AddVector3('Cylinder Orientation', workspace.SceneObject_Cylinder.Orientation).Listen(function(NewVec3)
	workspace.SceneObject_Cylinder.Orientation = NewVec3
end)
Gui_Objects.AddNumberSlider('Cylinder Length', workspace.SceneObject_Cylinder.Size.X, 1.0, 10.0, 2).Listen(function(NewNumber)
	workspace.SceneObject_Cylinder.Size = Vector3.new(NewNumber, workspace.SceneObject_Cylinder.Size.Y, workspace.SceneObject_Cylinder.Size.Z)
end)
Gui_Objects.AddNumberSlider('Cylinder Radius', workspace.SceneObject_Cylinder.Size.Y, 0.5, 30.0, 2).Listen(function(NewNumber)
	workspace.SceneObject_Cylinder.Size = Vector3.new(workspace.SceneObject_Cylinder.Size.X, NewNumber, NewNumber)
end)

local MaterialEnumsChoices = {
	['SmoothPlastic'] = Enum.Material.SmoothPlastic;
	['Plastic'] = Enum.Material.Plastic;
	['Grass'] = Enum.Material.Grass;
	['Cobblestone'] = Enum.Material.Cobblestone;
	['Brick'] = Enum.Material.Brick;
	['CorrodedMetal'] = Enum.Material.CorrodedMetal;
}
Gui_Objects.AddListPicker('Cylinder Material', 'Plastic', {
	'SmoothPlastic';
	'Plastic';
	'Grass';
	'Cobblestone';
	'Brick';
	'CorrodedMetal';
}, false).Listen(function(NewChoice)
	workspace.SceneObject_Cylinder.Material = MaterialEnumsChoices[NewChoice]
end)

-- Lighting --
local Gui_Lighting = Gui.AddFolder('Scene Lighting', false)

Gui_Lighting.AddColorSliderRGB('Ambient', Lighting.Ambient, 3).Listen(function(NewColor)
	Lighting.Ambient = NewColor
end)

Gui_Lighting.AddNumberSlider('Brightness', Lighting.Brightness, 0, 10, 3).Listen(function(NewNumber)
	Lighting.Brightness = NewNumber
end)

Gui_Lighting.AddColorSliderRGBInt('ColorShift_Bottom', Lighting.ColorShift_Bottom).Listen(function(NewColor)
	Lighting.ColorShift_Bottom = NewColor
end)

Gui_Lighting.AddColorSliderRGBInt('ColorShift_Top', Lighting.ColorShift_Bottom).Listen(function(NewColor)
	Lighting.ColorShift_Bottom = NewColor
end)

Gui_Lighting.AddNumberSlider('EnvironmentDiffuseScale', Lighting.EnvironmentDiffuseScale, 0, 1, 3).Listen(function(NewNumber)
	Lighting.EnvironmentDiffuseScale = NewNumber
end)

Gui_Lighting.AddNumberSlider('EnvironmentSpecularScale', Lighting.EnvironmentSpecularScale, 0, 1, 3).Listen(function(NewNumber)
	Lighting.EnvironmentSpecularScale = NewNumber
end)

Gui_Lighting.AddBool('GlobalShadows', Lighting.GlobalShadows).Listen(function(NewBool)
	Lighting.GlobalShadows = NewBool
end)

Gui_Lighting.AddColorSliderRGBInt('OutdoorAmbient', Lighting.OutdoorAmbient).Listen(function(NewColor)
	Lighting.OutdoorAmbient = NewColor
end)

Gui_Lighting.AddNumberSlider('ShadowSoftness', Lighting.ShadowSoftness, 0, 1, 3).Listen(function(NewNumber)
	Lighting.ShadowSoftness = NewNumber
end)

Gui_Lighting.AddNumberSlider('ClockTime', Lighting.ClockTime, 0, 24, 3).Listen(function(NewNumber)
	Lighting.ClockTime = NewNumber
end)

Gui_Lighting.AddNumberSlider('GeographicLatitude', Lighting.GeographicLatitude, 0, 360, 1).Listen(function(NewNumber)
	Lighting.GeographicLatitude = NewNumber
end)

Gui_Lighting.AddNumberSlider('ExposureCompensation', Lighting.ExposureCompensation, -3, 3, 3).Listen(function(NewNumber)
	Lighting.ExposureCompensation = NewNumber
end)]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">69021653e03abbda01910337015707b0</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="StarterCharacterScripts" referent="RBX784DD2D75896453CBC932082A018EB6E">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">StarterCharacterScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">46009198e08047480187a7bd0001916f</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBX8BD11B4EA9EC417D9F72C77D94CDC8AE">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StarterPack</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190dd</UniqueId>
		</Properties>
	</Item>
	<Item class="StarterGui" referent="RBX3CC98BF0C189472BA8B7D78F8463EC76">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StarterGui</string>
			<bool name="ResetPlayerGuiOnSpawn">true</bool>
			<token name="ScreenOrientation">4</token>
			<bool name="ShowDevelopmentGui">true</bool>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190de</UniqueId>
			<token name="VirtualCursorMode">0</token>
		</Properties>
	</Item>
	<Item class="LocalizationService" referent="RBXC9536EBFA4D34F90B6A8927B8DCA3354">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">LocalizationService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190e0</UniqueId>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBXC28881E1C3AB4F49A0AEF8FBCAAEB2F6">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Teleport Service</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190e4</UniqueId>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBXA4C93A7A4C16442B9D70C8D440EF9817">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">CollectionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190e6</UniqueId>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBXAC709B308EC64D858B34AC329139491B">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">PhysicsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190e7</UniqueId>
		</Properties>
	</Item>
	<Item class="Geometry" referent="RBXF2590483C762486E87E49C18DE5F0046">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Geometry</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190e9</UniqueId>
		</Properties>
	</Item>
	<Item class="InsertService" referent="RBX6E99962C10DD4B6E852346A4FA0E33DD">
		<Properties>
			<bool name="AllowClientInsertModels">false</bool>
			<bool name="AllowInsertFreeModels">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">InsertService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190eb</UniqueId>
		</Properties>
		<Item class="StringValue" referent="RBX6C4CC05201354931886307786067D19B">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">InsertionHash</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">46009198e08047480187a7bd00019170</UniqueId>
				<string name="Value">{F812C407-E2F0-4EE2-B6F1-2FD92CC10199}</string>
			</Properties>
		</Item>
	</Item>
	<Item class="GamePassService" referent="RBX606B6E0AC63243A2A41978C2C1CA3680">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">GamePassService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190ec</UniqueId>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBXDEB24AE185D844C49D50855D2473C9FB">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<int name="MaxItems">1000</int>
			<string name="Name">Debris</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190ed</UniqueId>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBX0B1D24C4DAE645F291F173EA1D531BDC">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">CookiesService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190ee</UniqueId>
		</Properties>
	</Item>
	<Item class="VRService" referent="RBXAC03B3D7B0844158A7DAC06C6DDA44CB">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">VRService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190f8</UniqueId>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBX903ABB01FCB2462A87B4896F3EE05B64">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ContextActionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190f9</UniqueId>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBX9AA273FF25E14ED59D1CD210918806BB">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190fb</UniqueId>
		</Properties>
	</Item>
	<Item class="AssetService" referent="RBXFEA31424DF984D348D91B340252B067E">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">AssetService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190fc</UniqueId>
		</Properties>
	</Item>
	<Item class="TouchInputService" referent="RBX86118045108A4982993EDD4AA6149507">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TouchInputService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000190fd</UniqueId>
		</Properties>
	</Item>
	<Item class="AnalyticsService" referent="RBX64C90DC54A3C44758E53D323108690BF">
		<Properties>
			<string name="ApiKey"></string>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">AnalyticsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd00019100</UniqueId>
		</Properties>
		<Item class="ModuleScript" referent="RBXE6C7FF6F133343D4B994111A0016666E">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">RobloxLSP_Settings</string>
				<string name="ScriptGuid">{50C8024D-9D1B-4B96-B76A-CF05D4DDA29D}</string>
				<ProtectedString name="Source"><![CDATA[return {
	port = 27843,
	startAutomatically = false,
	exclude = {
		-- game:GetService("Workspace")
	}
}]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">46009198e08047480187a7bd00019171</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="Selection" referent="RBXC635D993CDD7496DB244272DFD349D0F">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Selection</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd00019103</UniqueId>
		</Properties>
	</Item>
	<Item class="ServerScriptService" referent="RBX583A2BA252AE4F2392693E328BAFFC7F">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="LoadStringEnabled">false</bool>
			<string name="Name">ServerScriptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd0001910c</UniqueId>
		</Properties>
	</Item>
	<Item class="ServerStorage" referent="RBX102C832A83EC4248A091891B46B46D7D">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ServerStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd0001910d</UniqueId>
		</Properties>
	</Item>
	<Item class="ReplicatedStorage" referent="RBXADFAD439F7F14B9D943369167C9AEC03">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ReplicatedStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd0001910e</UniqueId>
		</Properties>
		<Item class="ModuleScript" referent="RBX2B43BB612C7543259D0718CEB23C2CBA">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">DebuGui</string>
				<string name="ScriptGuid">{DC43DC3C-AA18-4070-96E0-F96134D67DE0}</string>
				<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Module
local DebuGui = {}

-- Services
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

-- Ignore self if Server
if RunService:IsServer() then
	error("! DebuGui can only be used Client-Side")
	return {}
end

-- Modules
local GuiWindow = require(script.GuiWindow)
local Utility = require(script.Utility)
local Constants = require(script.Constants)

-- Defines --
local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild('PlayerGui')
local ScreenGuiReference = script.DebuGui_UI

-- Module Data
DebuGui.ScreenGuis = {}
DebuGui.ScreenGuiCount = 0
DebuGui.MinimizeOrder = {} -- Array of Guis that are minimized

----------------
-- Public API --
----------------
function DebuGui.GetWindow(GuiName)
	if DebuGui.ScreenGuis[GuiName] then
		return DebuGui.ScreenGuis[GuiName].API
	end
	return nil
end

function DebuGui.WaitForWindow(GuiName, TimeOutTime)
	-- Wait a specific amount of time
	if TimeOutTime and typeof(TimeOutTime) == 'number' then
		local FailTime = os.clock() + TimeOutTime;
		while not DebuGui.ScreenGuis[GuiName] and os.clock() < FailTime do
			task.wait()
		end
		return DebuGui.GetWindow(GuiName)

	-- Yield forever until window is available
	else
		while not DebuGui.ScreenGuis[GuiName] do
			task.wait(1)
		end
		return DebuGui.ScreenGuis[GuiName].API
	end
end

function DebuGui.NewWindow(GuiName, InitData)
	-- Assert
	Utility.QuickTypeAssert(GuiName, 'string')

	-- Double Check
	if DebuGui.ScreenGuis[GuiName] then
		warn('Gui already exists with the name ('..GuiName..')')
		return
	end

	-- Data
	DebuGui.ScreenGuis[GuiName] = {}

	-- Create New Gui
	local ScreenGui = ScreenGuiReference:Clone()
	ScreenGui.Parent = PlayerGui
	ScreenGui.Name = 'DebuGui_'..GuiName

	-- Create Gui API
	local API = GuiWindow.New(DebuGui, ScreenGui, InitData)

	-- Store
	DebuGui.ScreenGuis[GuiName].ScreenGui = ScreenGui
	DebuGui.ScreenGuis[GuiName].API = API
	DebuGui.ScreenGuiCount += 1

	return API
end

function DebuGui.GetConstants()
	return Constants
end

return DebuGui]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">46009198e08047480187a7bd00019172</UniqueId>
			</Properties>
			<Item class="ModuleScript" referent="RBX15B2D72FFBA44913A7DA9A6C083FA1B8">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Dragger</string>
					<string name="ScriptGuid">{9059B306-0BF1-4EBC-A03A-15C61F1C0312}</string>
					<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Module
local Dragger = {}

-- Services
local Players = game:GetService("Players")

-- Modules
local Utility = require(script.Parent.Utility)

-- Defines
local Player = Players.LocalPlayer
local Mouse = Player:GetMouse()
local Draggers = {}

-- Helper Functions --
local function DragEndGlobal()
	for __, Class in ipairs(Draggers) do
		if Class.IsDragging and Class.Listener_OnDragEnd then
			Class.Listener_OnDragEnd()
		end
		Class.IsDragging = false
	end
end
local function DragGlobal()
	for __, Class in ipairs(Draggers) do
		if Class.IsDragging and Class.Listener_OnDrag then
			local Delta = Vector2.new(Mouse.X - Class.MouseClickPos.X, Mouse.Y - Class.MouseClickPos.Y)    
			Class.Listener_OnDrag(Delta)
			return -- Only 1 thing can be dragged at once
		end
	end
end

-- Events
Mouse.Button1Up:Connect(DragEndGlobal)
Mouse.Move:Connect(DragGlobal)

-- Public API --
function Dragger.new(DraggerButton)

	-- Defines
    local Class = {
        IsDragging = false,
        MouseClickPos = Vector2.new(0, 0),
        -- Listeners
        Listener_OnDrag = nil,
        Listener_OnDragStart = nil,
        Listener_OnDragEnd = nil,
    }
	local Button = DraggerButton
	local Connections = {}

	-- Setup
    table.insert(Connections, Button.MouseButton1Down:Connect(function()
        Class.MouseClickPos = Vector2.new(Mouse.X, Mouse.Y)
        Class.IsDragging = true
        if Class.Listener_OnDragStart then
            Class.Listener_OnDragStart()
        end
    end))
    table.insert(Connections, Button.MouseButton1Up:Connect(function()
		DragEndGlobal()
    end))

	-- Public API --
    function Class.OnDrag(func)
        Utility.QuickTypeAssert(func, 'function')
        Class.Listener_OnDrag = func
    end

    function Class.OnDragStart(func)
        Utility.QuickTypeAssert(func, 'function')
        Class.Listener_OnDragStart = func
    end

    function Class.OnDragEnd(func)
        Utility.QuickTypeAssert(func, 'function')
        Class.Listener_OnDragEnd = func
    end

    function Class.Destroy()
        for __, Connection in ipairs(Connections) do
            Connection:Disconnect()
        end
        Connections = nil
        Class.Listener_OnDrag = nil
        Class.Listener_OnDragStart = nil
        Class.Listener_OnDragEnd = nil
		--
		local Index = Utility.FindArrayIndexByValue(Draggers, Class)
		assert(Index ~= nil, 'Dragger Class is nil')
		table.remove(Draggers, Index)
    end

	-- Add
	table.insert(Draggers, Class)

    return Class
end

return Dragger]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">46009198e08047480187a7bd00019173</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX14C10991F8164E4D8644F5294EAFBFE1">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Utility</string>
					<string name="ScriptGuid">{48B40446-D8BF-4438-96C7-4E33AF0A43AB}</string>
					<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

local Utility = {}

function Utility.QuickTypeAssert(Object, Type)
    assert(typeof(Object) == Type, "Invalid Type, expected "..Type.." type, got ("..typeof(Object)..")")
end

function Utility.FindArrayIndexByValue(array, value)
	Utility.QuickTypeAssert(array, 'table')
	for index, otherValue in ipairs(array) do
		if otherValue == value then
			return index
		end 
	end
	return nil
end

function Utility.IsFolderVisible(API, CheckSelf)

	if CheckSelf and API.IsVisible and not API.IsVisible() then
		return false
	end
	while API ~= nil do
		API = API._ParentAPI
		if API ~= nil and API.IsVisible and not API.IsVisible() then
			return false
		end
	end
	return true
end

function Utility.ModifyCanvasHeight(DrawFrame, Amount)
	DrawFrame.CanvasSize = UDim2.fromOffset(0, DrawFrame.CanvasSize.Y.Offset + Amount)
end

return Utility]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">46009198e08047480187a7bd00019174</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXF5BC51AE4BE44207A8166FF7250A7943">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">GuiWindow</string>
					<string name="ScriptGuid">{9523E78C-F780-4C51-A911-7B87B00FD658}</string>
					<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Module
local GuiWindow = {}

-- Services
local TextService = game:GetService("TextService")
local GuiService = game:GetService("GuiService")

-- Modules
local Dragger = require(script.Parent.Dragger)
local GizmoAPI = require(script.GizmoAPI)
local Utility = require(script.Parent.Utility)

-- Constants
local MIN_GUI_WIDTH = 60
local MIN_GUI_HEIGHT = 72
local TITLEBAR_HEIGHT = 20
local TITLEBAR_ICONSIZE = 20
local TITLEBAR_WIDTH_PADDING_TOTAL = 8
local DISPLAY_ORDER_MINIMUM = 100 -- All Guis will start with this number and increment further

-- Defines
local VerticalLayout = Instance.new('UIListLayout')
VerticalLayout.FillDirection = Enum.FillDirection.Vertical
VerticalLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
VerticalLayout.SortOrder = Enum.SortOrder.LayoutOrder
VerticalLayout.VerticalAlignment = Enum.VerticalAlignment.Top

----------------
-- Public API --
----------------
function GuiWindow.New(DebuGui, ScreenGui, InitData)
	-- Defaults
	InitData.X = InitData.X or 100
	InitData.Y = (InitData.Y or 100) - GuiService:GetGuiInset().Y
	InitData.Width = InitData.Width or 300
	InitData.Height = InitData.Height or 300
	InitData.Title = InitData.Title or ""

	-- Private Data
	local MasterFrame = ScreenGui.MasterFrame
	local API = GizmoAPI.New(MasterFrame.DrawFrame)
	local IsVisible = true
	local IsMinimized = false
	local SizeBeforeMinimized = nil
	local PosBeforeMinimized = nil
	local SizeBeforeHidden = nil
	local TitleSize = TextService:GetTextSize(InitData.Title, MasterFrame.TopBar.Title.TextSize, MasterFrame.TopBar.Title.Font, MasterFrame.TopBar.Title.AbsoluteSize)
	local Dragger_MasterPos;
	local Dragger_MasterSize;
	local TitleDragger = Dragger.new(MasterFrame.TopBar.Title)
	local CoreDragger = Dragger.new(MasterFrame.DragCore)
	local ResizeDragger = Dragger.new(MasterFrame.ResizeBtn)

	-- Setup
	ScreenGui.DisplayOrder = DISPLAY_ORDER_MINIMUM + DebuGui.ScreenGuiCount
	ScreenGui.Enabled = true
	MasterFrame.Position = UDim2.fromOffset(InitData.X, InitData.Y)
	MasterFrame.Size = UDim2.fromOffset(math.max(MIN_GUI_WIDTH, InitData.Width), math.max(MIN_GUI_HEIGHT, InitData.Height))
	MasterFrame.TopBar.Title.Text = InitData.Title
	VerticalLayout:Clone().Parent = MasterFrame.DrawFrame

	----------------------
	-- Helper Functions --
	----------------------

	local function UpdateVisibility()
		if not IsVisible or IsMinimized then
			MasterFrame.DrawFrame.Visible = false
			MasterFrame.ResizeBtn.Visible = false
			MasterFrame.ResizeBtn.Active = false
		else
			MasterFrame.DrawFrame.Visible = true
			MasterFrame.ResizeBtn.Visible = true
			MasterFrame.ResizeBtn.Active = false
		end
	end

	local function SetMinimized(State)
		-- Abort if no change
		if State == IsMinimized then return end

		-- Pre Data
		if not IsMinimized then
			PosBeforeMinimized = MasterFrame.AbsolutePosition
			SizeBeforeMinimized = MasterFrame.AbsoluteSize
		end

		-- Data
		IsMinimized = not IsMinimized

		-- Minimize
		if IsMinimized then
			-- Text
			MasterFrame.TopBar.MinimizeBtn.Text = '+'

			-- Find X Position at end of Minimized List
			local XOffset = 0
			for __, Gui in ipairs(DebuGui.MinimizeOrder) do
				XOffset += Gui.MasterFrame.AbsoluteSize.X
			end
			-- Placed Minimized Position
			MasterFrame.Position = UDim2.new(0, XOffset, 1, -TITLEBAR_HEIGHT)

			-- Size
			MasterFrame.Size = UDim2.new(0, TitleSize.X + TITLEBAR_ICONSIZE * 2 + TITLEBAR_WIDTH_PADDING_TOTAL, 0, TITLEBAR_HEIGHT)

			-- Store Window in Minimized Array
			table.insert(DebuGui.MinimizeOrder, ScreenGui)

			-- Close Any Modals opened
			API._ModalChoiceSelected(nil)

		-- Maximize
		else
			-- Text
			MasterFrame.TopBar.MinimizeBtn.Text = '-'
			-- Pos
			MasterFrame.Position = UDim2.fromOffset(PosBeforeMinimized.X, PosBeforeMinimized.Y)
			-- Size
			MasterFrame.Size = UDim2.fromOffset(SizeBeforeMinimized.X, SizeBeforeMinimized.Y)

			-- Remove Window from Minimize List
			local Index = Utility.FindArrayIndexByValue(DebuGui.MinimizeOrder, ScreenGui)
			table.remove(DebuGui.MinimizeOrder, Index)

			-- Reorder all Minimized windows
			local XOffset = 0
			for __, Gui in ipairs(DebuGui.MinimizeOrder) do
				Gui.MasterFrame.Position = UDim2.new(
					0, XOffset,
					Gui.MasterFrame.Position.Y.Scale, Gui.MasterFrame.Position.Y.Offset
				)
				XOffset += Gui.MasterFrame.AbsoluteSize.X
			end
		end

		-- Visibility
		UpdateVisibility()
	end

	local function SetVisible(State)
		-- Abort if no change
		if State == IsVisible then return end
		if IsMinimized then return end

		-- Pre Data
		if IsVisible then
			SizeBeforeHidden = MasterFrame.AbsoluteSize
		end

		-- Data
		IsVisible = not IsVisible

		-- Close Any Modals opened
		if not IsVisible then
			API._ModalChoiceSelected(nil)
		end

		-- Text
		if IsVisible then
			MasterFrame.TopBar.DropDownBtn.Text = 'v'
		else
			MasterFrame.TopBar.DropDownBtn.Text = '>'
		end

		-- Pos/Size
		if IsVisible then
			MasterFrame.Size = UDim2.fromOffset(SizeBeforeHidden.X, SizeBeforeHidden.Y)
		else
			MasterFrame.Size = UDim2.fromOffset(MasterFrame.AbsoluteSize.X, TITLEBAR_HEIGHT)
		end

		-- Visibility
		UpdateVisibility()
	end

	--------------
	-- Draggers --
	--------------

	-- Drag Position of MasterFrame
	TitleDragger.OnDragStart(function()
		if not IsMinimized then
			API.BringGuiForward(ScreenGui)
			Dragger_MasterPos = MasterFrame.AbsolutePosition
		end
	end)
	TitleDragger.OnDrag(function(Delta)
		if not IsMinimized then
			MasterFrame.Position = UDim2.fromOffset(Dragger_MasterPos.X + Delta.X, Dragger_MasterPos.Y + Delta.Y)
		end
	end)

	-- Drag Center of DrawFrame
	CoreDragger.OnDragStart(function()
		if IsVisible and not IsMinimized then
			API.BringGuiForward(ScreenGui)
			Dragger_MasterPos = MasterFrame.AbsolutePosition
		end
	end)
	CoreDragger.OnDrag(function(Delta)
		if IsVisible and not IsMinimized then
			MasterFrame.Position = UDim2.fromOffset(Dragger_MasterPos.X + Delta.X, Dragger_MasterPos.Y + Delta.Y)
		end
	end)

	-- Drag ResizeBtn to Resize
	ResizeDragger.OnDragStart(function()
		API.BringGuiForward(ScreenGui)
		if IsVisible and not IsMinimized then
			Dragger_MasterSize = MasterFrame.AbsoluteSize
		end
	end)
	ResizeDragger.OnDrag(function(Delta)
		if IsVisible and not IsMinimized then
			local NewWidth = math.max(Dragger_MasterSize.X + Delta.X, MIN_GUI_WIDTH)
			local NewHeight = math.max(Dragger_MasterSize.Y + Delta.Y, MIN_GUI_HEIGHT)
			MasterFrame.Size = UDim2.fromOffset(NewWidth, NewHeight)
		end
	end)

	-------------
	-- Buttons --
	-------------

	-- Toggle Visibility
	MasterFrame.TopBar.DropDownBtn.MouseButton1Down:Connect(function()
		API.BringGuiForward(ScreenGui)
		SetVisible(not IsVisible)
	end)

	-- Toggle Minimize Mode
	MasterFrame.TopBar.MinimizeBtn.MouseButton1Down:Connect(function()
		API.BringGuiForward(ScreenGui)
		SetMinimized(not IsMinimized)
	end)

	-- Modal Lock closes Modal
	MasterFrame.ModalLock.MouseButton1Down:Connect(function()
		API._ModalChoiceSelected(nil)
	end)

	----------------
	-- Public API --
	----------------

	-- Make Gui appear in front of all other Guis
	function API.BringGuiForward(ChosenGui)

		local IDName = string.sub(ChosenGui.Name, 9) -- Ignoring 'DebuGui_' prefix

		-- Safety Check
		if not DebuGui.ScreenGuis[IDName] then
			return
		end

		-- All Guis in front of it go back 1 step
		for __, Data in pairs(DebuGui.ScreenGuis) do
			if Data.ScreenGui.DisplayOrder > ChosenGui.DisplayOrder then
				Data.ScreenGui.DisplayOrder -= 1
			end
		end
		-- Gui becomes largest display order
		ChosenGui.DisplayOrder = DISPLAY_ORDER_MINIMUM + DebuGui.ScreenGuiCount - 1
	end

	function API.GetScreenGui()
		return ScreenGui
	end

	function API.Destroy()
		API.RemoveAll()
		ScreenGui:Destroy()
	end

	function API.Enable()
		ScreenGui.Enabled = true
		return API
	end

	function API.Disable()
		ScreenGui.Enabled = false
		return API
	end

	function API.ToggleEnabled()
		ScreenGui.Enabled = not ScreenGui.Enabled
		return API
	end

	function API.Show()
		SetVisible(true)
		return API
	end

	function API.Hide()
		SetVisible(false)
		return API
	end

	function API.IsVisible()
		return IsVisible
	end

	function API.ToggleVisibility()
		SetVisible(not IsVisible)
		return API
	end

	function API.Minimize()
		SetMinimized(true)
		return API
	end

	function API.Maximize()
		SetMinimized(false)
		return API
	end

	function API.IsMinimized()
		return IsMinimized
	end

	function API.ToggleMinimized()
		SetMinimized(not IsMinimized)
		return API
	end

	function API.SetTopBarColor(NewColor)
		Utility.QuickTypeAssert(NewColor, 'Color3')
		MasterFrame.TopBar.BackgroundColor3 = NewColor
		return API
	end

	function API.SetScrollbarWidth(Width)
		Utility.QuickTypeAssert(Width, 'number')
		MasterFrame.DrawFrame.ScrollBarThickness = Width
		return API
	end

	function API.SetScrollbarColor(NewColor)
		Utility.QuickTypeAssert(NewColor, 'Color3')
		MasterFrame.DrawFrame.ScrollBarImageColor3 = NewColor
		return API
	end

	function API.SetPosition(X, Y)
		assert(typeof(X) == 'number', 'X Position must be of type number')
		assert(typeof(Y) == 'number', 'X Position must be of type number')
		if not IsMinimized then
			MasterFrame.Position = UDim2.fromOffset(X, Y - GuiService:GetGuiInset().Y)
		end
		return API
	end

	function API.SetSize(W, H)
		assert(typeof(W) == 'number', 'X Position must be of type number')
		assert(typeof(H) == 'number', 'X Position must be of type number')
		if IsVisible and not IsMinimized then
			MasterFrame.Size = UDim2.fromOffset(math.max(MIN_GUI_WIDTH, W), math.max(MIN_GUI_HEIGHT, H))
		end
		return API
	end

	return API
end

return GuiWindow]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">46009198e08047480187a7bd00019175</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX6AAEF307BA794F74B6986ACAB2E06CEC">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">GizmoAPI</string>
						<string name="ScriptGuid">{0E86CDF6-F1A5-48CC-B359-F06A4E76B059}</string>
						<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Module
local GizmoAPI = {}

-- Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local HttpService = game:GetService("HttpService")
local TextService = game:GetService("TextService")

-- Define
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local Camera = Workspace.CurrentCamera
local DebuGuiRef = script.Parent.Parent

-- Modules
local Utility = require(script.Parent.Parent.Utility)
local Dragger = require(script.Parent.Parent.Dragger)
local GizmoBool = require(script.GizmoBool)
local GizmoButton = require(script.GizmoButton)
local GizmoFolder = require(script.GizmoFolder)
local GizmoInteger = require(script.GizmoInteger)
local GizmoIntegerSlider = require(script.GizmoIntegerSlider)
local GizmoListPicker = require(script.GizmoListPicker)
local GizmoLongString = require(script.GizmoLongString)
local GizmoNumber = require(script.GizmoNumber)
local GizmoNumberSlider = require(script.GizmoNumberSlider)
local GizmoSeparator = require(script.GizmoSeparator)
local GizmoString = require(script.GizmoString)
local GizmoText = require(script.GizmoText)
local GizmoVector2 = require(script.GizmoVector2)
local GizmoVector3 = require(script.GizmoVector3)
local GizmoColorSlider = require(script.GizmoColorSlider)

-- Gizmo UI References
local GizmoUI_Button = DebuGuiRef.GizmoUI_Button
local GizmoUI_CheckBox = DebuGuiRef.GizmoUI_CheckBox
local GizmoUI_Folder = DebuGuiRef.GizmoUI_Folder
local GizmoUI_Picker = DebuGuiRef.GizmoUI_Picker
local GizmoUI_Separator = DebuGuiRef.GizmoUI_Separator
local GizmoUI_Slider = DebuGuiRef.GizmoUI_Slider
local GizmoUI_Text = DebuGuiRef.GizmoUI_Text
local GizmoUI_TextBox = DebuGuiRef.GizmoUI_TextBox
local GizmoUI_TextBox_Multi2 = DebuGuiRef.GizmoUI_TextBox_Multi2
local GizmoUI_TextBox_Multi3 = DebuGuiRef.GizmoUI_TextBox_Multi3
local GizmoUI_TextMultiline = DebuGuiRef.GizmoUI_TextMultiline
local GizmoUI_TripleSlider = DebuGuiRef.GizmoUI_TripleSlider

----------------------
-- Helper Functions --
----------------------
local function UpdateLayout(API)
	for i, GizmoData in ipairs(API._GizmosArray) do
		if i % 2 == 0 then
			GizmoData.Gui.BackgroundColor3 = Color3.new(1, 1, 1)
		else
			GizmoData.Gui.BackgroundColor3 = Color3.new(0, 0, 0)
		end
	end
end

-----------------
-- Public API --
-----------------
function GizmoAPI.New(GuiParent, MasterAPI, ParentAPI)

	------------
	-- Module --
	------------
	local API = {}
	API._GuiParent = GuiParent
	API._ParentAPI = ParentAPI
	API._MasterAPI = MasterAPI or API
	API._GizmosTable = {} -- [UniqueName] = GizmoAPI Hold all Gizmos in a table
	API._GizmosArray = {} -- {Array of GizmoAPI}
	API._GizmosFolders = {} -- [UniqueName] = Folders GizmoAPI (more specific version of _GizmosTable)
	API._Modal = {
		Lock = false,
		ListenerAPI = nil,
		Frame = nil
	}

	----------------------
	-- Helper Functions --
	----------------------
	local function TriggerNewGizmoListeners()
		if API._ParentAPI then
			for _, FolderGizmoAPI in pairs(API._ParentAPI._GizmosFolders) do
				FolderGizmoAPI._NewGizmoAdded()
			end
		end
	end
	local function AddGizmo(GIZMO_UI, GIZMO_CLASS, UniqueName, ...)
		-- Doop Check
		if API._GizmosTable[UniqueName] then
			warn('Gizmo already exists ('..UniqueName..')')
			return
		end
		UniqueName = UniqueName or HttpService:GenerateGUID(false)

		-- New UI
		local GizmoUI = GIZMO_UI:Clone()
		GizmoUI.Parent = GuiParent
		GizmoUI.Name = UniqueName

		-- System
		local NewGizmoAPI = GIZMO_CLASS.new(GizmoUI, UniqueName, ...)

		-- API Defaults
		NewGizmoAPI.Name = UniqueName
		NewGizmoAPI.Gui = GizmoUI

		-- Store
		API._GizmosTable[UniqueName] = NewGizmoAPI
		table.insert(API._GizmosArray, NewGizmoAPI)
		-- Folder Special Case
		if GIZMO_CLASS == GizmoFolder then
			API._GizmosFolders[UniqueName] = NewGizmoAPI
		end

		-- Update UI
		UpdateLayout(API)

		-- Add Size if not in hidden folder
		if Utility.IsFolderVisible(API, true) then
			Utility.ModifyCanvasHeight(API._MasterAPI._GuiParent, GizmoUI.AbsoluteSize.Y)
		end

		-- Update
		TriggerNewGizmoListeners()

		-- Return API
		return NewGizmoAPI
	end

	-----------------
	-- Private API --
	-----------------
	function API._UpdateAllGizmos()
		-- Update self
		for __, Gizmo in ipairs(API._GizmosArray) do
			if Gizmo._UpdateVisual then
				Gizmo._UpdateVisual()
			end
		end

		-- Update Parent
		if ParentAPI then
			ParentAPI._UpdateAllGizmos()
		end
	end

	-- Modal Ignore
	function API._CloseModal()
		-- Needs to be master API
		if API._MasterAPI ~= API then
			return API._MasterAPI._CloseModal()
		end

		-- Check if Modal is not in-use
		if not API._Modal.Lock then return end

		-- Remove Modal
		GuiParent.Parent.ModalLock.Visible = false
		API._Modal.Frame:Destroy()

		-- Remove Locks
		API._Modal.Lock = false
		API._Modal.ListenerAPI = nil
		API._Modal.Frame = nil
	end

	function API._ModalChoiceSelected(Choice)
		-- Needs to be master API
		if API._MasterAPI ~= API then
			return API._MasterAPI._ModalChoiceSelected(Choice)
		end

		-- Check if Modal is not in-use
		if not API._Modal.Lock then return end

		-- Update Data
		if API._Modal.ListenerAPI.Validate(Choice) then
			API._Modal.ListenerAPI.TriggerListeners()
		end

		API._CloseModal()
	end

	function API._CreateModal(ModalName, ModalListenerAPI, DefaultChoice, Choices)
		-- Needs to be master API
		if API._MasterAPI ~= API then
			return API._MasterAPI._CreateModal(ModalName, ModalListenerAPI, DefaultChoice, Choices)
		end

		-- Modal in-use
		if API._Modal.Lock then return end
		API._Modal.Lock = true
		API._Modal.ListenerAPI = ModalListenerAPI

		-- Hide self
		GuiParent.Parent.ModalLock.Visible = true

		-- Defaults
		local ScreenGui = GuiParent.Parent.Parent
		local ModalFrame = DebuGuiRef.ModalFrame:Clone()
		ModalFrame.Parent = ScreenGui
		ModalFrame.Visible = true
		API._Modal.Frame = ModalFrame

		-- Title
		ModalFrame.TopBar.Title.Text = ModalName

		-- Force Gui to be the front-most one
		API.BringGuiForward(ScreenGui)

		-- Drag Position of ModalFrame
		local ModalTitleDragger = Dragger.new(ModalFrame.TopBar)
		local NodalCoreDragger = Dragger.new(ModalFrame.DragCore)

		local Dragger_ModalPos;
		ModalTitleDragger.OnDragStart(function()
			Dragger_ModalPos = ModalFrame.AbsolutePosition
		end)
		ModalTitleDragger.OnDrag(function(Delta)
			ModalFrame.Position = UDim2.fromOffset(Dragger_ModalPos.X + Delta.X, Dragger_ModalPos.Y + Delta.Y)
		end)
		NodalCoreDragger.OnDragStart(function()
			Dragger_ModalPos = ModalFrame.AbsolutePosition
		end)
		NodalCoreDragger.OnDrag(function(Delta)
			ModalFrame.Position = UDim2.fromOffset(Dragger_ModalPos.X + Delta.X, Dragger_ModalPos.Y + Delta.Y)
		end)

		-- Add Things to the modal
		local TotalWidth = 200 -- Minimum
		local TotalHeight = ModalFrame.TopBar.AbsoluteSize.Y
		for Index = 1, #Choices do
			-- Create Button
			local Button = GizmoUI_Button:Clone()
			Button.Parent = ModalFrame.DrawFrame
			Button.Name = Choices[Index]
			Button.TextButton.Text = Choices[Index]
			if Choices[Index] == DefaultChoice then
				Button.TextButton.BackgroundColor3 = Color3.fromRGB(55, 108, 12)
				Button.TextButton.TextColor3 = Color3.fromRGB(20, 255, 248)
			end

			-- Fix Frame
			Button.TextButton.Position = UDim2.new(0, 5, 0.5, 0)
			Button.TextButton.Size = UDim2.new(1, -10, 1, -4)

			-- Choice
			Button.TextButton.MouseButton1Down:Connect(function()
				API._ModalChoiceSelected(Choices[Index])
			end)

			-- Record change in height
			TotalHeight += Button.AbsoluteSize.Y
			-- Check if change in width
			local Width = TextService:GetTextSize(
				Button.TextButton.Text,
				Button.TextButton.TextSize,
				Button.TextButton.Font,
				Vector2.new(Camera.ViewportSize.X, Button.TextButton.TextSize)
			).X
			TotalWidth = math.max(TotalWidth, Width + 15) -- 15 pixels Padding
		end

		-- Cap Size by Window Size
		TotalWidth = math.min(TotalWidth, Camera.ViewportSize.X)
		TotalHeight = math.min(TotalHeight, Camera.ViewportSize.Y)
		-- Fix Size
		ModalFrame.Size = UDim2.fromOffset(TotalWidth, TotalHeight)

		-- Fix Position (below and to the right of the mouse)
		local TargetX = Mouse.X
		local TargetY = Mouse.Y
		-- Check if can't fit below mouse
		if Mouse.Y + TotalHeight > Camera.ViewportSize.Y then
			TargetY -= TotalHeight
		end
		-- Check if can't fit to the right of the mouse
		if Mouse.X + TotalWidth > Camera.ViewportSize.X then
			TargetX -= TotalWidth
		end
		ModalFrame.Position = UDim2.fromOffset(TargetX, TargetY)

		-- Close Modal
		ModalFrame.CloseBtn.MouseButton1Down:Connect(function()
			API._CloseModal()
		end)
	end

	----------------
	-- Public API --
	----------------
	function API.AddString(UniqueName, DefaultValue, ClearTextOnFocus)
		return AddGizmo(GizmoUI_TextBox, GizmoString, UniqueName, DefaultValue, ClearTextOnFocus)
	end

	function API.AddText(UniqueName, DefaultValue)
		return AddGizmo(GizmoUI_Text, GizmoText, UniqueName, DefaultValue)
	end

	function API.AddLongString(UniqueName, DefaultValue, ClearTextOnFocus, Height)
		return AddGizmo(GizmoUI_TextMultiline, GizmoLongString, UniqueName, API, DefaultValue, ClearTextOnFocus, Height)
	end

	function API.AddInteger(UniqueName, DefaultValue, ClearTextOnFocus)
		return AddGizmo(GizmoUI_TextBox, GizmoInteger, UniqueName, DefaultValue, ClearTextOnFocus)
	end

	function API.AddIntegerSlider(UniqueName, DefaultValue, MinValue, MaxValue, UpdateOnlyOnDragEnd)
		return AddGizmo(GizmoUI_Slider, GizmoIntegerSlider, UniqueName, DefaultValue, MinValue, MaxValue, UpdateOnlyOnDragEnd)
	end

	function API.AddNumber(UniqueName, DefaultValue, DecimalAmount, ClearTextOnFocus)
		return AddGizmo(GizmoUI_TextBox, GizmoNumber, UniqueName, DefaultValue, DecimalAmount, ClearTextOnFocus)
	end

	function API.AddNumberSlider(UniqueName, DefaultValue, MinValue, MaxValue, DecimalAmount, UpdateOnlyOnDragEnd)
		return AddGizmo(GizmoUI_Slider, GizmoNumberSlider, UniqueName, DefaultValue, MinValue, MaxValue, DecimalAmount, UpdateOnlyOnDragEnd)
	end

	function API.AddBool(UniqueName, DefaultValue)
		return AddGizmo(GizmoUI_CheckBox, GizmoBool, UniqueName, DefaultValue)
	end

	function API.AddButton(UniqueName)
		return AddGizmo(GizmoUI_Button, GizmoButton, UniqueName)
	end

	function API.AddSeparator(UniqueName, Color, Height)
		return AddGizmo(GizmoUI_Separator, GizmoSeparator, UniqueName, API, Color, Height)
	end

	function API.AddFolder(UniqueName, StartOpen)
		return AddGizmo(GizmoUI_Folder, GizmoFolder, UniqueName, API._MasterAPI, API, StartOpen)
	end

	function API.AddVector2(UniqueName, DefaultVec2, DecimalAmount, ClearTextOnFocus)
		return AddGizmo(GizmoUI_TextBox_Multi2, GizmoVector2, UniqueName, DefaultVec2, DecimalAmount, ClearTextOnFocus)
	end

	function API.AddVector3(UniqueName, DefaultVec3, DecimalAmount, ClearTextOnFocus)
		return AddGizmo(GizmoUI_TextBox_Multi3, GizmoVector3, UniqueName, DefaultVec3, DecimalAmount, ClearTextOnFocus)
	end

	function API.AddColorSliderRGB(UniqueName, DefaultColor, DecimalAmount, UpdateOnlyOnDragEnd)
		return AddGizmo(GizmoUI_TripleSlider, GizmoColorSlider, UniqueName, DefaultColor, UpdateOnlyOnDragEnd, 1, DecimalAmount)
	end

	function API.AddColorSliderRGBInt(UniqueName, DefaultColor, UpdateOnlyOnDragEnd)
		return AddGizmo(GizmoUI_TripleSlider, GizmoColorSlider, UniqueName, DefaultColor, UpdateOnlyOnDragEnd, 2, nil)
	end

	function API.AddColorSliderHSV(UniqueName, DefaultColor, UpdateOnlyOnDragEnd)
		return AddGizmo(GizmoUI_TripleSlider, GizmoColorSlider, UniqueName, DefaultColor, UpdateOnlyOnDragEnd, 3, nil)
	end

	function API.AddColorSliderHSVInt(UniqueName, DefaultColor, UpdateOnlyOnDragEnd)
		return AddGizmo(GizmoUI_TripleSlider, GizmoColorSlider, UniqueName, DefaultColor, UpdateOnlyOnDragEnd, 4, nil)
	end

	function API.AddListPicker(UniqueName, DefaultChoice, ChoiceArray, AllowNoChoice, ClearTextOnFocus)
		return AddGizmo(GizmoUI_Picker, GizmoListPicker, UniqueName, API, DefaultChoice, ChoiceArray, AllowNoChoice, ClearTextOnFocus)
	end

	-- Returns API of Gizmo
	function API.Get(UniqueName)
		assert(typeof(UniqueName) == 'string', 'UniqueName must be of type string')
		-- Sanity
		if API._GizmosTable[UniqueName] == nil then
			error("Warning! Trying to get non-existant Gizmo ("..UniqueName..")")
			return nil
		end
		return API._GizmosTable[UniqueName]
	end

	-- Returns API of Folder
	function API.GetFolder(UniqueName)
		assert(typeof(UniqueName) == 'string', 'UniqueName must be of type string')
		-- Sanity
		if API._GizmosFolders[UniqueName] == nil then
			error("Warning! Folder does not exist ("..UniqueName..")")
			return nil
		end
		return API._GizmosFolders[UniqueName]
	end

	-- Removes API of Gizmo
	function API.RemoveAll()
		for __, Gizmo in ipairs(API._GizmosArray) do
			Gizmo._Destroy()
		end
		API._GizmosTable = {}
		API._GizmosArray = {}
		API._GizmosFolders = {}
	end

	-- Removes API of Gizmo
	function API.Remove(UniqueName)
		-- Sanity
		if API._GizmosTable[UniqueName] == nil then
			warn("Warning! Trying to remove non-existant Gizmo ("..UniqueName..")")
			return
		end

		-- Remove Canvas Height
		if Utility.IsFolderVisible(API, true) then
			Utility.ModifyCanvasHeight(API._MasterAPI._GuiParent, -API._GizmosTable[UniqueName].Gui.AbsoluteSize.Y)
		end

		-- Destroy Gui
		API._GizmosTable[UniqueName]._Destroy()

		-- Possible full destruction (Gizmo has API inside of it)
		if API._GizmosTable[UniqueName].RemoveAll then
			API._GizmosTable[UniqueName].RemoveAll()
		end

		-- Remove References
		local Index = Utility.FindArrayIndexByValue(API._GizmosArray, API._GizmosTable[UniqueName])
		assert(Index ~= nil, 'Nil Index Error')
		table.remove(API._GizmosArray, Index)
		API._GizmosTable[UniqueName] = nil
		API._GizmosFolders[UniqueName] = nil

		-- Update Visuals
		UpdateLayout(API)

		-- Call High level events
		TriggerNewGizmoListeners()
	end

	-- Sanity
	function API.GetValue()
		warn("Warning! Trying to get a Value from an API class")
		return nil
	end

	return API
end

return GizmoAPI]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">46009198e08047480187a7bd00019176</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX17B99AD62B95400F97EEDB827C39C489">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">GizmoBase</string>
							<string name="ScriptGuid">{A59DFBD5-9565-42EA-9DAD-07E2F8AF019B}</string>
							<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Module
local GizmoBase = {}

----------------
-- Public API --
----------------
function GizmoBase.New()

	-------------
	-- Defines --
	-------------
    local API = {
		_IsDestroyed = false,
        _Listeners = {},
        _Input = nil,
		_Connections = nil,
		_Draggers = nil,
    }

	-----------------
	-- Private API --
	-----------------
	function API._AddConnection(Connection)
		if API._Connections == nil then
			API._Connections = {}
		end
		table.insert(API._Connections, Connection)
	end

	function API._AddDragger(Dragger)
		if API._Draggers == nil then
			API._Draggers = {}
		end
		table.insert(API._Draggers, Dragger)
	end

	function API._Destroy()
		API._IsDestroyed = true
		API._Listeners = nil
		-- Remove Connections
		if API._Connections then
			for _, Connection in ipairs(API._Connections) do
				Connection:Disconnect()
			end
		end
		API._Connections = nil
		-- Remove Draggers
		if API._Draggers then
			for _, Dragger in ipairs(API._Draggers) do
				Dragger.Destroy()
			end
		end
		-- Remove GUI
		if API.Gui then
			API.Gui:Destroy()
		end
		API.Gui = nil
	end

	function API._DeadCheck()
		if API._IsDestroyed then
			warn("Warning! Accessing Removed Gizmo ("..API.Name..")")
			return true
		end
		return false
	end

	----------------
    -- Public API --
	----------------
    function API.Validate(__) -- Input
        warn('! Validate Function not implemented')
        return false
    end

	function API.TriggerListeners()
		for _, Function in ipairs(API._Listeners) do
			Function(API._Input)
		end
		return API
	end

    function API.Listen(func)
		if API._DeadCheck() then return nil end
        table.insert(API._Listeners, func)
        return API
    end

    function API.SetValue(newValue)
		if API._DeadCheck() then return nil end
        API.Validate(newValue)
        return API.TriggerListeners()
    end

	function API.SetSilently(newValue)
		if API._DeadCheck() then return nil end
        API.Validate(newValue)
        return API
    end

	function API.GetValue()
		return API._Input
	end

    return API
end

return GizmoBase]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd00019177</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX11A6816DB40A4581B83BF6C47A9E1A27">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">GizmoBool</string>
							<string name="ScriptGuid">{3602A8E2-958A-48D2-A84B-DFF4BC01D4E0}</string>
							<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Module
local GizmoBool = {}

-- Modules
local GizmoBase = require(script.Parent.GizmoBase)
local Utility = require(script.Parent.Parent.Parent.Utility)

-- Constants
local COLOR_DARK = Color3.fromRGB(43, 43, 43)

----------------
-- Public API --
----------------
function GizmoBool.new(Gui, Name, DefaultValue)
    -- Defaults
    if DefaultValue == nil then
		DefaultValue = false
	end

    -- Sanity
    Utility.QuickTypeAssert(Name, 'string')
    Utility.QuickTypeAssert(DefaultValue, 'boolean')

    -- Setup
	Gui.CheckBoxBG.CheckBoxFG.Checkmark.Text = '✓' -- Best to store unicode in Script vs in parameter
    Gui.TextName.Text = Name

	-- Defines
    local API = GizmoBase.New()
	local IsReadOnly = false
    local DefaultColor = Gui.CheckBoxBG.CheckBoxFG.BackgroundColor3

    ----------------
	-- Public API --
	----------------
    function API.Validate(Input)
		if API._DeadCheck() then return false end
		if Input == API._Input then return false end
        local IsTrue = (Input == true)
        if IsTrue then
            Gui.CheckBoxBG.CheckBoxFG.BackgroundColor3 = DefaultColor
            Gui.CheckBoxBG.CheckBoxFG.Checkmark.Visible = true
        else
            Gui.CheckBoxBG.CheckBoxFG.BackgroundColor3 = COLOR_DARK
            Gui.CheckBoxBG.CheckBoxFG.Checkmark.Visible = false
        end
        API._Input = IsTrue
        return true
    end

    function API.SetName(NewName)
		if API._DeadCheck() then return nil end
        Gui.TextName.Text = NewName
        return API
    end

    function API.SetNameColor(NewNameColor)
		if API._DeadCheck() then return nil end
        Gui.TextName.TextColor3 = NewNameColor
        return API
    end

    function API.SetCheckboxColor(NewColor)
		if API._DeadCheck() then return nil end
        if API._Input == true then
            Gui.CheckBoxBG.CheckBoxFG.BackgroundColor3 = NewColor
        end
        DefaultColor = NewColor
        return API
    end

	function API.IsReadOnly()
		if API._DeadCheck() then return nil end
		return IsReadOnly
	end

	function API.SetReadOnly(State)
		if API._DeadCheck() then return nil end
		-- Set
		if State == nil then
			IsReadOnly = true
		else
			IsReadOnly = State
		end
		-- Apply
		if IsReadOnly then
			Gui.TextName.TextTransparency = 0.5
			Gui.CheckBoxBG.CheckBoxFG.Checkmark.TextTransparency = 0.5
			Gui.CheckBoxBG.CheckBoxFG.BackgroundTransparency = 0.45
		else
			Gui.TextName.TextTransparency = 0.0
			Gui.CheckBoxBG.CheckBoxFG.Checkmark.TextTransparency = 0.0
			Gui.CheckBoxBG.CheckBoxFG.BackgroundTransparency = 0.0
		end
		return API
	end

    -- Update Values
    API._AddConnection(Gui.CheckBoxBG.CheckBoxFG.MouseButton1Down:Connect(function()
		if IsReadOnly then
			return
		end

		if API.Validate(not API._Input) then
			API.TriggerListeners()
		end
    end))

    -- Call Validate on Default Value
    API.Validate(DefaultValue)

    return API
end

return GizmoBool]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd00019178</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX69C0F86EA8FD469898A29432C86ABD34">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">GizmoButton</string>
							<string name="ScriptGuid">{11589E8D-B199-485E-AA59-259C6CB383BB}</string>
							<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Module
local GizmoButton = {}

-- Services
local TextService = game:GetService("TextService")

-- Modules
local GizmoBase = require(script.Parent.GizmoBase)
local Utility = require(script.Parent.Parent.Parent.Utility)

-- Constants
local PADDING = 10
local MINSIZE = 100

---------------------
-- Herlp Functions --
---------------------
local function GetTextSize(TextButton)
	local NameSize = TextService:GetTextSize(
		TextButton.Text,
		TextButton.TextSize,
		TextButton.Font,
		Vector2.new(math.huge, TextButton.TextSize)
	)
	return UDim2.new(0, math.max(MINSIZE, NameSize.X + PADDING), 1, -4)
end

----------------
-- Public API --
----------------
function GizmoButton.new(Gui, Name)
    -- Sanity
    Utility.QuickTypeAssert(Name, 'string')
    
    -- Setup
    Gui.TextButton.Text = Name
	Gui.TextButton.Size = GetTextSize(Gui.TextButton)

	-- Defines
    local API = GizmoBase.New()
	local IsReadOnly = false

	----------------
	-- Public API --
	----------------
    function API.SetName(NewName)
		if API._DeadCheck() then return nil end
        Gui.TextButton.Text = NewName
		Gui.TextButton.Size = GetTextSize(Gui.TextButton)
		return API
    end
    function API.SetNameColor(NewNameColor)
		if API._DeadCheck() then return nil end
        Gui.TextButton.TextColor3 = NewNameColor
		return API
    end
    function API.SetColor(NewColor)
		if API._DeadCheck() then return nil end
        Gui.TextButton.BackgroundColor3 = NewColor
		return API
    end
	function API.IsReadOnly()
		if API._DeadCheck() then return nil end
		return IsReadOnly
	end
	function API.SetReadOnly(State)
		if API._DeadCheck() then return nil end
		-- Set
		if State == nil then
			IsReadOnly = true
		else
			IsReadOnly = State
		end
		-- Apply
		if IsReadOnly then
			Gui.TextButton.BackgroundTransparency = 0.5
			Gui.TextButton.TextTransparency = 0.5
		else
			Gui.TextButton.BackgroundTransparency = 0.0
			Gui.TextButton.TextTransparency = 0.0
		end
		return API
	end

    -- Update Values
    API._AddConnection(Gui.TextButton.MouseButton1Down:Connect(function(__) -- enterPressed
		if IsReadOnly then
			return
		end

        API.TriggerListeners()
    end))

    return API
end

return GizmoButton]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd00019179</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXA0CE51C29D984EBBAF24F6DDBD9026EB">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">GizmoFolder</string>
							<string name="ScriptGuid">{D193CF61-BC46-4A26-BB5D-5C985079B1C1}</string>
							<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Module
local GizmoFolder = {}

-- Modules
local Constants = require(script.Parent.Parent.Parent.Constants)
local Utility = require(script.Parent.Parent.Parent.Utility)

----------------------
-- Helper Functions --
----------------------
local function UpdateVisual(API, Gui)
	if API.IsVisible() then
		Gui.DropDownBtn.Text = 'v'
		Gui.ScrollingFrame.Visible = true
		local CanvasHeight = 0
		for __, Gizmo in ipairs(API._GizmosArray) do
			CanvasHeight += Gizmo.Gui.AbsoluteSize.Y
		end
		Gui.Size = UDim2.new(1, 0, 0, CanvasHeight + 24)
	else
		Gui.DropDownBtn.Text = '>'
		Gui.ScrollingFrame.Visible = false
		Gui.Size = UDim2.new(1, 0, 0, 24)
	end
end

----------------
-- Public API --
----------------
function GizmoFolder.new(Gui, Name, MasterAPI, ParentAPI, StartOpen)

	-- Sanity
	StartOpen = StartOpen or false
	Utility.QuickTypeAssert(Name, 'string')
	Utility.QuickTypeAssert(StartOpen, 'boolean')

	-- Setup
	Gui.TextName.Text = Name
	Gui.Line.BackgroundColor3 = Constants.DEFAULT_FOLDER_COLOR
	Gui.SideLine.BackgroundColor3 = Constants.DEFAULT_FOLDER_COLOR

	-- Defines
	local GizmoAPI = require(script.Parent)
	local API = GizmoAPI.New(Gui.ScrollingFrame, MasterAPI, ParentAPI)
	local IsVisible = StartOpen

	------------
	-- Button --
	------------
	Gui.DropDownBtn.MouseButton1Down:Connect(function()
		IsVisible = not IsVisible
		local OCHeight = Gui.AbsoluteSize.Y
		ParentAPI._UpdateAllGizmos()
		if Utility.IsFolderVisible(API, false) then
			local DeltaHeight = Gui.AbsoluteSize.Y - OCHeight
			Utility.ModifyCanvasHeight(MasterAPI._GuiParent, DeltaHeight)
		end
	end)

	-----------------
	-- Private API --
	-----------------
	function API._NewGizmoAdded()
		-- Update Children first
		for __, Gizmo in ipairs(API._GizmosArray) do
			if Gizmo._UpdateVisual then
				Gizmo._UpdateVisual()
			end
		end

		-- Update self afterwards
		UpdateVisual(API, Gui)

		-- Update Parent
		ParentAPI._UpdateAllGizmos()
	end

	function API._UpdateVisual()
		UpdateVisual(API, Gui)
	end

	function API._Destroy()
		Gui:Destroy()
		-- Destroy Children too
		for _, Gizmo in ipairs(API._GizmosArray) do
			Gizmo._Destroy()
		end
	end

	----------------
	-- Public API --
	----------------
	function API.SetName(NewName)
		Utility.QuickTypeAssert(NewName, 'string')
		Gui.TextName.Text = NewName
		return API
	end

	function API.SetNameColor(NewNameColor)
		Utility.QuickTypeAssert(NewNameColor, 'Color3')
		Gui.TextName.TextColor3 = NewNameColor
		return API
	end

	function API.SetColor(NewColor)
		Utility.QuickTypeAssert(NewColor, 'Color3')
		Gui.Line.BackgroundColor3 = NewColor
		Gui.SideLine.BackgroundColor3 = NewColor
		return API
	end

	function API.GetColor()
		return Gui.Line.BackgroundColor3
	end

	function API.IsVisible()
		return IsVisible
	end

	-- Special Init
	API._UpdateVisual() -- Special Init

    return API
end

return GizmoFolder]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd0001917a</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXC8A115146A3B4B27B0DD7D1471BD3ABC">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">GizmoInteger</string>
							<string name="ScriptGuid">{C5B6DB0C-5508-477B-B3B9-7138546BC915}</string>
							<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Module
local GizmoInteger = {}

-- Modules
local GizmoBase = require(script.Parent.GizmoBase)
local Utility = require(script.Parent.Parent.Parent.Utility)

----------------
-- Public API --
----------------
function GizmoInteger.new(Gui, Name, DefaultValue, ClearTextOnFocus)

	-- Defaults
	DefaultValue = tonumber(DefaultValue) or 0
	if ClearTextOnFocus == nil then
		ClearTextOnFocus = false
	end

	-- Sanity
	Utility.QuickTypeAssert(Name, 'string')
	Utility.QuickTypeAssert(DefaultValue, 'number')
	Utility.QuickTypeAssert(ClearTextOnFocus, 'boolean')

	-- Setup
	Gui.TextName.Text = Name
	Gui.TextBox.Text = DefaultValue
	Gui.TextBox.ClearTextOnFocus = ClearTextOnFocus

	-- Defines
	local API = GizmoBase.New()
	local IsReadOnly = false

	----------------
	-- Public API --
	----------------
	function API.Validate(Input)
		if API._DeadCheck() then return false end
		if Input == API._Input then return false end
		local NumberInput = tonumber(Input)
		if NumberInput then
			NumberInput = math.round(NumberInput)
			Gui.TextBox.Text = NumberInput
			API._Input = NumberInput
			return true, NumberInput
		else
			Gui.TextBox.Text = API._Input
			return false
		end
	end

	function API.SetName(NewName)
		if API._DeadCheck() then return nil end
		Gui.TextName.Text = NewName
		return API
	end

	function API.SetNameColor(NewNameColor)
		if API._DeadCheck() then return nil end
		Gui.TextName.TextColor3 = NewNameColor
		return API
	end

	function API.SetValueBGColor(NewColor)
		if API._DeadCheck() then return nil end
		Gui.TextBox.BackgroundColor3 = NewColor
		return API
	end

	function API.SetValueTextColor(NewColor)
		if API._DeadCheck() then return nil end
		Gui.TextBox.TextColor3 = NewColor
		return API
	end

	function API.IsReadOnly()
		if API._DeadCheck() then return nil end
		return IsReadOnly
	end

	function API.SetReadOnly(State)
		if API._DeadCheck() then return nil end
		-- Set
		if State == nil then
			IsReadOnly = true
		else
			IsReadOnly = State
		end
		-- Apply
		if IsReadOnly then
			Gui.TextBox.TextEditable = false
			Gui.TextBox.TextTransparency = 0.5
			Gui.TextName.TextTransparency = 0.5
		else
			Gui.TextBox.TextEditable = true
			Gui.TextBox.TextTransparency = 0.0
			Gui.TextName.TextTransparency = 0.0
		end
		return API
	end

	-- Update Values
	API._AddConnection(Gui.TextBox.FocusLost:Connect(function(__) -- enterPressed
		if IsReadOnly then
			return
		end

		if API.Validate(Gui.TextBox.Text) then
			API.TriggerListeners()
		end
	end))

	-- Call Validate on Default Value
	API.Validate(DefaultValue)

	return API
end

return GizmoInteger]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd0001917b</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX5DFED56081234E67AA2BEA6B596CBB1F">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">GizmoIntegerSlider</string>
							<string name="ScriptGuid">{B1DEC54D-D044-4427-AC0F-6AA78814819B}</string>
							<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Module
local GizmoIntegerSlider = {}

-- Modules
local GizmoBase = require(script.Parent.GizmoBase)
local Utility = require(script.Parent.Parent.Parent.Utility)
local Dragger = require(script.Parent.Parent.Parent.Dragger)

-- Defines
local Mouse = game:GetService("Players").LocalPlayer:GetMouse()

----------------------
-- Helper Functions --
----------------------
local function InverseLerp(v, a, b)
	return (v - a) / (b - a)
end

local function Lerp(a, b, t)
	return (1 - t) * a + t * b;
end

local function UpdateDraggerPositionFromValue(DraggerUI, Value, MinValue, MaxValue)
	local t = InverseLerp(Value, MinValue, MaxValue)
	DraggerUI.Position = UDim2.fromScale(t, 0)
end

local function GetValueFromDraggerPosition(DraggerUI, MinValue, MaxValue)
	return Lerp(MinValue, MaxValue, DraggerUI.Position.X.Scale)
end

----------------
-- Public API --
----------------
function GizmoIntegerSlider.new(Gui, Name, DefaultValue, MinValue, MaxValue, UpdateOnlyOnDragEnd)

	-- Defaults
	MinValue = math.round(tonumber(MinValue)) or 0
	MaxValue = math.round(tonumber(MaxValue)) or 0
	DefaultValue = math.round(tonumber(DefaultValue)) or 0

	-- Sanity
	if MinValue > MaxValue then
		warn('Warning! NumberSlider Min is larger than Max')
		MinValue = MaxValue
	end
	Utility.QuickTypeAssert(Name, 'string')
	Utility.QuickTypeAssert(DefaultValue, 'number')
	Utility.QuickTypeAssert(MinValue, 'number')
	Utility.QuickTypeAssert(MaxValue, 'number')

	-- Defines
	local ValueDragger = Dragger.new(Gui.TextBox.DragRange.Dragger)
	local IsReadOnly = false
	local API = GizmoBase.New()

	-- Setup
	Gui.TextName.Text = Name

	API._AddDragger(ValueDragger)

	----------------
	-- Public API --
	----------------
	function API.SetName(NewName)
		if API._DeadCheck() then return nil end
		Gui.TextName.Text = NewName
		return API
	end

	function API.SetNameColor(NewNameColor)
		if API._DeadCheck() then return nil end
		Gui.TextName.TextColor3 = NewNameColor
		return API
	end

	function API.SetValueBGColor(NewColor)
		if API._DeadCheck() then return nil end
		Gui.TextBox.BackgroundColor3 = NewColor
		return API
	end

	function API.SetValueTextColor(NewColor)
		if API._DeadCheck() then return nil end
		Gui.TextBox.TextColor3 = NewColor
		return API
	end

	function API.IsReadOnly()
		if API._DeadCheck() then return nil end
		return IsReadOnly
	end

	function API.SetReadOnly(State)
		if API._DeadCheck() then return nil end
		-- Set
		if State == nil then
			IsReadOnly = true
		else
			IsReadOnly = State
		end
		-- Apply
		if IsReadOnly then
			Gui.TextBox.DragRange.Dragger.Selectable = false
			Gui.TextBox.DragRange.Dragger.AutoButtonColor = false
			Gui.TextBox.DragRange.Dragger.BackgroundTransparency = 0.9
			Gui.TextBox.TextTransparency = 0.5
			Gui.TextName.TextTransparency = 0.5
		else
			Gui.TextBox.DragRange.Dragger.Selectable = true
			Gui.TextBox.DragRange.Dragger.AutoButtonColor = true
			Gui.TextBox.DragRange.Dragger.BackgroundTransparency = 0.7
			Gui.TextBox.TextTransparency = 0.0
			Gui.TextName.TextTransparency = 0.0
		end
		return API
	end

	function API.SetMinValue(NewMinValue)
		if API._DeadCheck() then return nil end
		Utility.QuickTypeAssert(NewMinValue, 'number')

		MinValue = math.round(tonumber(NewMinValue))

		-- Internal Update
		API._Input = math.clamp(API._Input, MinValue, MaxValue)
		Gui.TextBox.Text = tostring(API._Input)
		UpdateDraggerPositionFromValue(Gui.TextBox.DragRange.Dragger, API._Input, MinValue, MaxValue)

		return API
	end

	function API.SetMaxValue(NewMaxValue)
		if API._DeadCheck() then return nil end
		Utility.QuickTypeAssert(NewMaxValue, 'number')

		MaxValue = math.round(tonumber(NewMaxValue))

		-- Internal Update
		API._Input = math.clamp(API._Input, MinValue, MaxValue)
		Gui.TextBox.Text = tostring(API._Input)
		UpdateDraggerPositionFromValue(Gui.TextBox.DragRange.Dragger, API._Input, MinValue, MaxValue)

		return API
	end

	function API.Validate(Input)
		if API._DeadCheck() then return false end
		if Input == API._Input then return false end
		if typeof(Input) ~= 'number' then
			warn('GizmoIntegerSlider Given non Color Parameter')
			return false
		end
		Input = math.clamp(math.round(Input), MinValue, MaxValue)
		Gui.TextBox.Text = Input
		UpdateDraggerPositionFromValue(Gui.TextBox.DragRange.Dragger, Input, MinValue, MaxValue)
		API._Input = Input

		return true
	end

	-- Dragger
	ValueDragger.OnDrag(function()
		if API._DeadCheck() then return end
		if IsReadOnly then return end

		-- Move Button to correct Position
		local ButtonPositionT = InverseLerp(
			Mouse.X,
			Gui.TextBox.DragRange.AbsolutePosition.X,
			Gui.TextBox.DragRange.AbsolutePosition.X + Gui.TextBox.DragRange.AbsoluteSize.X
		)
		ButtonPositionT = math.clamp(ButtonPositionT, 0, 1)
		Gui.TextBox.DragRange.Dragger.Position = UDim2.fromScale(ButtonPositionT, 0)

		-- Get New Value based on Mouse and round result
		local NewValue = GetValueFromDraggerPosition(Gui.TextBox.DragRange.Dragger, MinValue, MaxValue)
		NewValue = math.round(NewValue)

		-- Move Position based on rounded Value
		UpdateDraggerPositionFromValue(Gui.TextBox.DragRange.Dragger, NewValue, MinValue, MaxValue)

		-- Calculate value from position
		API._Input = NewValue

		-- Text
		Gui.TextBox.Text = API._Input

		-- Trigger Listeners
		if not UpdateOnlyOnDragEnd then
			API.TriggerListeners()
		end
	end)

	-- Drag End
	if UpdateOnlyOnDragEnd then
		ValueDragger.OnDragEnd(function()
			API.TriggerListeners()
		end)
	end

	-- Validate Default
	API.Validate(DefaultValue)

	return API
end

return GizmoIntegerSlider]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd0001917c</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX997437460D614EA7802198918E3BA842">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">GizmoLongString</string>
							<string name="ScriptGuid">{7F905EB5-BB16-4537-897B-83F1F3BA7575}</string>
							<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Module
local GizmoLongString = {}

-- Modules
local GizmoBase = require(script.Parent.GizmoBase)
local Utility = require(script.Parent.Parent.Parent.Utility)

----------------
-- Public API --
----------------
function GizmoLongString.new(Gui, Name, ParentAPI, DefaultValue, ClearTextOnFocus, Height)

	-- Defaults
	ClearTextOnFocus = ClearTextOnFocus or false
	DefaultValue = DefaultValue or ''
	Height = Height or 48

	-- Sanity
	Utility.QuickTypeAssert(Name, 'string')
	Utility.QuickTypeAssert(DefaultValue, 'string')
	Utility.QuickTypeAssert(Height, 'number')

	-- Setup
	Gui.TextName.Text = Name
	Gui.TextBox.Text = DefaultValue
	Gui.TextBox.ClearTextOnFocus = ClearTextOnFocus
	Gui.Size = UDim2.new(1, 0, 0, Height)

	-- Data
	local IsReadOnly = false
	local API = GizmoBase.New()

	----------------
	-- Public API --
	----------------
	function API.Validate(Input)
		if API._DeadCheck() then return nil end
		local Str = tostring(Input)
		if Str then
			Gui.TextBox.Text = Str
			API._Input = Str
			return true
		else
			Gui.TextBox.Text = API._Input
			return false
		end
	end

	function API.SetName(NewName)
		if API._DeadCheck() then return nil end
		Gui.TextName.Text = NewName
		return API
	end

	function API.SetNameColor(NewNameColor)
		if API._DeadCheck() then return nil end
		Gui.TextName.TextColor3 = NewNameColor
		return API
	end

	function API.SetValueBGColor(NewColor)
		if API._DeadCheck() then return nil end
		Gui.TextBox.BackgroundColor3 = NewColor
		return API
	end

	function API.SetValueTextColor(NewColor)
		if API._DeadCheck() then return nil end
		Gui.TextBox.TextColor3 = NewColor
		return API
	end

	function API.IsReadOnly()
		if API._DeadCheck() then return nil end
		return IsReadOnly
	end

	function API.SetReadOnly(State)
		if API._DeadCheck() then return nil end
		-- Set
		if State == nil then
			IsReadOnly = true
		else
			IsReadOnly = State
		end
		-- Apply
		if IsReadOnly then
			Gui.TextBox.TextEditable = false
			Gui.TextBox.TextTransparency = 0.5
			Gui.TextName.TextTransparency = 0.5
		else
			Gui.TextBox.TextEditable = true
			Gui.TextBox.TextTransparency = 0.0
			Gui.TextName.TextTransparency = 0.0
		end
		return API
	end

	function API.SetHeight(NewHeight)
		if API._DeadCheck() then return nil end
		-- Modify Gui Size
		local OCHeight = Gui.Size.Y.Offset
        Gui.Size = UDim2.new(1, 0, 0, NewHeight)

		-- Modify Canvas Height based on change in height
		if Utility.IsFolderVisible(ParentAPI, true) then
			local DeltaHeight = NewHeight - OCHeight
			Utility.ModifyCanvasHeight(ParentAPI._MasterAPI._GuiParent, DeltaHeight)
		end
	end

	function API.SetHeightBasedOnLineCount(LineCount)
		local YOffset = Gui.TextBox.Size.Y.Offset
		API.SetHeight(-YOffset + LineCount * Gui.TextBox.TextSize)
	end

	-- Update Values
	API._AddConnection(Gui.TextBox.FocusLost:Connect(function(__) -- enterPressed
		if IsReadOnly then
			return
		end

		if API.Validate(Gui.TextBox.Text) then
			API.TriggerListeners()
		end
	end))

	-- Setup
	API.Validate(DefaultValue)

	return API
end

return GizmoLongString]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd0001917d</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXA1C2959714B44D7CB9A850FBE7B9F341">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">GizmoNumber</string>
							<string name="ScriptGuid">{E0FAC82C-9106-4A5E-ABE0-709F55783EB4}</string>
							<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Module
local GizmoNumber = {}

-- Modules
local GizmoBase = require(script.Parent.GizmoBase)
local Utility = require(script.Parent.Parent.Parent.Utility)

----------------
-- Public API --
----------------
function GizmoNumber.new(Gui, Name, DefaultValue, DecimalAmount, ClearTextOnFocus)

	-- Defaults
	DefaultValue = tonumber(DefaultValue) or 0
	if ClearTextOnFocus == nil then
		ClearTextOnFocus = false
	end

	-- Sanity
	Utility.QuickTypeAssert(Name, 'string')
	Utility.QuickTypeAssert(DefaultValue, 'number')
	Utility.QuickTypeAssert(ClearTextOnFocus, 'boolean')
	if DecimalAmount ~= nil then
		Utility.QuickTypeAssert(DecimalAmount, 'number')
		DecimalAmount = math.floor(DecimalAmount)
	end

	-- Setup
	Gui.TextName.Text = Name
	Gui.TextBox.Text = DefaultValue
	Gui.TextBox.ClearTextOnFocus = ClearTextOnFocus

	-- Defines
	local API = GizmoBase.New()
	local IsReadOnly = false

	----------------
	-- Public API --
	----------------
	function API.Validate(Input)
		if API._DeadCheck() then return false end
		if Input == API._Input then return false end
		local NumberInput = tonumber(Input)
		if NumberInput then
			if DecimalAmount then
				local Mod = (10 ^ DecimalAmount)
				NumberInput = math.round(NumberInput * Mod) / Mod
			end
			Gui.TextBox.Text = NumberInput
			API._Input = NumberInput
			return true
		else
			Gui.TextBox.Text = API._Input
			return false
		end
	end

	function API.SetName(NewName)
		if API._DeadCheck() then return nil end
		Gui.TextName.Text = NewName
		return API
	end

	function API.SetNameColor(NewNameColor)
		if API._DeadCheck() then return nil end
		Gui.TextName.TextColor3 = NewNameColor
		return API
	end

	function API.SetValueBGColor(NewColor)
		if API._DeadCheck() then return nil end
		Gui.TextBox.BackgroundColor3 = NewColor
		return API
	end

	function API.SetValueTextColor(NewColor)
		if API._DeadCheck() then return nil end
		Gui.TextBox.TextColor3 = NewColor
		return API
	end

	function API.IsReadOnly()
		if API._DeadCheck() then return nil end
		return IsReadOnly
	end

	function API.SetReadOnly(State)
		if API._DeadCheck() then return nil end
		-- Set
		if State == nil then
			IsReadOnly = true
		else
			IsReadOnly = State
		end
		-- Apply
		if IsReadOnly then
			Gui.TextBox.TextEditable = false
			Gui.TextBox.TextTransparency = 0.5
			Gui.TextName.TextTransparency = 0.5
		else
			Gui.TextBox.TextEditable = true
			Gui.TextBox.TextTransparency = 0.0
			Gui.TextName.TextTransparency = 0.0
		end
		return API
	end

	-- Update Values
	API._AddConnection(Gui.TextBox.FocusLost:Connect(function(__) -- enterPressed
		if IsReadOnly then
			return
		end

		if API.Validate(Gui.TextBox.Text) then
			API.TriggerListeners()
		end
	end))

	-- Call Validate on Default Value
	API.Validate(DefaultValue)

	return API
end

return GizmoNumber]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd0001917e</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX1CBF99DB62014749909E50B2B3BB551E">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">GizmoNumberSlider</string>
							<string name="ScriptGuid">{294D026D-D60D-4ABB-B975-3ABCCDC22BB9}</string>
							<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Module
local GizmoNumberSlider = {}

-- Modules
local GizmoBase = require(script.Parent.GizmoBase)
local Utility = require(script.Parent.Parent.Parent.Utility)
local Dragger = require(script.Parent.Parent.Parent.Dragger)

-- Defines
local Mouse = game:GetService("Players").LocalPlayer:GetMouse()

----------------------
-- Helper Functions --
----------------------
local function InverseLerp(v, a, b)
	return (v - a) / (b - a)
end

local function Lerp(a, b, t)
	return (1 - t) * a + t * b;
end

local function UpdateDraggerPositionFromValue(DraggerUI, Value, MinValue, MaxValue)
	local t = InverseLerp(Value, MinValue, MaxValue)
	DraggerUI.Position = UDim2.fromScale(t, 0)
end

local function GetValueFromDraggerPosition(DraggerUI, MinValue, MaxValue)
	return Lerp(MinValue, MaxValue, DraggerUI.Position.X.Scale)
end

----------------
-- Public API --
----------------
function GizmoNumberSlider.new(Gui, Name, DefaultValue, MinValue, MaxValue, DecimalAmount, UpdateOnlyOnDragEnd)

	-- Defaults
	MinValue = tonumber(MinValue) or 0
	MaxValue = tonumber(MaxValue) or 0
	DefaultValue = tonumber(DefaultValue) or 0

	-- Sanity
	if MinValue > MaxValue then
		warn('Warning! NumberSlider Min is larger than Max')
		MinValue = MaxValue
	end
	Utility.QuickTypeAssert(Name, 'string')
	Utility.QuickTypeAssert(DefaultValue, 'number')
	Utility.QuickTypeAssert(MinValue, 'number')
	Utility.QuickTypeAssert(MaxValue, 'number')
	if DecimalAmount ~= nil then
		Utility.QuickTypeAssert(DecimalAmount, 'number')
		DecimalAmount = math.floor(DecimalAmount)
	end

	-- Defines
	local ValueDragger = Dragger.new(Gui.TextBox.DragRange.Dragger)
	local IsReadOnly = false
	local API = GizmoBase.New()

	-- Setup
	Gui.TextName.Text = Name

	API._AddDragger(ValueDragger)

	----------------
	-- Public API --
	----------------
	function API.SetName(NewName)
		if API._DeadCheck() then return nil end
		Gui.TextName.Text = NewName
		return API
	end

	function API.SetNameColor(NewNameColor)
		if API._DeadCheck() then return nil end
		Gui.TextName.TextColor3 = NewNameColor
		return API
	end

	function API.SetValueBGColor(NewColor)
		if API._DeadCheck() then return nil end
		Gui.TextBox.BackgroundColor3 = NewColor
		return API
	end

	function API.SetValueTextColor(NewColor)
		if API._DeadCheck() then return nil end
		Gui.TextBox.TextColor3 = NewColor
		return API
	end

	function API.IsReadOnly()
		if API._DeadCheck() then return nil end
		return IsReadOnly
	end

	function API.SetReadOnly(State)
		if API._DeadCheck() then return nil end
		-- Set
		if State == nil then
			IsReadOnly = true
		else
			IsReadOnly = State
		end
		-- Apply
		if IsReadOnly then
			Gui.TextBox.DragRange.Dragger.Selectable = false
			Gui.TextBox.DragRange.Dragger.AutoButtonColor = false
			Gui.TextBox.DragRange.Dragger.BackgroundTransparency = 0.9
			Gui.TextBox.TextTransparency = 0.5
			Gui.TextName.TextTransparency = 0.5
		else
			Gui.TextBox.DragRange.Dragger.Selectable = true
			Gui.TextBox.DragRange.Dragger.AutoButtonColor = true
			Gui.TextBox.DragRange.Dragger.BackgroundTransparency = 0.7
			Gui.TextBox.TextTransparency = 0.0
			Gui.TextName.TextTransparency = 0.0
		end
		return API
	end

	function API.SetMinValue(NewMinValue)
		if API._DeadCheck() then return nil end
		Utility.QuickTypeAssert(NewMinValue, 'number')

		MinValue = math.round(tonumber(NewMinValue))

		-- Internal Update
		API._Input = math.clamp(API._Input, MinValue, MaxValue)
		Gui.TextBox.Text = tostring(API._Input)
		UpdateDraggerPositionFromValue(Gui.TextBox.DragRange.Dragger, API._Input, MinValue, MaxValue)

		return API
	end

	function API.SetMaxValue(NewMaxValue)
		if API._DeadCheck() then return nil end
		Utility.QuickTypeAssert(NewMaxValue, 'number')

		MaxValue = math.round(tonumber(NewMaxValue))

		-- Internal Update
		API._Input = math.clamp(API._Input, MinValue, MaxValue)
		Gui.TextBox.Text = tostring(API._Input)
		UpdateDraggerPositionFromValue(Gui.TextBox.DragRange.Dragger, API._Input, MinValue, MaxValue)

		return API
	end

	function API.Validate(Input)
		if API._DeadCheck() then return false end
		if Input == API._Input then return false end
		if typeof(Input) ~= 'number' then
			warn('GizmoNumberSlider Given non Color Parameter')
			return false
		end
		Input = math.clamp(Input, MinValue, MaxValue)
		Gui.TextBox.Text = Input
		UpdateDraggerPositionFromValue(Gui.TextBox.DragRange.Dragger, Input, MinValue, MaxValue)
		API._Input = Input
		if DecimalAmount then
			local Mod = (10 ^ DecimalAmount)
			API._Input = math.round(API._Input * Mod) / Mod
		end

		return true
	end

	-- Dragger
	ValueDragger.OnDrag(function()
		if API._DeadCheck() then return end
		if IsReadOnly then return end

		-- Move Button to correct Position
		local ButtonPositionT = InverseLerp(
			Mouse.X,
			Gui.TextBox.DragRange.AbsolutePosition.X,
			Gui.TextBox.DragRange.AbsolutePosition.X + Gui.TextBox.DragRange.AbsoluteSize.X
		)
		ButtonPositionT = math.clamp(ButtonPositionT, 0, 1)
		Gui.TextBox.DragRange.Dragger.Position = UDim2.fromScale(ButtonPositionT, 0)

		-- Calculate value from position
		API._Input = GetValueFromDraggerPosition(Gui.TextBox.DragRange.Dragger, MinValue, MaxValue)
		if DecimalAmount then
			local Mod = (10 ^ DecimalAmount)
			API._Input = math.round(API._Input * Mod) / Mod
		end

		-- Text
		Gui.TextBox.Text = API._Input

		-- Trigger Listeners
		if not UpdateOnlyOnDragEnd then
			API.TriggerListeners()
		end
	end)

	-- Drag End
	if UpdateOnlyOnDragEnd then
		ValueDragger.OnDragEnd(function()
			API.TriggerListeners()
		end)
	end

	-- Validate Default
	API.Validate(DefaultValue)

	return API
end

return GizmoNumberSlider]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd0001917f</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXDCDE6E440242464A9102DF9E09C50F75">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">GizmoSeparator</string>
							<string name="ScriptGuid">{EEB658EE-3EA4-464C-90F3-5BF04B05CF83}</string>
							<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Modules
local Utility = require(script.Parent.Parent.Parent.Utility)

-- Base
local GizmoBase = require(script.Parent.GizmoBase)

-- Constants
local VERTICAL_PADDING = 6

-- Module
local GizmoSeparator = {}

--
function GizmoSeparator.new(Gui, Name, ParentAPI, Color, Height)

    -- Defaults
    Color = Color or Color3.fromRGB(59, 60, 120)
    Height = Height or 24

    -- Sanity
    Utility.QuickTypeAssert(Name, 'string')
    Utility.QuickTypeAssert(Color, 'Color3')
    Utility.QuickTypeAssert(Height, 'number')

    -- Init Values
    Gui.Line.Text = Name
    Gui.Line.BackgroundColor3 = Color
    Gui.Size = UDim2.new(1, 0, 0, Height)

    -- API
    local API = GizmoBase.New()

	-- Private API --
	API.Validate = nil
	API.Listen = nil
	API.Set = nil

    -- Public API --
	function API.SetNameColor(NewColor)
		if API._DeadCheck() then return nil end
		Gui.Line.TextColor3 = NewColor
		return API
	end

    function API.SetFrameColor(NewColor)
		if API._DeadCheck() then return nil end
        Gui.Line.BackgroundColor3 = NewColor
		return API
    end

    function API.SetName(NewText)
		if API._DeadCheck() then return nil end
        Gui.Line.Text = NewText
		return API
    end

    function API.SetHeight(NewHeight)
		if API._DeadCheck() then return nil end
		-- Modify Gui Size
		local OCHeight = Gui.Size.Y.Offset
		Gui.Size = UDim2.new(1, 0, 0, NewHeight + VERTICAL_PADDING)

		-- Modify Canvas Height based on change in height
		if Utility.IsFolderVisible(ParentAPI, true) then
			local DeltaHeight = (NewHeight + VERTICAL_PADDING) - OCHeight
			Utility.ModifyCanvasHeight(ParentAPI._MasterAPI._GuiParent, DeltaHeight)
		end
		return API
    end

    -- End
    return API
end

-- End
return GizmoSeparator]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd00019180</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX3AF9E14B807D42A3B83389654304CDE7">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">GizmoString</string>
							<string name="ScriptGuid">{93F28F9F-0C01-47B3-8149-17F5172CDA43}</string>
							<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Module
local GizmoString = {}

-- Modules
local GizmoBase = require(script.Parent.GizmoBase)
local Utility = require(script.Parent.Parent.Parent.Utility)

----------------
-- Public API --
----------------
function GizmoString.new(Gui, Name, DefaultValue, ClearTextOnFocus)

    -- Defaults
    DefaultValue = DefaultValue or ''
    if ClearTextOnFocus == nil then
		ClearTextOnFocus = false
	end

    -- Sanity
    Utility.QuickTypeAssert(Name, 'string')
    Utility.QuickTypeAssert(DefaultValue, 'string')
    Utility.QuickTypeAssert(ClearTextOnFocus, 'boolean')

    -- Setup
    Gui.TextName.Text = Name
    Gui.TextBox.Text = DefaultValue
    Gui.TextBox.ClearTextOnFocus = ClearTextOnFocus

	-- Defines
	local IsReadOnly = false
    local API = GizmoBase.New()

	----------------
	-- Public API --
	----------------
    function API.Validate(Input)
		if API._DeadCheck() then return false end
		if Input == API._Input then return false end
        local Str = tostring(Input)
        if Str then
            Gui.TextBox.Text = Str
            API._Input = Str
            return true
        else
            Gui.TextBox.Text = API._Input
            return false
        end
    end

	function API.SetName(NewName)
		if API._DeadCheck() then return nil end
		Gui.TextName.Text = NewName
		return API
	end

	function API.SetNameColor(NewNameColor)
		if API._DeadCheck() then return nil end
		Gui.TextName.TextColor3 = NewNameColor
		return API
	end

	function API.SetValueBGColor(NewColor)
		if API._DeadCheck() then return nil end
		Gui.TextBox.BackgroundColor3 = NewColor
		return API
	end

	function API.SetValueTextColor(NewColor)
		if API._DeadCheck() then return nil end
		Gui.TextBox.TextColor3 = NewColor
		return API
	end

	function API.IsReadOnly()
		if API._DeadCheck() then return nil end
		return IsReadOnly
	end

	function API.SetReadOnly(State)
		if API._DeadCheck() then return nil end
		-- Set
		if State == nil then
			IsReadOnly = true
		else
			IsReadOnly = State
		end
		-- Apply
		if IsReadOnly then
			Gui.TextBox.TextEditable = false
			Gui.TextBox.TextTransparency = 0.5
			Gui.TextName.TextTransparency = 0.5
		else
			Gui.TextBox.TextEditable = true
			Gui.TextBox.TextTransparency = 0.0
			Gui.TextName.TextTransparency = 0.0
		end
		return API
	end

    -- Update Values
    API._AddConnection(Gui.TextBox.FocusLost:Connect(function(__) -- enterPressed
       	if IsReadOnly then
			return
	    end

		if API.Validate(Gui.TextBox.Text) then
			API.TriggerListeners()
		end
    end))

	-- Validate default
	API.Validate(DefaultValue)

    return API
end

return GizmoString]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd00019181</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX550C18FC4D28423CBC39DF70415CFD88">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">GizmoVector2</string>
							<string name="ScriptGuid">{2BEBEDD1-D2BA-429C-9A8B-BC476BB37D3C}</string>
							<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Module
local GizmoVector2 = {}

-- Modules
local GizmoBase = require(script.Parent.GizmoBase)
local Utility = require(script.Parent.Parent.Parent.Utility)

----------------
-- Public API --
----------------
function GizmoVector2.new(Gui, Name, DefaultValue, DecimalAmount, ClearTextOnFocus)
	-- Defaults
	DefaultValue = DefaultValue or Vector2.new(0, 0)
	if ClearTextOnFocus == nil then
		ClearTextOnFocus = false
	end

	-- Sanity
	Utility.QuickTypeAssert(Name, 'string')
	Utility.QuickTypeAssert(DefaultValue, 'Vector2')
	Utility.QuickTypeAssert(ClearTextOnFocus, 'boolean')
	if DecimalAmount ~= nil then
		Utility.QuickTypeAssert(DecimalAmount, 'number')
		DecimalAmount = math.floor(DecimalAmount)
	end

	-- Setup
	Gui.TextName.Text = Name
	Gui.TextBox1.Text = DefaultValue.X
	Gui.TextBox2.Text = DefaultValue.Y
	Gui.TextBox1.ClearTextOnFocus = ClearTextOnFocus
	Gui.TextBox2.ClearTextOnFocus = ClearTextOnFocus

	-- Defines
	local API = GizmoBase.New()
	local IsReadOnly = false

	----------------
	-- Public API --
	----------------
	function API.Validate(InputA, InputB)
		if API._DeadCheck() then return false end

		local _x = tonumber(InputA)
		local _y = tonumber(InputB)

		if _x and _y then
			-- Check if values not changed
			if API._Input
				and typeof(API._Input) == 'Vector2'
				and math.abs(tonumber(_x) - API._Input.X) < 1e-10
				and math.abs(tonumber(_y) - API._Input.Y) < 1e-10
			then
				return false
			end

			if DecimalAmount then
				local Mod = (10 ^ DecimalAmount)
				_x = math.round(_x * Mod) / Mod
				_y = math.round(_y * Mod) / Mod
			end
			Gui.TextBox1.Text = _x
			Gui.TextBox2.Text = _y
			API._Input = Vector2.new(_x, _y)
			return true
		else
			if not _x then
				Gui.TextBox1.Text = API._Input.X
			end
			if not _y then
				Gui.TextBox2.Text = API._Input.Y
			end
			return false
		end
	end

	function API.SetName(NewName)
		if API._DeadCheck() then return nil end
		Gui.TextName.Text = NewName
		return API
	end

	function API.SetNameColor(NewNameColor)
		if API._DeadCheck() then return nil end
		Gui.TextName.TextColor3 = NewNameColor
		return API
	end

	function API.SetValueBGColor(NewColor)
		if API._DeadCheck() then return nil end
		Gui.TextBox1.BackgroundColor3 = NewColor
		Gui.TextBox2.BackgroundColor3 = NewColor
		return API
	end

	function API.SetValueTextColor(NewColor)
		if API._DeadCheck() then return nil end
		Gui.TextBox1.TextColor3 = NewColor
		Gui.TextBox2.TextColor3 = NewColor
		return API
	end

	function API.IsReadOnly()
		if API._DeadCheck() then return nil end
		return IsReadOnly
	end

	function API.SetReadOnly(State)
		if API._DeadCheck() then return nil end
		-- Set
		if State == nil then
			IsReadOnly = true
		else
			IsReadOnly = State
		end
		-- Apply
		if IsReadOnly then
			Gui.TextBox1.TextEditable = false
			Gui.TextBox2.TextEditable = false
			Gui.TextBox1.TextTransparency = 0.5
			Gui.TextBox2.TextTransparency = 0.5
			Gui.TextName.TextTransparency = 0.5
		else
			Gui.TextBox1.TextEditable = true
			Gui.TextBox2.TextEditable = true
			Gui.TextBox1.TextTransparency = 0.0
			Gui.TextBox2.TextTransparency = 0.0
			Gui.TextName.TextTransparency = 0.0
		end
		return API
	end

	-- Update Values
	API._AddConnection(Gui.TextBox1.FocusLost:Connect(function(__) -- enterPressed
		if IsReadOnly then
			return
		end

		if API.Validate(Gui.TextBox1.Text, API._Input.Y) then
			API.TriggerListeners()
		end
	end))
	API._AddConnection(Gui.TextBox2.FocusLost:Connect(function(__) -- enterPressed
		if IsReadOnly then
			return
		end

		if API.Validate(API._Input.X, Gui.TextBox2.Text) then
			API.TriggerListeners()
		end
	end))

	-- Call Validate on Default Value
	API.Validate(DefaultValue.X, DefaultValue.Y)

	return API
end

return GizmoVector2]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd00019182</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX8B38CDA1B52D45F1A9AF3CF5579975DC">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">GizmoVector3</string>
							<string name="ScriptGuid">{74FC14EE-E84C-4509-95B2-99F67BD78BCD}</string>
							<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Module
local GizmoVector3 = {}

-- Modules
local GizmoBase = require(script.Parent.GizmoBase)
local Utility = require(script.Parent.Parent.Parent.Utility)

----------------
-- Public API --
----------------
function GizmoVector3.new(Gui, Name, DefaultValue, DecimalAmount, ClearTextOnFocus)
	-- Defaults
	DefaultValue = DefaultValue or Vector3.new(0, 0, 0)
	if ClearTextOnFocus == nil then
		ClearTextOnFocus = false
	end

	-- Sanity
	Utility.QuickTypeAssert(Name, 'string')
	Utility.QuickTypeAssert(DefaultValue, 'Vector3')
	Utility.QuickTypeAssert(ClearTextOnFocus, 'boolean')
	if DecimalAmount ~= nil then
		Utility.QuickTypeAssert(DecimalAmount, 'number')
		DecimalAmount = math.floor(DecimalAmount)
	end

	-- Setup
	Gui.TextName.Text = Name
	Gui.TextBox1.Text = DefaultValue.X
	Gui.TextBox2.Text = DefaultValue.Y
	Gui.TextBox3.Text = DefaultValue.Z
	Gui.TextBox1.ClearTextOnFocus = ClearTextOnFocus
	Gui.TextBox2.ClearTextOnFocus = ClearTextOnFocus
	Gui.TextBox3.ClearTextOnFocus = ClearTextOnFocus

	-- Defines
	local API = GizmoBase.New()
	local IsReadOnly = false

	-- Public API --
	function API.Validate(InputA, InputB, InputC)
		if API._DeadCheck() then return false end

		local _x = tonumber(InputA)
		local _y = tonumber(InputB)
		local _z = tonumber(InputC)

		if _x and _y and _z then
			-- Check if values not changed
			if API._Input
				and typeof(API._Input) == 'Vector3'
				and math.abs(tonumber(InputA) - API._Input.X) < 1e-10
				and math.abs(tonumber(InputB) - API._Input.Y) < 1e-10
				and math.abs(tonumber(InputC) - API._Input.Z) < 1e-10
			then
				return false
			end
			if DecimalAmount then
				local Mod = (10 ^ DecimalAmount)
				_x = math.round(_x * Mod) / Mod
				_y = math.round(_y * Mod) / Mod
				_z = math.round(_z * Mod) / Mod
			end
			Gui.TextBox1.Text = _x
			Gui.TextBox2.Text = _y
			Gui.TextBox3.Text = _z
			API._Input = Vector3.new(_x, _y, _z)
			return true
		else
			if not _x then
				Gui.TextBox1.Text = API._Input.X
			end
			if not _y then
				Gui.TextBox2.Text = API._Input.Y
			end
			if not _z then
				Gui.TextBox3.Text = API._Input.Z
			end
			return false
		end
	end

	function API.SetName(NewName)
		if API._DeadCheck() then return nil end
		Gui.TextName.Text = NewName
		return API
	end

	function API.SetNameColor(NewNameColor)
		if API._DeadCheck() then return nil end
		Gui.TextName.TextColor3 = NewNameColor
		return API
	end

	function API.SetValueBGColor(NewColor)
		if API._DeadCheck() then return nil end
		Gui.TextBox1.BackgroundColor3 = NewColor
		Gui.TextBox2.BackgroundColor3 = NewColor
		Gui.TextBox3.BackgroundColor3 = NewColor
		return API
	end

	function API.SetValueTextColor(NewColor)
		if API._DeadCheck() then return nil end
		Gui.TextBox1.TextColor3 = NewColor
		Gui.TextBox2.TextColor3 = NewColor
		Gui.TextBox3.TextColor3 = NewColor
		return API
	end

	function API.IsReadOnly()
		if API._DeadCheck() then return nil end
		return IsReadOnly
	end

	function API.SetReadOnly(State)
		if API._DeadCheck() then return nil end
		-- Set
		if State == nil then
			IsReadOnly = true
		else
			IsReadOnly = State
		end
		-- Apply
		if IsReadOnly then
			Gui.TextBox1.TextEditable = false
			Gui.TextBox2.TextEditable = false
			Gui.TextBox3.TextEditable = false
			Gui.TextBox1.TextTransparency = 0.5
			Gui.TextBox2.TextTransparency = 0.5
			Gui.TextBox3.TextTransparency = 0.5
			Gui.TextName.TextTransparency = 0.5
		else
			Gui.TextBox1.TextEditable = true
			Gui.TextBox2.TextEditable = true
			Gui.TextBox3.TextEditable = true
			Gui.TextBox1.TextTransparency = 0.0
			Gui.TextBox2.TextTransparency = 0.0
			Gui.TextBox3.TextTransparency = 0.0
			Gui.TextName.TextTransparency = 0.0
		end
		return API
	end

	-- Update Values
	API._AddConnection(Gui.TextBox1.FocusLost:Connect(function(__) -- enterPressed
		if IsReadOnly then
			return
		end

		if API.Validate(Gui.TextBox1.Text, API._Input.Y, API._Input.Z) then
			API.TriggerListeners()
		end
	end))
	API._AddConnection(Gui.TextBox2.FocusLost:Connect(function(__) -- enterPressed
		if IsReadOnly then
			return
		end

		if API.Validate(API._Input.X, Gui.TextBox2.Text, API._Input.Z) then
			API.TriggerListeners()
		end
	end))
	API._AddConnection(Gui.TextBox3.FocusLost:Connect(function(__) -- enterPressed
		if IsReadOnly then
			return
		end

		if API.Validate(API._Input.X, API._Input.Y, Gui.TextBox3.Text) then
			API.TriggerListeners()
		end
	end))

	-- Call Validate on Default Value
	API.Validate(DefaultValue.X, DefaultValue.Y, DefaultValue.Z)

	return API
end

return GizmoVector3]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd00019183</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX938EEA2D773E451BA7A1A073FC5A14B6">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">GizmoColorSlider</string>
							<string name="ScriptGuid">{A9C08860-3E7C-4D6F-91EB-48EE2FEC952A}</string>
							<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Module
local GizmoColorSlider = {}

-- Modules
local GizmoBase = require(script.Parent.GizmoBase)
local Utility = require(script.Parent.Parent.Parent.Utility)
local Dragger = require(script.Parent.Parent.Parent.Dragger)

-- Constants
local MODES = {
	RGB = 1,
	RGBINT = 2,
	HSV = 3,
	HSVINT = 4,
}

-- Defines
local Mouse = game:GetService("Players").LocalPlayer:GetMouse()

----------------------
-- Helper Functions --
----------------------
local function InverseLerp(v, a, b)
	return (v - a) / (b - a)
end

local function Lerp(a, b, t)
	return (1 - t) * a + t * b;
end

local function UpdateDraggerPositionFromValue(DraggerUI, Value, MinValue, MaxValue)
	local t = InverseLerp(Value, MinValue, MaxValue)
	DraggerUI.Position = UDim2.fromScale(t, 0)
end

local function GetValueFromDraggerPosition(DraggerUI, MinValue, MaxValue)
	return Lerp(MinValue, MaxValue, DraggerUI.Position.X.Scale)
end

local function GetColor255(val)
	return math.round(val * 255.0)
end

local function DecimalRounding(val, DecimalAmount)
	if DecimalAmount then
		local Mod = (10 ^ DecimalAmount)
		val = math.round(val * Mod) / Mod
	end
	return val
end

local function RGBColorIndexToDisplayText(ColorIndex)
	if ColorIndex == 1 then
		return 'R: '
	elseif ColorIndex == 2 then
		return 'G: '
	else
		return 'B: '
	end
end
local function HSVColorIndexToDisplayText(ColorIndex)
	if ColorIndex == 1 then
		return 'H: '
	elseif ColorIndex == 2 then
		return 'S: '
	else
		return 'V: '
	end
end

----------------
-- Public API --
----------------
function GizmoColorSlider.new(Gui, Name, DefaultColor, UpdateOnlyOnDragEnd, Mode, DecimalAmount)

	-- Defaults
	DefaultColor = DefaultColor or Color3.fromRGB(255, 255, 255)
	UpdateOnlyOnDragEnd = UpdateOnlyOnDragEnd or false

	-- Sanity
	Utility.QuickTypeAssert(Name, 'string')
	Utility.QuickTypeAssert(DefaultColor, 'Color3')

	-- Defines
	local ValueDragger_1 = Dragger.new(Gui.TextBox1.DragRange.Dragger)
	local ValueDragger_2 = Dragger.new(Gui.TextBox2.DragRange.Dragger)
	local ValueDragger_3 = Dragger.new(Gui.TextBox3.DragRange.Dragger)
	local IsReadOnly = false
	local API = GizmoBase.New()

	-- Setup
	Gui.TextName.Text = Name

	-- RGB stored
	API._AddDragger(ValueDragger_1)
	API._AddDragger(ValueDragger_2)
	API._AddDragger(ValueDragger_3)

	----------------
	-- Public API --
	----------------
	function API.SetName(NewName)
		if API._DeadCheck() then return nil end
		Gui.TextName.Text = NewName
		return API
	end

	function API.SetNameColor(NewNameColor)
		if API._DeadCheck() then return nil end
		Gui.TextName.TextColor3 = NewNameColor
		return API
	end

	function API.SetValueBGColor(NewColor)
		if API._DeadCheck() then return nil end
		Gui.TextBox.BackgroundColor3 = NewColor
		return API
	end

	function API.SetValueTextColor(NewColor)
		if API._DeadCheck() then return nil end
		Gui.TextBox.TextColor3 = NewColor
		return API
	end

	function API.IsReadOnly()
		if API._DeadCheck() then return nil end
		return IsReadOnly
	end

	function API.SetReadOnly(State)
		if API._DeadCheck() then return nil end
		-- Set
		if State == nil then
			IsReadOnly = true
		else
			IsReadOnly = State
		end
		-- Apply
		if IsReadOnly then
			for Index = 1, 3 do
				local TextBoxName = 'TextBox'..tostring(Index)
				Gui[TextBoxName].DragRange.Dragger.Selectable = false
				Gui[TextBoxName].DragRange.Dragger.AutoButtonColor = false
				Gui[TextBoxName].DragRange.Dragger.BackgroundTransparency = 0.9
				Gui[TextBoxName].TextTransparency = 0.5
			end
			Gui.TextName.TextTransparency = 0.5
		else
			for Index = 1, 3 do
				local TextBoxName = 'TextBox'..tostring(Index)
				Gui[TextBoxName].DragRange.Dragger.Selectable = true
				Gui[TextBoxName].DragRange.Dragger.AutoButtonColor = true
				Gui[TextBoxName].DragRange.Dragger.BackgroundTransparency = 0.7
				Gui[TextBoxName].TextTransparency = 0.0
			end
			Gui.TextName.TextTransparency = 0.0
		end
		return API
	end

	-- Validate
	function API.Validate(Input)
		if API._DeadCheck() then return false end
		if Input == API._Input then return false end
		if typeof(Input) ~= 'Color3' then
			warn('GizmoColorSlider Given non Color Parameter')
			return false
		end

		API._Input = Input
		Gui.ColorDisplayer.BackgroundColor3 = Input

		if Mode == MODES.RGB then
			Gui.TextBox1.Text = 'R: '..tostring(DecimalRounding(API._Input.R, DecimalAmount))
			Gui.TextBox2.Text = 'G: '..tostring(DecimalRounding(API._Input.G, DecimalAmount))
			Gui.TextBox3.Text = 'B: '..tostring(DecimalRounding(API._Input.B, DecimalAmount))
			UpdateDraggerPositionFromValue(Gui.TextBox1.DragRange.Dragger, API._Input.R, 0, 1)
			UpdateDraggerPositionFromValue(Gui.TextBox2.DragRange.Dragger, API._Input.G, 0, 1)
			UpdateDraggerPositionFromValue(Gui.TextBox3.DragRange.Dragger, API._Input.B, 0, 1)

		elseif Mode == MODES.RGBINT then
			Gui.TextBox1.Text = 'R: '..tostring(GetColor255(API._Input.R))
			Gui.TextBox2.Text = 'G: '..tostring(GetColor255(API._Input.G))
			Gui.TextBox3.Text = 'B: '..tostring(GetColor255(API._Input.B))
			UpdateDraggerPositionFromValue(Gui.TextBox1.DragRange.Dragger, API._Input.R, 0, 1)
			UpdateDraggerPositionFromValue(Gui.TextBox2.DragRange.Dragger, API._Input.G, 0, 1)
			UpdateDraggerPositionFromValue(Gui.TextBox3.DragRange.Dragger, API._Input.B, 0, 1)

		elseif Mode == MODES.HSV then
			local H, S, V = Color3.toHSV(API._Input)
			Gui.TextBox1.Text = 'H: '..tostring(DecimalRounding(H, DecimalAmount))
			Gui.TextBox2.Text = 'S: '..tostring(DecimalRounding(S, DecimalAmount))
			Gui.TextBox3.Text = 'V: '..tostring(DecimalRounding(V, DecimalAmount))
			UpdateDraggerPositionFromValue(Gui.TextBox1.DragRange.Dragger, H, 0, 1)
			UpdateDraggerPositionFromValue(Gui.TextBox2.DragRange.Dragger, S, 0, 1)
			UpdateDraggerPositionFromValue(Gui.TextBox3.DragRange.Dragger, V, 0, 1)

		elseif Mode == MODES.HSVINT then
			local H, S, V = Color3.toHSV(API._Input)
			Gui.TextBox1.Text = 'H: '..tostring(GetColor255(H))
			Gui.TextBox2.Text = 'S: '..tostring(GetColor255(S))
			Gui.TextBox3.Text = 'V: '..tostring(GetColor255(V))
			UpdateDraggerPositionFromValue(Gui.TextBox1.DragRange.Dragger, H, 0, 1)
			UpdateDraggerPositionFromValue(Gui.TextBox2.DragRange.Dragger, S, 0, 1)
			UpdateDraggerPositionFromValue(Gui.TextBox3.DragRange.Dragger, V, 0, 1)

		end

		return true
	end

	---------------------
	-- Helper Function --
	---------------------
	local function Dragger_OnDrag(TextBox, ColorIndex)
		if API._DeadCheck() then return end
		if IsReadOnly then return end

		-- Move Button to correct Position
		local ButtonPositionT = InverseLerp(
			Mouse.X,
			TextBox.DragRange.AbsolutePosition.X,
			TextBox.DragRange.AbsolutePosition.X + TextBox.DragRange.AbsoluteSize.X
		)
		ButtonPositionT = math.clamp(ButtonPositionT, 0, 1)
		TextBox.DragRange.Dragger.Position = UDim2.fromScale(ButtonPositionT, 0)

		-- Calculate value from position
		local Value = GetValueFromDraggerPosition(TextBox.DragRange.Dragger, 0, 1)

		-- Calculate Result in RGB
		if Mode == MODES.RGB or Mode == MODES.RGBINT then

			-- Value
			if ColorIndex == 1 then
				API._Input = Color3.new(Value, API._Input.G, API._Input.B)

			elseif ColorIndex == 2 then
				API._Input = Color3.new(API._Input.R, Value, API._Input.B)

			else
				API._Input = Color3.new(API._Input.R, API._Input.G, Value)
			end

			-- Text
			if Mode == MODES.RGB then
				TextBox.Text = RGBColorIndexToDisplayText(ColorIndex)..tostring(DecimalRounding(Value, DecimalAmount))

			elseif Mode == MODES.RGBINT then
				TextBox.Text = RGBColorIndexToDisplayText(ColorIndex)..tostring(GetColor255(Value))
			end

		elseif Mode == MODES.HSV or Mode == MODES.HSVINT then

			-- Value
			local H, S, V = Color3.toHSV(API._Input)
			if ColorIndex == 1 then
				H = Value
			elseif ColorIndex == 2 then
				S = Value
			else
				V = Value
			end
			API._Input = Color3.fromHSV(H, S, V)

			-- Text
			if Mode == MODES.HSV then
				TextBox.Text = HSVColorIndexToDisplayText(ColorIndex)..tostring(DecimalRounding(Value, DecimalAmount))

			elseif Mode == MODES.HSVINT then
				TextBox.Text = HSVColorIndexToDisplayText(ColorIndex)..tostring(GetColor255(Value))
			end
		end

		-- Color Displayer
		Gui.ColorDisplayer.BackgroundColor3 = API._Input

		-- Trigger Listeners if updating per drag
		if not UpdateOnlyOnDragEnd then
			API.TriggerListeners()
		end
	end

	-- Draggers
	ValueDragger_1.OnDrag(function()
		Dragger_OnDrag(Gui.TextBox1, 1)
	end)
	ValueDragger_2.OnDrag(function()
		Dragger_OnDrag(Gui.TextBox2, 2)
	end)
	ValueDragger_3.OnDrag(function()
		Dragger_OnDrag(Gui.TextBox3, 3)
	end)

	-- Drag End
	if UpdateOnlyOnDragEnd then
		ValueDragger_1.OnDragEnd(function()
			API.TriggerListeners()
		end)
		ValueDragger_2.OnDragEnd(function()
			API.TriggerListeners()
		end)
		ValueDragger_3.OnDragEnd(function()
			API.TriggerListeners()
		end)
	end

	-- Validate Default
	API.Validate(DefaultColor)

	return API
end

return GizmoColorSlider]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd00019184</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXFD5092A10B8C4682A502CD3F0DDC2499">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">GizmoText</string>
							<string name="ScriptGuid">{4BB9F2FD-59E6-4870-B886-CF2C414DAFBA}</string>
							<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Module
local GizmoText = {}

-- Modules
local GizmoBase = require(script.Parent.GizmoBase)
local Utility = require(script.Parent.Parent.Parent.Utility)

----------------
-- Public API --
----------------
function GizmoText.new(Gui, Name, DefaultValue)

    -- Defaults
    DefaultValue = DefaultValue or ''

    -- Sanity
    Utility.QuickTypeAssert(Name, 'string')
    Utility.QuickTypeAssert(DefaultValue, 'string')

    -- Setup
    Gui.TextName.Text = Name
    Gui.TextBox.Text = DefaultValue

	-- Defines
    local API = GizmoBase.New()

	----------------
	-- Public API --
	----------------
    function API.Validate(Input)
		if API._DeadCheck() then return nil end
        local Str = tostring(Input)
        if Str then
            Gui.TextBox.Text = Str
            API._Input = Str
            return true
        else
            Gui.TextBox.Text = API._Input
            return false
        end
    end

	function API.SetName(NewName)
		if API._DeadCheck() then return nil end
		Gui.TextName.Text = NewName
		return API
	end

	function API.SetNameColor(NewNameColor)
		if API._DeadCheck() then return nil end
		Gui.TextName.TextColor3 = NewNameColor
		return API
	end

	function API.SetValueTextColor(NewColor)
		if API._DeadCheck() then return nil end
		Gui.TextBox.TextColor3 = NewColor
		return API
	end

    return API
end

return GizmoText]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd00019185</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXA8D4DC96CDFF41C8AE145A55EAAA474E">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">GizmoListPicker</string>
							<string name="ScriptGuid">{9442DE75-704B-4B43-8506-7A977A0025DA}</string>
							<ProtectedString name="Source"><![CDATA[-- © 2021 Emmanuel Lajeunesse

-- Module
local GizmoListPicker = {}

-- Modules
local GizmoBase = require(script.Parent.GizmoBase)
local Utility = require(script.Parent.Parent.Parent.Utility)

----------------
-- Public API --
----------------
function GizmoListPicker.new(Gui, Name, ParentAPI, DefaultChoice, Choices, AllowNoChoice, ClearTextOnFocus)

	-- Defaults
	if ClearTextOnFocus == nil then
		ClearTextOnFocus = false
	end
	if AllowNoChoice == nil then
		AllowNoChoice = false
	end

    -- Sanity
    Utility.QuickTypeAssert(Name, 'string')
	if DefaultChoice then
		Utility.QuickTypeAssert(DefaultChoice, 'string')
	end
    Utility.QuickTypeAssert(Choices, 'table')
	for _, Value in ipairs(Choices) do
		if typeof(Value) ~= 'string' then
			error('a choice was not a string in Choices for '..Name)
		end
	end
	if DefaultChoice and not table.find(Choices, DefaultChoice) then
		error('Choice ('..DefaultChoice..') not found in Choices for '..Name)
	end
	if #Choices == 0 then
		error('No choices given for '..Name)
	end
	if not AllowNoChoice and not DefaultChoice then
		DefaultChoice = Choices[1]
	end

    -- Setup
    Gui.TextName.Text = Name
	Gui.TextBox.ClearTextOnFocus = ClearTextOnFocus

	-- Defines
    local API = GizmoBase.New()
	local IsReadOnly = false

	----------------
	-- Public API --
	----------------
    function API.Validate(Input)
		if API._DeadCheck() then return nil end
		-- Possibility of nil
		if AllowNoChoice then
			if Input == nil or Input == '' then
				Gui.TextBox.Text = ''
				if API._Input == nil then
					return false
				else
					API._Input = nil
					return true
				end
			end
		end
		-- Check Choice
		if Input == API._Input then return false end
        local Str = tostring(Input)
        if Str and table.find(Choices, Str) then
            Gui.TextBox.Text = Str
            API._Input = Str
            return true
		elseif AllowNoChoice then
			if API._Input ~= nil then
				Gui.TextBox.Text = API._Input
			else
				Gui.TextBox.Text = ''
			end
			return false
		else
			Gui.TextBox.Text = API._Input
            return false
        end
    end

	function API.SetName(NewName)
		if API._DeadCheck() then return nil end
		Gui.TextName.Text = NewName
		return API
	end

	function API.SetNameColor(NewNameColor)
		if API._DeadCheck() then return nil end
		Gui.TextName.TextColor3 = NewNameColor
		return API
	end

	function API.SetValueTextColor(NewColor)
		if API._DeadCheck() then return nil end
		Gui.TextBox.TextColor3 = NewColor
		return API
	end

	function API.AddChoice(Choice)
		if API._DeadCheck() then return nil end
		if typeof(Choice) ~= 'string' then
			error('Choice is not of type string')
		end
		table.insert(Choices, Choice)
		return API
	end

	function API.RemoveChoice(Choice)
		if API._DeadCheck() then return nil end
		if typeof(Choice) ~= 'string' then
			error('Choice is not of type string')
		end
		local ChoiceIndex = table.find(Choices, Choice)
		if ChoiceIndex then
			table.remove(Choices, Choice)
			-- Check if current selection is gone
			if API._Input == Choice then
				API.Validate(Choices[1])
			end
		end
		return API
	end

	function API.ChangeChoices(NewChoices)
		if API._DeadCheck() then return nil end
		if typeof(NewChoices) ~= 'table' then
			error('Choices is not of type table')
		end
		Choices = NewChoices
		-- Check if current choice doesn't exist in new choices set
		local ChoiceIndex = table.find(Choices, API._Input)
		if not ChoiceIndex then
			API.Validate(Choices[1])
		end
		return API
	end

	function API.IsReadOnly()
		if API._DeadCheck() then return nil end
		return IsReadOnly
	end

	function API.SetReadOnly(State)
		if API._DeadCheck() then return nil end
		-- Set
		if State == nil then
			IsReadOnly = true
		else
			IsReadOnly = State
		end
		-- Apply
		if IsReadOnly then
			Gui.TextBox.TextEditable = false
			Gui.TextBox.TextTransparency = 0.5
			Gui.ModalButton.TextTransparency = 0.5
			Gui.TextName.TextTransparency = 0.5
		else
			Gui.TextBox.TextEditable = true
			Gui.TextBox.TextTransparency = 0.0
			Gui.ModalButton.TextTransparency = 0.0
			Gui.TextName.TextTransparency = 0.0
		end
		return API
	end

	----------------------
	-- Selection Button --
	----------------------
	API._AddConnection(Gui.ModalButton.MouseButton1Down:Connect(function()
		if not IsReadOnly then
			ParentAPI._CreateModal(Name..' :', API, API._Input, Choices)
		end
	end))
	API._AddConnection(Gui.TextBox.FocusLost:Connect(function(__) -- enterPressed
		if IsReadOnly then
			return
		end
		if API.Validate(Gui.TextBox.Text) then
			API.TriggerListeners()
		end
    end))

	API.Validate(DefaultChoice)

    return API
end

return GizmoListPicker]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd00019186</UniqueId>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="ScreenGui" referent="RBX5011D129CBA14ED1AEAA2660DBFBA0F0">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<bool name="ClipToDeviceSafeArea">true</bool>
					<int name="DisplayOrder">0</int>
					<bool name="Enabled">true</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<bool name="IgnoreGuiInset">false</bool>
					<string name="Name">DebuGui_UI</string>
					<bool name="ResetOnSpawn">false</bool>
					<Ref name="RootLocalizationTable">null</Ref>
					<token name="SafeAreaCompatibility">1</token>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">46009198e08047480187a7bd00019187</UniqueId>
					<token name="ZIndexBehavior">1</token>
				</Properties>
				<Item class="Frame" referent="RBX74475E3ACF5545719DC2FDA2A9FDA46A">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.0784313753</R>
							<G>0.0666666701</G>
							<B>0.121568628</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<string name="Name">MasterFrame</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>20</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>615</XO>
							<YS>1</YS>
							<YO>-40</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">46009198e08047480187a7bd00019188</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX0C50A0B037A14389837F4F8BA5EDD9D8">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.250980407</R>
								<G>0.403921574</G>
								<B>0.615686297</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0.180392161</R>
								<G>0.203921571</G>
								<B>0.309803933</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<int name="LayoutOrder">0</int>
							<string name="Name">TopBar</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd00019189</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">90</int>
						</Properties>
						<Item class="TextButton" referent="RBX9DBF1CDABAFF47ADA96F26E4B11AA68C">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">0.800000012</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">19</token>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/GothamSSm.json</url></Family>
									<Weight>700</Weight>
									<Style>Normal</Style>
									<CachedFaceId><url>rbxasset://fonts/GothamSSm-Bold.otf</url></CachedFaceId>
								</Font>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">DropDownBtn</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>20</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">v</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<UniqueId name="UniqueId">46009198e08047480187a7bd0001918a</UniqueId>
								<bool name="Visible">true</bool>
								<int name="ZIndex">91</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX727CFB5CFF5C4977A49F839F7C9B1B04">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">false</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">true</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
									<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
								</Font>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">Title</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>20</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-40</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"> Label</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<UniqueId name="UniqueId">46009198e08047480187a7bd0001918b</UniqueId>
								<bool name="Visible">true</bool>
								<int name="ZIndex">92</int>
							</Properties>
							<Item class="UIPadding" referent="RBXF791704CFC0B4BD9AA65DAADCE887110">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">UIPadding</string>
									<UDim name="PaddingBottom">
										<S>0</S>
										<O>0</O>
									</UDim>
									<UDim name="PaddingLeft">
										<S>0</S>
										<O>4</O>
									</UDim>
									<UDim name="PaddingRight">
										<S>0</S>
										<O>0</O>
									</UDim>
									<UDim name="PaddingTop">
										<S>0</S>
										<O>0</O>
									</UDim>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">46009198e08047480187a7bd0001918c</UniqueId>
								</Properties>
							</Item>
						</Item>
						<Item class="TextButton" referent="RBXE78D58FFF60B45818D11D9BCFB943135">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">0.800000012</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">19</token>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/GothamSSm.json</url></Family>
									<Weight>700</Weight>
									<Style>Normal</Style>
									<CachedFaceId><url>rbxasset://fonts/GothamSSm-Bold.otf</url></CachedFaceId>
								</Font>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">MinimizeBtn</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>1</XS>
									<XO>-20</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>20</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">-</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<UniqueId name="UniqueId">46009198e08047480187a7bd0001918d</UniqueId>
								<bool name="Visible">true</bool>
								<int name="ZIndex">91</int>
							</Properties>
						</Item>
					</Item>
					<Item class="TextButton" referent="RBX7F4C174D967842278CB8CF82A8A31040">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>1</X>
								<Y>1</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.250980407</R>
								<G>0.403921574</G>
								<B>0.615686297</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
								<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
							</Font>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">ResizeBtn</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text"></string>
							<Color3 name="TextColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<UniqueId name="UniqueId">46009198e08047480187a7bd0001918e</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1000</int>
						</Properties>
					</Item>
					<Item class="ScrollingFrame" referent="RBX5DC9BD36C3F24B5CB52E0AB2388F4ACF">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticCanvasSize">0</token>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.00784313772</R>
								<G>0.00784313772</G>
								<B>0.00784313772</B>
							</Color3>
							<float name="BackgroundTransparency">0.300000012</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<Content name="BottomImage"><url>rbxasset://textures/ui/Scroll/scroll-middle.png</url></Content>
							<Vector2 name="CanvasPosition">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<UDim2 name="CanvasSize">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Draggable">false</bool>
							<token name="ElasticBehavior">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<token name="HorizontalScrollBarInset">0</token>
							<int name="LayoutOrder">0</int>
							<Content name="MidImage"><url>rbxasset://textures/ui/Scroll/scroll-middle.png</url></Content>
							<string name="Name">DrawFrame</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<Color3 name="ScrollBarImageColor3">
								<R>0.576470613</R>
								<G>0.576470613</G>
								<B>0.576470613</B>
							</Color3>
							<float name="ScrollBarImageTransparency">0</float>
							<int name="ScrollBarThickness">12</int>
							<token name="ScrollingDirection">2</token>
							<bool name="ScrollingEnabled">true</bool>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">true</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Content name="TopImage"><url>rbxasset://textures/ui/Scroll/scroll-middle.png</url></Content>
							<UniqueId name="UniqueId">46009198e08047480187a7bd0001918f</UniqueId>
							<token name="VerticalScrollBarInset">1</token>
							<token name="VerticalScrollBarPosition">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
						<Item class="UIListLayout" referent="RBX4585546E9C7C4EA6BA0D367C89584571">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<token name="FillDirection">1</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="HorizontalAlignment">1</token>
								<string name="Name">VerticalLayout</string>
								<UDim name="Padding">
									<S>0</S>
									<O>0</O>
								</UDim>
								<token name="SortOrder">2</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">46009198e08047480187a7bd00019190</UniqueId>
								<token name="VerticalAlignment">1</token>
							</Properties>
						</Item>
					</Item>
					<Item class="ImageButton" referent="RBXC644D1CB8D7940BE8D0736943DDDB0AC">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">false</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="HoverImage"><null></null></Content>
							<Content name="Image"><null></null></Content>
							<Color3 name="ImageColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<int name="LayoutOrder">0</int>
							<bool name="Modal">false</bool>
							<string name="Name">DragCore</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<Content name="PressedImage"><null></null></Content>
							<token name="ResampleMode">0</token>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<float name="SliceScale">1</float>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<UDim2 name="TileSize">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<UniqueId name="UniqueId">46009198e08047480187a7bd00019191</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageButton" referent="RBXCB7284D30E544ADF8ADE9E5F8AEF6B65">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">false</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="BackgroundTransparency">0.300000012</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="HoverImage"><null></null></Content>
							<Content name="Image"><null></null></Content>
							<Color3 name="ImageColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<int name="LayoutOrder">0</int>
							<bool name="Modal">false</bool>
							<string name="Name">ModalLock</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<Content name="PressedImage"><null></null></Content>
							<token name="ResampleMode">0</token>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">false</bool>
							<bool name="Selected">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<float name="SliceScale">1</float>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<UDim2 name="TileSize">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<UniqueId name="UniqueId">46009198e08047480187a7bd00019192</UniqueId>
							<bool name="Visible">false</bool>
							<int name="ZIndex">999</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX5CF68CB3955B44BAAF2E5383C3CCDE8C">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">0.949999988</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<int name="LayoutOrder">0</int>
					<string name="Name">GizmoUI_Button</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>24</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">46009198e08047480187a7bd00019193</UniqueId>
					<bool name="Visible">true</bool>
					<int name="ZIndex">3</int>
				</Properties>
				<Item class="TextButton" referent="RBX60A5783A520E4B17806579ADD5776A2C">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoButtonColor">true</bool>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.423529446</R>
							<G>0.423529446</G>
							<B>0.423529446</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882354</R>
							<G>0.164705887</G>
							<B>0.20784314</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<bool name="Modal">false</bool>
						<string name="Name">TextButton</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<bool name="Selected">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>1</YS>
							<YO>-4</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">Button</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd00019194</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="UICorner" referent="RBX774BF2543EA844788791510E77A38F2B">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UDim name="CornerRadius">
								<S>0</S>
								<O>16</O>
							</UDim>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UICorner</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd00019195</UniqueId>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBXA4220D32725346BC8481F010FB228049">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">0.949999988</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<int name="LayoutOrder">0</int>
					<string name="Name">GizmoUI_CheckBox</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>24</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">46009198e08047480187a7bd00019196</UniqueId>
					<bool name="Visible">true</bool>
					<int name="ZIndex">3</int>
				</Properties>
				<Item class="TextLabel" referent="RBX36517982D0434CF9B204F3DB4F2EBEC1">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">TextName</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.400000006</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">INT_NAME</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd00019197</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="UIPadding" referent="RBXCDD883FE104742008D58FDD650218E61">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UIPadding</string>
							<UDim name="PaddingBottom">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingLeft">
								<S>0</S>
								<O>10</O>
							</UDim>
							<UDim name="PaddingRight">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingTop">
								<S>0</S>
								<O>0</O>
							</UDim>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd00019198</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX8BF752E84D574F63AFD11DA20E84F764">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.266666681</R>
							<G>0.266666681</G>
							<B>0.266666681</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<string name="Name">CheckBoxBG</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.400000006</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>24</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">46009198e08047480187a7bd00019199</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="TextButton" referent="RBXF838D88D4BEE4DCDB453F595D4C2A6B6">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.541176498</R>
								<G>0.541176498</G>
								<B>0.541176498</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">10</token>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
								<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
							</Font>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">CheckBoxFG</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-4</XO>
								<YS>1</YS>
								<YO>-4</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text"></string>
							<Color3 name="TextColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">8</float>
							<Color3 name="TextStrokeColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<UniqueId name="UniqueId">46009198e08047480187a7bd0001919a</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">5</int>
						</Properties>
						<Item class="UICorner" referent="RBX4D2A89F3011D448DBF332A05A0B6D58C">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>4</O>
								</UDim>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">46009198e08047480187a7bd0001919b</UniqueId>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX2BDDC881FD7C4190BA391862DEF5B054">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0.5</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
									<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
								</Font>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">Checkmark</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>0</XO>
									<YS>0.5</YS>
									<YO>-2</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1.39999998</XS>
									<XO>0</XO>
									<YS>1.39999998</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<UniqueId name="UniqueId">46009198e08047480187a7bd0001919c</UniqueId>
								<bool name="Visible">true</bool>
								<int name="ZIndex">6</int>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX91098A90F7FD4E16ABB174B6CEEC071C">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">true</bool>
					<bool name="Draggable">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<int name="LayoutOrder">0</int>
					<string name="Name">GizmoUI_Folder</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0.25065273</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>200</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">46009198e08047480187a7bd0001919d</UniqueId>
					<bool name="Visible">true</bool>
					<int name="ZIndex">3</int>
				</Properties>
				<Item class="TextButton" referent="RBXD50378E93390430E946B0CE54EC04A1A">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoButtonColor">true</bool>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">0.800000012</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">19</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/GothamSSm.json</url></Family>
							<Weight>700</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/GothamSSm-Bold.otf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<bool name="Modal">false</bool>
						<string name="Name">DropDownBtn</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<bool name="Selected">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>20</XO>
							<YS>0</YS>
							<YO>24</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">v</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd0001919e</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">91</int>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBX9DBAA4BDD633424B8247AF394D3609C9">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">TextName</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>20</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-20</XO>
							<YS>0</YS>
							<YO>24</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">Label</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd0001919f</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">5</int>
					</Properties>
					<Item class="UIPadding" referent="RBX6292F126C02345E2929C6FCD14C58D24">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UIPadding</string>
							<UDim name="PaddingBottom">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingLeft">
								<S>0</S>
								<O>8</O>
							</UDim>
							<UDim name="PaddingRight">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingTop">
								<S>0</S>
								<O>0</O>
							</UDim>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191a0</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="ScrollingFrame" referent="RBX4B63712BD3C84B65B3CB4663D6441EDA">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticCanvasSize">0</token>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<Content name="BottomImage"><url>rbxasset://textures/ui/Scroll/scroll-middle.png</url></Content>
						<Vector2 name="CanvasPosition">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<UDim2 name="CanvasSize">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="ElasticBehavior">0</token>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<token name="HorizontalScrollBarInset">0</token>
						<int name="LayoutOrder">0</int>
						<Content name="MidImage"><url>rbxasset://textures/ui/Scroll/scroll-middle.png</url></Content>
						<string name="Name">ScrollingFrame</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>6</XO>
							<YS>0</YS>
							<YO>24</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<Color3 name="ScrollBarImageColor3">
							<R>0.576470613</R>
							<G>0.576470613</G>
							<B>0.576470613</B>
						</Color3>
						<float name="ScrollBarImageTransparency">0</float>
						<int name="ScrollBarThickness">12</int>
						<token name="ScrollingDirection">2</token>
						<bool name="ScrollingEnabled">true</bool>
						<bool name="Selectable">true</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">true</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-6</XO>
							<YS>1</YS>
							<YO>-24</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Content name="TopImage"><url>rbxasset://textures/ui/Scroll/scroll-middle.png</url></Content>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191a1</UniqueId>
						<token name="VerticalScrollBarInset">1</token>
						<token name="VerticalScrollBarPosition">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
					<Item class="UIListLayout" referent="RBX9E686BB2BFFA412E99E4AB7B8280D44B">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<token name="FillDirection">1</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<token name="HorizontalAlignment">1</token>
							<string name="Name">VerticalLayout</string>
							<UDim name="Padding">
								<S>0</S>
								<O>0</O>
							</UDim>
							<token name="SortOrder">2</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191a2</UniqueId>
							<token name="VerticalAlignment">1</token>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX201FEC04B3554FA6B3E8495BCFF95BCE">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.23137255</R>
							<G>0.235294119</G>
							<B>0.470588237</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<string name="Name">Line</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>24</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191a3</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX3D3EAC3CE7784CE1B3C99212E6EBC713">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.23137255</R>
							<G>0.235294119</G>
							<B>0.470588237</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<string name="Name">SideLine</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>6</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191a4</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX2C902D1772BE4BC393B372A9A90572DD">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">0.949999988</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<int name="LayoutOrder">0</int>
					<string name="Name">GizmoUI_Picker</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>24</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">46009198e08047480187a7bd000191a5</UniqueId>
					<bool name="Visible">true</bool>
					<int name="ZIndex">3</int>
				</Properties>
				<Item class="TextLabel" referent="RBX526F9CD767CA46FE91D1BD90298F605B">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">TextName</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.400000006</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">INT_NAME</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191a6</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="UIPadding" referent="RBX4B9C77C6094149B6BF811AC1AF4A149A">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UIPadding</string>
							<UDim name="PaddingBottom">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingLeft">
								<S>0</S>
								<O>10</O>
							</UDim>
							<UDim name="PaddingRight">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingTop">
								<S>0</S>
								<O>0</O>
							</UDim>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191a7</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="TextButton" referent="RBXA69E94F88F124CB1A6FE5E51E97CA811">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoButtonColor">true</bool>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.266666681</R>
							<G>0.266666681</G>
							<B>0.266666681</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<bool name="Modal">false</bool>
						<string name="Name">ModalButton</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.400000006</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<bool name="Selected">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>40</XO>
							<YS>1</YS>
							<YO>-4</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">&gt;</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">true</bool>
						<float name="TextSize">24</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191a8</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">6</int>
					</Properties>
					<Item class="UICorner" referent="RBXC950AC19328C49009F0D58C8CFD6A1C8">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UDim name="CornerRadius">
								<S>0</S>
								<O>8</O>
							</UDim>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UICorner</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191a9</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="TextBox" referent="RBX87B5ABD4C8F848DB9E196CAA893685EF">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.266666681</R>
							<G>0.266666681</G>
							<B>0.266666681</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClearTextOnFocus">true</bool>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<bool name="MultiLine">false</bool>
						<string name="Name">TextBox</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<Color3 name="PlaceholderColor3">
							<R>0.699999988</R>
							<G>0.699999988</G>
							<B>0.699999988</B>
						</Color3>
						<string name="PlaceholderText"></string>
						<UDim2 name="Position">
							<XS>0.400000006</XS>
							<XO>44</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<bool name="ShowNativeInput">true</bool>
						<UDim2 name="Size">
							<XS>0.600000024</XS>
							<XO>-48</XO>
							<YS>1</YS>
							<YO>-6</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">567565756</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextEditable">true</bool>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191aa</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">6</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBXD11533BDF41D45279753BB8CE90A3705">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">0.949999988</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<int name="LayoutOrder">0</int>
					<string name="Name">GizmoUI_Separator</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>24</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">46009198e08047480187a7bd000191ab</UniqueId>
					<bool name="Visible">true</bool>
					<int name="ZIndex">3</int>
				</Properties>
				<Item class="TextLabel" referent="RBX45DD9F49ADAA46B8B86287F5CDB58A26">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.23137255</R>
							<G>0.235294119</G>
							<B>0.470588237</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">Line</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>-6</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">* SECTION *</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191ac</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBXB8196F3090624BB9894F5FE2FDB2FD13">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">0.949999988</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<int name="LayoutOrder">0</int>
					<string name="Name">GizmoUI_Slider</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>24</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">46009198e08047480187a7bd000191ad</UniqueId>
					<bool name="Visible">true</bool>
					<int name="ZIndex">3</int>
				</Properties>
				<Item class="TextLabel" referent="RBX6D20A8CFD6514AE3A186EEA02134C7EE">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">TextName</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.400000006</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">INT_NAME</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191ae</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="UIPadding" referent="RBX2FA4CD43467F432D896A333A3EE9198A">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UIPadding</string>
							<UDim name="PaddingBottom">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingLeft">
								<S>0</S>
								<O>10</O>
							</UDim>
							<UDim name="PaddingRight">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingTop">
								<S>0</S>
								<O>0</O>
							</UDim>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191af</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX6CABDF2EA2404964939C33D4C36BE132">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.266666681</R>
							<G>0.266666681</G>
							<B>0.266666681</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">TextBox</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.400000006</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.600000024</XS>
							<XO>-4</XO>
							<YS>1</YS>
							<YO>-6</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">567565756</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191b0</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">6</int>
					</Properties>
					<Item class="Frame" referent="RBXFF14EA82DB4D4E1684C73E0A51317E32">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<int name="LayoutOrder">0</int>
							<string name="Name">DragRange</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-24</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191b1</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">0</int>
						</Properties>
						<Item class="TextButton" referent="RBX007F03B74BBD490DAA0AC0BCB8EDB19E">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.121568635</R>
									<G>0.831372619</G>
									<B>0.909803987</B>
								</Color3>
								<float name="BackgroundTransparency">0.699999988</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">10</token>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
									<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
								</Font>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">Dragger</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>24</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<UniqueId name="UniqueId">46009198e08047480187a7bd000191b2</UniqueId>
								<bool name="Visible">true</bool>
								<int name="ZIndex">6</int>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBXF458E8479D2C4A49BF7768E8780294BE">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">0.949999988</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<int name="LayoutOrder">0</int>
					<string name="Name">GizmoUI_Text</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>24</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">46009198e08047480187a7bd000191b3</UniqueId>
					<bool name="Visible">true</bool>
					<int name="ZIndex">3</int>
				</Properties>
				<Item class="TextLabel" referent="RBXD8483F2C511B4CD5A78A528563D78CD7">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">TextName</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.400000006</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">INT_NAME</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191b4</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="UIPadding" referent="RBXD83D8973F0A64E4C805DB2CB3455C306">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UIPadding</string>
							<UDim name="PaddingBottom">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingLeft">
								<S>0</S>
								<O>10</O>
							</UDim>
							<UDim name="PaddingRight">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingTop">
								<S>0</S>
								<O>0</O>
							</UDim>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191b5</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX81639FA6F90E45849B1BCE5A39C8D1BB">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.266666681</R>
							<G>0.266666681</G>
							<B>0.266666681</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">TextBox</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.400000006</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.600000024</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>-6</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">567565756</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191b6</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="UIPadding" referent="RBXA33E907B06CC48C7837DAD1B04F9CC56">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UIPadding</string>
							<UDim name="PaddingBottom">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingLeft">
								<S>0</S>
								<O>4</O>
							</UDim>
							<UDim name="PaddingRight">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingTop">
								<S>0</S>
								<O>0</O>
							</UDim>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191b7</UniqueId>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX75FB29790A6D427ABB6FB5B29294F82E">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">0.949999988</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<int name="LayoutOrder">0</int>
					<string name="Name">GizmoUI_TextBox</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>24</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">46009198e08047480187a7bd000191b8</UniqueId>
					<bool name="Visible">true</bool>
					<int name="ZIndex">3</int>
				</Properties>
				<Item class="TextLabel" referent="RBX2E7111718A024E9F8C5811DFF2F077F2">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">TextName</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.400000006</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">INT_NAME</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191b9</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="UIPadding" referent="RBX1B130B541BB14F09A941372C01761E57">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UIPadding</string>
							<UDim name="PaddingBottom">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingLeft">
								<S>0</S>
								<O>10</O>
							</UDim>
							<UDim name="PaddingRight">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingTop">
								<S>0</S>
								<O>0</O>
							</UDim>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191ba</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="TextBox" referent="RBX278832DCC8654158B0A47C6FE5BF8699">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.266666681</R>
							<G>0.266666681</G>
							<B>0.266666681</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClearTextOnFocus">false</bool>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<bool name="MultiLine">false</bool>
						<string name="Name">TextBox</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<Color3 name="PlaceholderColor3">
							<R>0.699999988</R>
							<G>0.699999988</G>
							<B>0.699999988</B>
						</Color3>
						<string name="PlaceholderText"></string>
						<UDim2 name="Position">
							<XS>0.400000006</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<bool name="ShowNativeInput">true</bool>
						<UDim2 name="Size">
							<XS>0.600000024</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>-6</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">567565756</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextEditable">true</bool>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191bb</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="UIPadding" referent="RBX760114E8A7D1498394389DBBD6B02653">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UIPadding</string>
							<UDim name="PaddingBottom">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingLeft">
								<S>0</S>
								<O>4</O>
							</UDim>
							<UDim name="PaddingRight">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingTop">
								<S>0</S>
								<O>0</O>
							</UDim>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191bc</UniqueId>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX97A1C3C95C424905AC0BC9EA25555347">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">0.949999988</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<int name="LayoutOrder">0</int>
					<string name="Name">GizmoUI_TextBox_Multi2</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>24</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">46009198e08047480187a7bd000191bd</UniqueId>
					<bool name="Visible">true</bool>
					<int name="ZIndex">3</int>
				</Properties>
				<Item class="TextLabel" referent="RBX3E86F3A6BD184F0084337EAF747D416E">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">TextName</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.400000006</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">INT_NAME</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191be</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="UIPadding" referent="RBX5B562F131E61454AA36C5FAF2AB7AA4A">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UIPadding</string>
							<UDim name="PaddingBottom">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingLeft">
								<S>0</S>
								<O>10</O>
							</UDim>
							<UDim name="PaddingRight">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingTop">
								<S>0</S>
								<O>0</O>
							</UDim>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191bf</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="TextBox" referent="RBXD0D014C422804E649C18B2949EBACDA3">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.266666681</R>
							<G>0.266666681</G>
							<B>0.266666681</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClearTextOnFocus">false</bool>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<bool name="MultiLine">false</bool>
						<string name="Name">TextBox1</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<Color3 name="PlaceholderColor3">
							<R>0.699999988</R>
							<G>0.699999988</G>
							<B>0.699999988</B>
						</Color3>
						<string name="PlaceholderText"></string>
						<UDim2 name="Position">
							<XS>0.400000006</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<bool name="ShowNativeInput">true</bool>
						<UDim2 name="Size">
							<XS>0.300000012</XS>
							<XO>-4</XO>
							<YS>1</YS>
							<YO>-6</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">567565756</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextEditable">true</bool>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191c0</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="UIPadding" referent="RBX9611D0AAD0CA49D09683B2D0240C078A">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UIPadding</string>
							<UDim name="PaddingBottom">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingLeft">
								<S>0</S>
								<O>4</O>
							</UDim>
							<UDim name="PaddingRight">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingTop">
								<S>0</S>
								<O>0</O>
							</UDim>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191c1</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="TextBox" referent="RBXA4C710B49FF34FB78C596B3EA4CDCDA0">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.266666681</R>
							<G>0.266666681</G>
							<B>0.266666681</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClearTextOnFocus">false</bool>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<bool name="MultiLine">false</bool>
						<string name="Name">TextBox2</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<Color3 name="PlaceholderColor3">
							<R>0.699999988</R>
							<G>0.699999988</G>
							<B>0.699999988</B>
						</Color3>
						<string name="PlaceholderText"></string>
						<UDim2 name="Position">
							<XS>0.699999988</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<bool name="ShowNativeInput">true</bool>
						<UDim2 name="Size">
							<XS>0.300000012</XS>
							<XO>-4</XO>
							<YS>1</YS>
							<YO>-6</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">567565756</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextEditable">true</bool>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191c2</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="UIPadding" referent="RBXCCA08CBFDB794C0D838C363E6FEE39F2">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UIPadding</string>
							<UDim name="PaddingBottom">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingLeft">
								<S>0</S>
								<O>4</O>
							</UDim>
							<UDim name="PaddingRight">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingTop">
								<S>0</S>
								<O>0</O>
							</UDim>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191c3</UniqueId>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX3988D11199E0432E91E5EF2DA7DDD335">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">0.949999988</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<int name="LayoutOrder">0</int>
					<string name="Name">GizmoUI_TextBox_Multi3</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>24</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">46009198e08047480187a7bd000191c4</UniqueId>
					<bool name="Visible">true</bool>
					<int name="ZIndex">3</int>
				</Properties>
				<Item class="TextLabel" referent="RBX87D3779BB3DB4C58A29FD20A0C0A602B">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">TextName</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.400000006</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">INT_NAME</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191c5</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="UIPadding" referent="RBX69A7DAD2BACC4F0E972A139B7F70BA4D">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UIPadding</string>
							<UDim name="PaddingBottom">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingLeft">
								<S>0</S>
								<O>10</O>
							</UDim>
							<UDim name="PaddingRight">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingTop">
								<S>0</S>
								<O>0</O>
							</UDim>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191c6</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="TextBox" referent="RBX66A8D75B7B494EB4879C86B5D58B4E88">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.266666681</R>
							<G>0.266666681</G>
							<B>0.266666681</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClearTextOnFocus">false</bool>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<bool name="MultiLine">false</bool>
						<string name="Name">TextBox1</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<Color3 name="PlaceholderColor3">
							<R>0.699999988</R>
							<G>0.699999988</G>
							<B>0.699999988</B>
						</Color3>
						<string name="PlaceholderText"></string>
						<UDim2 name="Position">
							<XS>0.400000006</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<bool name="ShowNativeInput">true</bool>
						<UDim2 name="Size">
							<XS>0.200000003</XS>
							<XO>-4</XO>
							<YS>1</YS>
							<YO>-6</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">567565756</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextEditable">true</bool>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191c7</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="UIPadding" referent="RBX005DA03AC6F54E4BBAE62A2C8EBB9037">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UIPadding</string>
							<UDim name="PaddingBottom">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingLeft">
								<S>0</S>
								<O>4</O>
							</UDim>
							<UDim name="PaddingRight">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingTop">
								<S>0</S>
								<O>0</O>
							</UDim>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191c8</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="TextBox" referent="RBXC209BC0F96A44A7DAC0BEC5F93DDB3C2">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.266666681</R>
							<G>0.266666681</G>
							<B>0.266666681</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClearTextOnFocus">false</bool>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<bool name="MultiLine">false</bool>
						<string name="Name">TextBox2</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<Color3 name="PlaceholderColor3">
							<R>0.699999988</R>
							<G>0.699999988</G>
							<B>0.699999988</B>
						</Color3>
						<string name="PlaceholderText"></string>
						<UDim2 name="Position">
							<XS>0.600000024</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<bool name="ShowNativeInput">true</bool>
						<UDim2 name="Size">
							<XS>0.200000003</XS>
							<XO>-4</XO>
							<YS>1</YS>
							<YO>-6</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">567565756</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextEditable">true</bool>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191c9</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="UIPadding" referent="RBXE69590FB5E38489DAA02B89200353ADB">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UIPadding</string>
							<UDim name="PaddingBottom">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingLeft">
								<S>0</S>
								<O>4</O>
							</UDim>
							<UDim name="PaddingRight">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingTop">
								<S>0</S>
								<O>0</O>
							</UDim>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191ca</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="TextBox" referent="RBX5FBEB45778B740AEB5B85377555D49D7">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.266666681</R>
							<G>0.266666681</G>
							<B>0.266666681</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClearTextOnFocus">false</bool>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<bool name="MultiLine">false</bool>
						<string name="Name">TextBox3</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<Color3 name="PlaceholderColor3">
							<R>0.699999988</R>
							<G>0.699999988</G>
							<B>0.699999988</B>
						</Color3>
						<string name="PlaceholderText"></string>
						<UDim2 name="Position">
							<XS>0.800000012</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<bool name="ShowNativeInput">true</bool>
						<UDim2 name="Size">
							<XS>0.200000003</XS>
							<XO>-4</XO>
							<YS>1</YS>
							<YO>-6</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">567565756</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextEditable">true</bool>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191cb</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="UIPadding" referent="RBX5E27E78211914A46AF076CE372A1EE2B">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UIPadding</string>
							<UDim name="PaddingBottom">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingLeft">
								<S>0</S>
								<O>4</O>
							</UDim>
							<UDim name="PaddingRight">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingTop">
								<S>0</S>
								<O>0</O>
							</UDim>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191cc</UniqueId>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX9571AF832BC14E43A43E86BDE0A390EC">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">0.949999988</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<int name="LayoutOrder">0</int>
					<string name="Name">GizmoUI_TextMultiline</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>48</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">46009198e08047480187a7bd000191cd</UniqueId>
					<bool name="Visible">true</bool>
					<int name="ZIndex">3</int>
				</Properties>
				<Item class="TextLabel" referent="RBX4741B6B610594E109B06005698AA81C0">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">TextName</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.400000006</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">INT_NAME</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191ce</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="UIPadding" referent="RBXCF44C94831BA4E6088AF14E8C7070AF5">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UIPadding</string>
							<UDim name="PaddingBottom">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingLeft">
								<S>0</S>
								<O>10</O>
							</UDim>
							<UDim name="PaddingRight">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingTop">
								<S>0</S>
								<O>0</O>
							</UDim>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191cf</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="TextBox" referent="RBXF29FF16313924788A49FB3EC4B6DEE0F">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.266666681</R>
							<G>0.266666681</G>
							<B>0.266666681</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClearTextOnFocus">false</bool>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<bool name="MultiLine">true</bool>
						<string name="Name">TextBox</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<Color3 name="PlaceholderColor3">
							<R>0.699999988</R>
							<G>0.699999988</G>
							<B>0.699999988</B>
						</Color3>
						<string name="PlaceholderText"></string>
						<UDim2 name="Position">
							<XS>0.400000006</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<bool name="ShowNativeInput">true</bool>
						<UDim2 name="Size">
							<XS>0.600000024</XS>
							<XO>-4</XO>
							<YS>1</YS>
							<YO>-6</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text"><![CDATA[567565756
asd
sd
asd]]></string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextEditable">true</bool>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">0</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191d0</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="UIPadding" referent="RBX18792EE3E0C94D03AA6046F6A5336070">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UIPadding</string>
							<UDim name="PaddingBottom">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingLeft">
								<S>0</S>
								<O>4</O>
							</UDim>
							<UDim name="PaddingRight">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingTop">
								<S>0</S>
								<O>0</O>
							</UDim>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191d1</UniqueId>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBXBF3313BA360844BDAB241EC245BC00FB">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">0.949999988</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<int name="LayoutOrder">0</int>
					<string name="Name">GizmoUI_TripleSlider</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>66</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">46009198e08047480187a7bd000191d2</UniqueId>
					<bool name="Visible">true</bool>
					<int name="ZIndex">3</int>
				</Properties>
				<Item class="TextLabel" referent="RBX82E5BFACDE71414DA8B21AF07FCD2DFA">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">TextName</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.400000006</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">INT_NAME</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191d3</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="UIPadding" referent="RBXA27AEE61FC99453A8EA708097AF5A33F">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UIPadding</string>
							<UDim name="PaddingBottom">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingLeft">
								<S>0</S>
								<O>10</O>
							</UDim>
							<UDim name="PaddingRight">
								<S>0</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingTop">
								<S>0</S>
								<O>0</O>
							</UDim>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191d4</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX719A376960734F78935ED07D978433AF">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.266666681</R>
							<G>0.266666681</G>
							<B>0.266666681</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">TextBox1</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.400000006</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>3</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.550000012</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>18</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">567565756</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191d5</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">6</int>
					</Properties>
					<Item class="Frame" referent="RBXC16EDBAEA6874213A9E84796C2759575">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<int name="LayoutOrder">0</int>
							<string name="Name">DragRange</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-24</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191d6</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">0</int>
						</Properties>
						<Item class="TextButton" referent="RBXD59537B2DFD447B58D720C638E816DBD">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.121568635</R>
									<G>0.831372619</G>
									<B>0.909803987</B>
								</Color3>
								<float name="BackgroundTransparency">0.699999988</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">10</token>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
									<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
								</Font>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">Dragger</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>24</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<UniqueId name="UniqueId">46009198e08047480187a7bd000191d7</UniqueId>
								<bool name="Visible">true</bool>
								<int name="ZIndex">6</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBXFD5B9A32037F4B6FBDE93F454AB7AACE">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.266666681</R>
							<G>0.266666681</G>
							<B>0.266666681</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">TextBox2</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.400000006</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>24</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.550000012</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>18</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">567565756</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191d8</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">6</int>
					</Properties>
					<Item class="Frame" referent="RBXE3C06DF01DE449AABE0CF1DAABD0413A">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<int name="LayoutOrder">0</int>
							<string name="Name">DragRange</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-24</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191d9</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">0</int>
						</Properties>
						<Item class="TextButton" referent="RBX9CF185AF7B964E8BB5BFB9ECC8C04235">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.121568635</R>
									<G>0.831372619</G>
									<B>0.909803987</B>
								</Color3>
								<float name="BackgroundTransparency">0.699999988</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">10</token>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
									<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
								</Font>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">Dragger</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>24</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<UniqueId name="UniqueId">46009198e08047480187a7bd000191da</UniqueId>
								<bool name="Visible">true</bool>
								<int name="ZIndex">6</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBXF5F5FE6B5CEE4855BCC2305B912D3290">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.266666681</R>
							<G>0.266666681</G>
							<B>0.266666681</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">10</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">TextBox3</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.400000006</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>45</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.550000012</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>18</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">567565756</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191db</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">6</int>
					</Properties>
					<Item class="Frame" referent="RBX82176BE781D9405DB836931F4964A88C">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<int name="LayoutOrder">0</int>
							<string name="Name">DragRange</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-24</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191dc</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">0</int>
						</Properties>
						<Item class="TextButton" referent="RBX89927E916A444FE481C488E1920C4496">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.121568635</R>
									<G>0.831372619</G>
									<B>0.909803987</B>
								</Color3>
								<float name="BackgroundTransparency">0.699999988</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">10</token>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
									<CachedFaceId><url>rbxasset://fonts/Inconsolata-Regular.ttf</url></CachedFaceId>
								</Font>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">Dragger</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>24</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<UniqueId name="UniqueId">46009198e08047480187a7bd000191dd</UniqueId>
								<bool name="Visible">true</bool>
								<int name="ZIndex">6</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX982EDF37686A491DB346C515941A6851">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>1</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<string name="Name">ColorDisplayer</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>1</XS>
							<XO>-4</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.0549999997</XS>
							<XO>-10</XO>
							<YS>1</YS>
							<YO>-6</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191de</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">7</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBXE5D1C0769E194465BE0691009F3EF45E">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.0784313753</R>
						<G>0.0666666701</G>
						<B>0.121568628</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">true</bool>
					<bool name="Draggable">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<int name="LayoutOrder">0</int>
					<string name="Name">ModalFrame</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>660</XO>
						<YS>0</YS>
						<YO>20</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>400</XO>
						<YS>0</YS>
						<YO>600</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">46009198e08047480187a7bd000191df</UniqueId>
					<bool name="Visible">true</bool>
					<int name="ZIndex">2</int>
				</Properties>
				<Item class="ScrollingFrame" referent="RBXAD592931AC49404FBCEAFF5344767CE7">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticCanvasSize">0</token>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.00784313772</R>
							<G>0.00784313772</G>
							<B>0.00784313772</B>
						</Color3>
						<float name="BackgroundTransparency">0.300000012</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<Content name="BottomImage"><url>rbxasset://textures/ui/Scroll/scroll-middle.png</url></Content>
						<Vector2 name="CanvasPosition">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<UDim2 name="CanvasSize">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="ElasticBehavior">0</token>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<token name="HorizontalScrollBarInset">0</token>
						<int name="LayoutOrder">0</int>
						<Content name="MidImage"><url>rbxasset://textures/ui/Scroll/scroll-middle.png</url></Content>
						<string name="Name">DrawFrame</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<Color3 name="ScrollBarImageColor3">
							<R>0.576470613</R>
							<G>0.576470613</G>
							<B>0.576470613</B>
						</Color3>
						<float name="ScrollBarImageTransparency">0</float>
						<int name="ScrollBarThickness">12</int>
						<token name="ScrollingDirection">2</token>
						<bool name="ScrollingEnabled">true</bool>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">true</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>-20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Content name="TopImage"><url>rbxasset://textures/ui/Scroll/scroll-middle.png</url></Content>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191e0</UniqueId>
						<token name="VerticalScrollBarInset">1</token>
						<token name="VerticalScrollBarPosition">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
					<Item class="UIListLayout" referent="RBXB76AFDE1B7DB4C52B99ADC049DD3D542">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<token name="FillDirection">1</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<token name="HorizontalAlignment">1</token>
							<string name="Name">VerticalLayout</string>
							<UDim name="Padding">
								<S>0</S>
								<O>0</O>
							</UDim>
							<token name="SortOrder">2</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191e1</UniqueId>
							<token name="VerticalAlignment">1</token>
						</Properties>
					</Item>
				</Item>
				<Item class="TextButton" referent="RBXC2E47A5897444E56A553000959F42F53">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoButtonColor">true</bool>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.250980407</R>
							<G>0.403921574</G>
							<B>0.615686297</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.180392161</R>
							<G>0.203921571</G>
							<B>0.309803933</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/LegacyArial.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/arial.ttf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<bool name="Modal">false</bool>
						<string name="Name">TopBar</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<bool name="Selected">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-20</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text"></string>
						<Color3 name="TextColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">8</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191e2</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">90</int>
					</Properties>
					<Item class="TextLabel" referent="RBX52EB61E0DA1B4CDF87FB1B20082F865C">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
								<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
							</Font>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Title</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text"> Label</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<UniqueId name="UniqueId">46009198e08047480187a7bd000191e3</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">92</int>
						</Properties>
						<Item class="UIPadding" referent="RBX33364EA5400246378A20BA6E7191D72C">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">UIPadding</string>
								<UDim name="PaddingBottom">
									<S>0</S>
									<O>0</O>
								</UDim>
								<UDim name="PaddingLeft">
									<S>0</S>
									<O>4</O>
								</UDim>
								<UDim name="PaddingRight">
									<S>0</S>
									<O>0</O>
								</UDim>
								<UDim name="PaddingTop">
									<S>0</S>
									<O>0</O>
								</UDim>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">46009198e08047480187a7bd000191e4</UniqueId>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="TextButton" referent="RBXA3EEBC1260FF4025AE36274380C8EBAC">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoButtonColor">true</bool>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.517647088</R>
							<G>0.0941176564</G>
							<B>0.0196078438</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">19</token>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/GothamSSm.json</url></Family>
							<Weight>700</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/GothamSSm-Bold.otf</url></CachedFaceId>
						</Font>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<bool name="Modal">false</bool>
						<string name="Name">CloseBtn</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>1</XS>
							<XO>-20</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<bool name="Selected">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>20</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">X</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191e5</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">91</int>
					</Properties>
				</Item>
				<Item class="ImageButton" referent="RBX62F19266688043E691FE1EF1DC1A8B50">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoButtonColor">false</bool>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="HoverImage"><null></null></Content>
						<Content name="Image"><null></null></Content>
						<Color3 name="ImageColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<Vector2 name="ImageRectOffset">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Vector2 name="ImageRectSize">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<float name="ImageTransparency">0</float>
						<int name="LayoutOrder">0</int>
						<bool name="Modal">false</bool>
						<string name="Name">DragCore</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<Content name="PressedImage"><null></null></Content>
						<token name="ResampleMode">0</token>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<token name="ScaleType">0</token>
						<bool name="Selectable">true</bool>
						<bool name="Selected">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>-20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<Rect2D name="SliceCenter">
							<min>
								<X>0</X>
								<Y>0</Y>
							</min>
							<max>
								<X>0</X>
								<Y>0</Y>
							</max>
						</Rect2D>
						<float name="SliceScale">1</float>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<UDim2 name="TileSize">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<UniqueId name="UniqueId">46009198e08047480187a7bd000191e6</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBXBAA9B7FE7A664599A5FC9B3DB7AB8DF9">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Documentation</string>
					<string name="ScriptGuid">{F622B28B-A5E6-4210-A94A-F3F94FCE9801}</string>
					<ProtectedString name="Source"><![CDATA[--[[

	-- © 2021 Emmanuel Lajeunesse
	-- DebuGui Documentation

	-- DebuGui : First point of Access

		-- NewWindow (GuiName, InitData)
			-- @Description: Creates a GuiWindow object and returns it
			-- @Parameters:
				GuiName (string) = Name of GuiWindow object internally
				InitData (table) = A bunch of data you can specify
					{
						X = Default X Position of Window
						Y = Default Y Position of Window
						Width = Width of Window
						Height = Height of Window
						Title = Displayed Title on top of Window
					}

		-- GetWindow (GuiName)
			-- @Description: Returns an existing GuiWindow object with a matching name
			-- @Parameters:
					GuiName (string) = Name of GuiWindow object internally

		-- WaitForWindow (TimeOutTime)
			-- @Description: Similar to GetWindow call except it yields until a value is returned
			-- @Parameters:
					TimeOutTime (number) = Time to wait, nil = wait forever

		-- GetConstants ()
			-- @Description: Returns the Constants Module as a table (ScriptModule that is directly below DebuGui called Constants)
			-- @Returns: (table)


	-- GuiWindow (Core) : A singular window spawned from DebuGui's NewWindow

		-- BringGuiForward (ChosenGui)
			-- @Description: Makes the Gui have the highest Display Order of all other GuiWindows
			-- @Parameters:
				ChosenGui (ScreenGui) = ScreenGui of the GuiWindow

		-- GetScreenGui ()
			-- @Description: Returns the associated ScreenGui
			-- @Returns: (Boolean)

		-- Destroy ()
			-- @Description: Destroys ScreenGui and all internal data relating to the GuiWindow

		-- Enable ()
			-- @Description: Sets the Enabled of the ScreenGui to true
			-- @Returns: (GuiWindow)

		-- Disable ()
			-- @Description: Sets the Enabled of the ScreenGui to false
			-- @Returns: (GuiWindow)

		-- ToggleEnabled ()
			-- @Description: Toggles the Enabled of the ScreenGui
			-- @Returns: (GuiWindow)

		-- Show ()
			-- @Description: Make the DrawFrame of the GuiWindow visible
			-- @Returns: (GuiWindow)

		-- Hide ()
			-- @Description: Make the DrawFrame of the GuiWindow invisible
			-- @Returns: (GuiWindow)

		-- IsVisible ()
			-- @Description: check whether or not the GuiWindow is visible
			-- @Returns: (GuiWindow)

		-- ToggleVisibility ()
			-- @Description: Toggles the GuiWindows Visibility state (on -> off) or vice versa
			-- @Returns: (GuiWindow)

		-- Minimize ()
			-- @Description: Shrink the GuiWindow to the bottom left corner of the screen
			-- @Returns: (GuiWindow)

		-- Minimize ()
			-- @Description: Returns a shrunken GuiWindow back to normal
			-- @Returns: (GuiWindow)

		-- IsMinimized ()
			-- @Description: Returns whether or not the Window is minimized
			-- @Returns: (boolean)

		-- ToggleMinimized ()
			-- @Description: Toggles the GuiWindows Minimized state (on -> off) or vice versa
			-- @Returns: (GuiWindow)

		-- SetTopBarColor (NewColor)
			-- @Description: Sets the color of the top bar of the Frame
			-- @Parameters:
					NewColor (Color3) = New background color
			-- @Returns: (GuiWindow)

		-- SetScrollbarWidth (Width)
			-- @Description: Sets the width of the scrollbar for the DrawFrame
			-- @Parameters:
					Width (number) = New background color
			-- @Returns: (GuiWindow)

		-- SetScrollbarColor (NewColor)
			-- @Description: Sets the color of the scrollbar for the DrawFrame
			-- @Parameters:
					NewColor (Color3) = New background color
			-- @Returns: (GuiWindow)

		-- SetPosition (X, Y)
			-- @Description: Sets the Position.Offset of the Window (accounts for guiinset); Window must be maximized
				-- @Parameters:
					X (number) = X Position
					Y (number) = Y Position
			-- @Returns: (GuiWindow)

		-- SetSize (W, H)
			-- @Description: Sets the Size.Offset of the Window; Window must be maximized and Visible
				-- @Parameters:
					W (number) = Width
					H (number) = Height
			-- @Returns: (GuiWindow)


	-- GuiWindow (Gizmos)

		-- Get (UniqueName)
			-- @Description: Return the API of a specific Gizmo
			-- @Parameters:
					UniqueName (String) = UniqueName of the Gizmo
			-- @Returns: (Gizmo)

		-- GetFolder (UniqueName)
			-- @Description: Return the API of a specific Folder
			-- @Parameters:
					UniqueName (String) = UniqueName of the Folder
			-- @Returns: (Folder Gizmo)

		-- Remove (UniqueName)
			-- @Description: Destroy a Gizmo
			-- @Parameters:
					UniqueName (String) = UniqueName of the Gizmo
			-- @Returns: (Gizmo)

		-- RemoveAll ()
			-- @Description: Destroy all the gizmos
			-- @Returns: (Gizmo)

		-- AddString (UniqueName, DefaultValue, ClearTextOnFocus = false)
			-- @Description: String Gizmo, stores 1 editable string
			-- @Parameters:
					UniqueName (String) = UniqueName of the Gizmo
					DefaultValue (String) = Initial Text
					ClearTextOnFocus (Boolean) = Clicking the Textbox will clear the current text
			-- @Returns: (Gizmo)

		-- AddText (UniqueName, DefaultValue)
			-- @Description: Text Gizmo, stores 1 non-editable string
			-- @Parameters:
					UniqueName (String) = UniqueName of the Gizmo
					DefaultValue (String) = Displayed Text
			-- @Returns: (Gizmo)

		-- AddLongString (UniqueName, DefaultValue, ClearTextOnFocus, Height)
			-- @Description: LongString Gizmo, similar to StringGizmo except with larger display box
			-- @Parameters:
					UniqueName (String) = UniqueName of the Gizmo
					DefaultValue (String) = Initial Text
					Height (number) = Pixel Height of gizmo
			-- @Returns: (Gizmo)

		-- AddInteger (UniqueName, DefaultValue, ClearTextOnFocus = false)
			-- @Description: Integer Gizmo, displays 1 number that holds one rounded number
			-- @Parameters:
					UniqueName (String) = UniqueName of the Gizmo
					DefaultValue (number) = Initial Integer Value
					ClearTextOnFocus (Boolean) = Clicking the Textbox will clear the current text
			-- @Returns: (Gizmo)

		-- AddIntegerSlider (UniqueName, DefaultValue, MinValue, MaxValue, UpdateOnlyOnDragEnd)
			-- @Description: IntegerSlider Gizmo, displays 1 slider that can only result in an integer within a given range
			-- @Parameters:
					UniqueName (String) = UniqueName of the Gizmo
					DefaultValue (number) = Initial Integer Value
					MinValue (number) = Smallest Possible Integer
					MaxValue (number) = Largest Possible Integer
					UpdateOnlyOnDragEnd = (boolean) = only trigger Listen updates on MouseReleased
			-- @Returns: (Gizmo)

		-- AddNumber (UniqueName, DefaultValue, DecimalAmount, ClearTextOnFocus = false)
			-- @Description: Number Gizmo, displays 1 number
			-- @Parameters:
					UniqueName (String) = UniqueName of the Gizmo
					DefaultValue (number) = Initial Number Value
					DecimalAmount (number) = How many digits after the decimal point are displayed
					ClearTextOnFocus (Boolean) = Clicking the Textbox will clear the current text
			-- @Returns: (Gizmo)

		-- AddNumberSlider (UniqueName, DefaultValue, MinValue, MaxValue, DecimalAmount, UpdateOnlyOnDragEnd)
			-- @Description: NumberSlider Gizmo, displays 1 slider that can only result in a number within a given range
			-- @Parameters:
					UniqueName (String) = UniqueName of the Gizmo
					DefaultValue (number) = Initial Number Value
					MinValue (number) = Smallest Possible Number
					MaxValue (number) = Largest Possible Number
					UpdateOnlyOnDragEnd = (boolean) = only trigger Listen updates on MouseReleased
			-- @Returns: (Gizmo)

		-- AddBool (UniqueName, DefaultValue)
			-- @Description: Boolean Gizmo, displays a checkbox that can be on or off
			-- @Parameters:
					UniqueName (String) = UniqueName of the Gizmo
					DefaultValue (number) = Initial Boolean Value
			-- @Returns: (Gizmo)

		-- AddButton (UniqueName)
			-- @Description: Button Gizmo, displays a button that can be pressed for the Listen event
			-- @Parameters:
					UniqueName (String) = UniqueName of the Gizmo
			-- @Returns: (Gizmo)

		-- AddSeparator (UniqueName, Color, Text, Height)
			-- @Description: Separator Gizmo, simple frame with text on it
			-- @Parameters:
					UniqueName (String) = UniqueName of the Gizmo
					Color (Color3) = BackgroundColor of the separator
					Text (String) = Displayed text
					Height (number) = Pixel Height of the Gizmo
			-- @Returns: (Gizmo)

		-- AddFolder (UniqueName, StartOpen)
			-- @Description: Folder Gizmo, can store any existing gizmo within itself as its own category (even other folders)
			-- @Parameters:
					UniqueName (String) = UniqueName of the Gizmo
					StartOpen (Boolean) = Is Initially Opened
			-- @Returns: (Gizmo)

		-- AddVector2 (UniqueName, DefaultVec2, DecimalAmount, ClearTextOnFocus = false)
			-- @Description: Vector2 Gizmo, can store a Vector2 Value
			-- @Parameters:
					UniqueName (String) = UniqueName of the Gizmo
					DefaultVec2 (Vector2) = Initial Vector2 Value
					DecimalAmount (number) = How many digits after the decimal point are displayed
					ClearTextOnFocus (Boolean) = Clicking the Textbox will clear the current text
			-- @Returns: (Gizmo)

		-- AddVector3 (UniqueName, DefaultVec3, DecimalAmount, ClearTextOnFocus = false)
			-- @Description: Vector3 Gizmo, can store a Vector2 Value
			-- @Parameters:
					UniqueName (String) = UniqueName of the Gizmo
					DefaultVec3 (Vector3) = Initial Vector3 Value
					DecimalAmount (number) = How many digits after the decimal point are displayed
					ClearTextOnFocus (Boolean) = Clicking the Textbox will clear the current text
			-- @Returns: (Gizmo)

		-- AddColorSliderRGB (UniqueName, DefaultColor, UpdateOnlyOnDragEnd)
			-- @Description: ColorSliderRGB Gizmo, 3 sliders that control the RGB Values of a Color(0 to 1 range)
			-- @Parameters:
					UniqueName (String) = UniqueName of the Gizmo
					DefaultColor (Color3) = Initial Color3 Value
					UpdateOnlyOnDragEnd = (boolean) = only trigger Listen updates on MouseReleased
			-- @Returns: (Gizmo)

		-- AddColorSliderRGBInt (UniqueName, DefaultColor, DecimalAmount, UpdateOnlyOnDragEnd)
			-- @Description: ColorSliderRGBInt Gizmo, 3 sliders that control the RGB Values of a Color (0 to 255 range)
			-- @Parameters:
					UniqueName (String) = UniqueName of the Gizmo
					DefaultColor (Color3) = Initial Color3 Value
					DecimalAmount (number) = How many digits after the decimal point are displayed
					UpdateOnlyOnDragEnd = (boolean) = only trigger Listen updates on MouseReleased
			-- @Returns: (Gizmo)

		-- AddColorSliderHSV (UniqueName, DefaultColor, UpdateOnlyOnDragEnd)
			-- @Description: ColorSliderHSV Gizmo, 3 sliders that control the HSV Values of a Color (0 to 1 range)
			-- @Parameters:
					UniqueName (String) = UniqueName of the Gizmo
					DefaultColor (Color3) = Initial Color3 Value
					UpdateOnlyOnDragEnd (boolean) = only trigger Listen updates on MouseReleased
			-- @Returns: (Gizmo)

		-- AddListPicker (UniqueName, DefaultChoice, ChoiceArray, AllowNoChoice = false, ClearTextOnFocus = false)
			-- @Description: ListPicker Gizmo, have 1 string selected from a list of strings. Opens a Modal to select which one you want
			-- @Parameters:
					UniqueName (String) = UniqueName of the Gizmo
					DefaultChoice (string) = Default Choice to be displayed
					ChoiceArray (table) = Array table of all possible choices
					AllowNoChoice = Allows nil to be a possible Choice
					ClearTextOnFocus (Boolean) = Clicking the Textbox will clear the current text
			-- @Returns: (Gizmo)


	-- Gizmo (Base) : All Gizmos will have this api

		-- Listen (func)
			-- @Description: Listen for changes in the gizmos value
			-- @Parameters:
					func (Function) = Reference to the function that is called when the value is changed
			-- @Returns: (Gizmo)

		-- TriggerListeners ()
			-- @Description: calls every function listening to this gizmo with the currently stored value
			-- @Returns: (Gizmo)

		-- Set (newValue)
			-- @Description: change the internal stored value, triggers all listeners
			-- @Parameters:
					newValue (Gizmo's Stored Value type)
			-- @Returns: (Gizmo)

		-- SetSilently (newValue)
			-- @Description: change the internal stored value, does not trigger any listeners
			-- @Parameters:
					newValue (Gizmo's Stored Value type)
			-- @Returns: (Gizmo)

		-- GetValue ()
			-- @Description: returns the internal stored value
			-- @Returns: (Gizmo's Stored Value)


	-- Gizmo (Bool) : Can toggle on/off

		-- SetName (name)
			-- @Description: Changes displayed name
			-- @Parameters:
					name (String) = New displayed name
			-- @Returns: (Gizmo)

		-- SetNameColor (color)
			-- @Description: Changes color of the displayed name
			-- @Parameters:
					color (Color3) = New color for the displayed name
			-- @Returns: (Gizmo)

		-- SetCheckboxColor (color)
			-- @Description: Changes color of the checkbox
			-- @Parameters:
					color (Color3) = New color for the checkbox
			-- @Returns: (Gizmo)

		-- SetReadOnly (state)
			-- @Description: Will lock UI from being modified by the User
			-- @Parameters:
					state (Boolean) = LockState
			-- @Returns: (Gizmo)

		-- IsReadOnly ()
			-- @Description: Check the ReadOnly state
			-- @Returns: (Boolean)


	-- Gizmo (Button) : a Button then when pushed will call its Listen function

		-- SetName (name)
			-- @Description: Changes displayed name
			-- @Parameters:
					name (String) = New displayed name
			-- @Returns: (Gizmo)

		-- SetNameColor (color)
			-- @Description: Changes color of the displayed name
			-- @Parameters:
					color (Color3) = New color for the displayed name
			-- @Returns: (Gizmo)

		-- SetColor (color)
			-- @Description: Changes color of the button
			-- @Parameters:
					color (Color3) = New color for the button
			-- @Returns: (Gizmo)

		-- SetReadOnly (state)
			-- @Description: Will lock UI from being modified by the User
			-- @Parameters:
					state (Boolean) = LockState
			-- @Returns: (Gizmo)

		-- IsReadOnly ()
			-- @Description: Check the ReadOnly state
			-- @Returns: (Boolean)


	-- Gizmo (ColorSlider) : 3 sliders for RGB/HSV values

		-- SetName (name)
			-- @Description: Changes displayed name
			-- @Parameters:
					name (String) = New displayed name
			-- @Returns: (Gizmo)

		-- SetNameColor (color)
			-- @Description: Changes color of the displayed name
			-- @Parameters:
					color (Color3) = New color for the displayed name
			-- @Returns: (Gizmo)

		-- SetValueBGColor (color)
			-- @Description: Changes color of the background element of the displayed value
			-- @Parameters:
					color (Color3) = New color for the background element
			-- @Returns: (Gizmo)

		-- SetValueTextColor (color)
			-- @Description: Changes color of the displayed value
			-- @Parameters:
					color (Color3) = New color for the displayed value
			-- @Returns: (Gizmo)

		-- SetReadOnly (state)
			-- @Description: Will lock UI from being modified by the User
			-- @Parameters:
					state (Boolean) = LockState
			-- @Returns: (Gizmo)

		-- IsReadOnly ()
			-- @Description: Check the ReadOnly state
			-- @Returns: (Boolean)


	-- Gizmo (Folder) : Folder that can also contain Gizmos in a recursive fashion

		-- SetName (name)
			-- @Description: Changes displayed name
			-- @Parameters:
					name (String) = New displayed name
			-- @Returns: (Gizmo)

		-- SetNameColor (color)
			-- @Description: Changes color of the displayed name
			-- @Parameters:
					color (Color3) = New color for the displayed name
			-- @Returns: (Gizmo)

		-- SetColor (color)
			-- @Description: Changes color of the frame container
			-- @Parameters:
					color (Color3) = New color for the frame container
			-- @Returns: (Gizmo)

		-- GetColor ()
			-- @Description: Returns the color of the frame container
			-- @Returns: (Color3)


		-- IsVisible ()
			-- @Description: Whether the folder is currently visible
			-- @Returns: (Boolean)

		-- [ Also uses same API as (GuiWindow Gizmos) ]

		-- Get (UniqueName)
		-- GetFolder (UniqueName)
		-- Remove (UniqueName)
		-- RemoveAll ()
		-- AddString (UniqueName, DefaultValue, ClearTextOnFocus)
		-- AddText (UniqueName, DefaultValue)
		-- AddLongString (UniqueName, DefaultValue, ClearTextOnFocus, Height)
		-- AddInteger (UniqueName, DefaultValue, ClearTextOnFocus)
		-- AddIntegerSlider (UniqueName, DefaultValue, MinValue, MaxValue, UpdateOnlyOnDragEnd)
		-- AddNumber (UniqueName, DefaultValue, DecimalAmount, ClearTextOnFocus)
		-- AddNumberSlider (UniqueName, DefaultValue, MinValue, MaxValue, DecimalAmount, UpdateOnlyOnDragEnd)
		-- AddBool (UniqueName, DefaultValue)
		-- AddButton (UniqueName)
		-- AddSeparator (UniqueName, Color, Text, Height)
		-- AddFolder (UniqueName, StartOpen)
		-- AddVector2 (UniqueName, DefaultVec2, DecimalAmount, ClearTextOnFocus)
		-- AddVector3 (UniqueName, DefaultVec3, DecimalAmount, ClearTextOnFocus)
		-- AddColorSliderRGB (UniqueName, DefaultColor, UpdateOnlyOnDragEnd)
		-- AddColorSliderRGBInt (UniqueName, DefaultColor, DecimalAmount, UpdateOnlyOnDragEnd)
		-- AddColorSliderHSV (UniqueName, DefaultColor, UpdateOnlyOnDragEnd)
		-- AddListPicker (UniqueName, DefaultChoice, ChoiceArray, AllowNoChoice, ClearTextOnFocus)

	-- Gizmo (Integer) : stores 1 rounded number

		-- SetName (name)
			-- @Description: Changes displayed name
			-- @Parameters:
					name (String) = New displayed name
			-- @Returns: (Gizmo)

		-- SetNameColor (color)
			-- @Description: Changes color of the displayed name
			-- @Parameters:
					color (Color3) = New color for the displayed name
			-- @Returns: (Gizmo)

		-- SetValueBGColor (color)
			-- @Description: Changes color of the background element of the displayed value
			-- @Parameters:
					color (Color3) = New color for the background element
			-- @Returns: (Gizmo)

		-- SetValueTextColor (color)
			-- @Description: Changes color of the displayed value
			-- @Parameters:
					color (Color3) = New color for the displayed value
			-- @Returns: (Gizmo)

		-- SetReadOnly (state)
			-- @Description: Will lock UI from being modified by the User
			-- @Parameters:
					state (Boolean) = LockState
			-- @Returns: (Gizmo)

		-- IsReadOnly ()
			-- @Description: Check the ReadOnly state
			-- @Returns: (Boolean)


	-- Gizmo (IntegerSlider) : stores 1 rounded number with min/max values 

		-- SetName (name)
			-- @Description: Changes displayed name
			-- @Parameters:
					name (String) = New displayed name
			-- @Returns: (Gizmo)

		-- SetNameColor (color)
			-- @Description: Changes color of the displayed name
			-- @Parameters:
					color (Color3) = New color for the displayed name
			-- @Returns: (Gizmo)

		-- SetValueBGColor (color)
			-- @Description: Changes color of the background element of the displayed value
			-- @Parameters:
					color (Color3) = New color for the background element
			-- @Returns: (Gizmo)

		-- SetValueTextColor (color)
			-- @Description: Changes color of the displayed value
			-- @Parameters:
					color (Color3) = New color for the displayed value
			-- @Returns: (Gizmo)

		-- SetMinValue (NewMinValue)
			-- @Description: Changes the min value and updates the current value to clamp it properly
			-- @Parameters:
					NewMinValue (number) = New lowest value for the slider
			-- @Returns: (Gizmo)

		-- SetMaxValue (NewMaxValue)
			-- @Description: Changes the max value and updates the current value to clamp it properly
			-- @Parameters:
					NewMaxValue (number) = New highest value for the slider
			-- @Returns: (Gizmo)

		-- SetReadOnly (state)
			-- @Description: Will lock UI from being modified by the User
			-- @Parameters:
					state (Boolean) = LockState
			-- @Returns: (Gizmo)

		-- IsReadOnly ()
			-- @Description: Check the ReadOnly state
			-- @Returns: (Boolean)


	-- Gizmo (ListPicker) : stores a list of strings with only 1 that can be selected

		-- SetName (name)
			-- @Description: Changes displayed name
			-- @Parameters:
					name (String) = New displayed name
			-- @Returns: (Gizmo)

		-- SetNameColor (color)
			-- @Description: Changes color of the displayed name
			-- @Parameters:
					color (Color3) = New color for the displayed name
			-- @Returns: (Gizmo)

		-- SetValueTextColor (color)
			-- @Description: Changes color of the displayed value
			-- @Parameters:
					color (Color3) = New color for the displayed value
			-- @Returns: (Gizmo)

		-- AddChoice (choice)
			-- @Description: Adds a choice from the list of choices
			-- @Parameters:
					choice (string) = New string choice
			-- @Returns: (Gizmo)

		-- RemoveChoice (choice)
			-- @Description: Removes a choice from the list of choices
			-- @Parameters:
					choice (string) = choice to be removed
			-- @Returns: (Gizmo)

		-- ChangeChoices (NewChoices)
			-- @Description: Sets all choices with a list of new ones
			-- @Parameters:
					NewChoices (table) = table array of strings
			-- @Returns: (Gizmo)

		-- SetReadOnly (state)
			-- @Description: Will lock UI from being modified by the User
			-- @Parameters:
					state (Boolean) = LockState
			-- @Returns: (Gizmo)

		-- IsReadOnly ()
			-- @Description: Check the ReadOnly state
			-- @Returns: (Boolean)


	-- Gizmo (LongString) : stores a multiline string

		-- SetName (name)
			-- @Description: Changes displayed name
			-- @Parameters:
					name (String) = New displayed name
			-- @Returns: (Gizmo)

		-- SetNameColor (color)
			-- @Description: Changes color of the displayed name
			-- @Parameters:
					color (Color3) = New color for the displayed name
			-- @Returns: (Gizmo)

		-- SetValueBGColor (color)
			-- @Description: Changes color of the background element of the displayed value
			-- @Parameters:
					color (Color3) = New color for the background element
			-- @Returns: (Gizmo)

		-- SetValueTextColor (color)
			-- @Description: Changes color of the displayed value
			-- @Parameters:
					color (Color3) = New color for the displayed value
			-- @Returns: (Gizmo)

		-- SetReadOnly (state)
			-- @Description: Will lock UI from being modified by the User
			-- @Parameters:
					state (Boolean) = LockState
			-- @Returns: (Gizmo)

		-- IsReadOnly ()
			-- @Description: Check the ReadOnly state
			-- @Returns: (Boolean)

		-- SetHeight (NewHeight)
			-- @Description: Modifies pixel height of the gizmo
			-- @Parameters:
					NewHeight (number) = height in pixels
			-- @Returns: (Gizmo)

		-- SetHeightBasedOnLineCount (LineCount)
			-- @Description: Modifies height of the gizmo based on amount of rows
			-- @Parameters:
					NewHeight (number) = row count
			-- @Returns: (Gizmo)


	-- Gizmo (Number) : stores 1 number

		-- SetName (name)
			-- @Description: Changes displayed name
			-- @Parameters:
					name (String) = New displayed name
			-- @Returns: (Gizmo)

		-- SetNameColor (color)
			-- @Description: Changes color of the displayed name
			-- @Parameters:
					color (Color3) = New color for the displayed name
			-- @Returns: (Gizmo)

		-- SetValueBGColor (color)
			-- @Description: Changes color of the background element of the displayed value
			-- @Parameters:
					color (Color3) = New color for the background element
			-- @Returns: (Gizmo)

		-- SetValueTextColor (color)
			-- @Description: Changes color of the displayed value
			-- @Parameters:
					color (Color3) = New color for the displayed value
			-- @Returns: (Gizmo)

		-- SetReadOnly (state)
			-- @Description: Will lock UI from being modified by the User
			-- @Parameters:
					state (Boolean) = LockState
			-- @Returns: (Gizmo)

		-- IsReadOnly ()
			-- @Description: Check the ReadOnly state
			-- @Returns: (Boolean)


	-- Gizmo (NumberSlider) : stores 1 number with min/max values

		-- SetName (name)
			-- @Description: Changes displayed name
			-- @Parameters:
					name (String) = New displayed name
			-- @Returns: (Gizmo)

		-- SetNameColor (color)
			-- @Description: Changes color of the displayed name
			-- @Parameters:
					color (Color3) = New color for the displayed name
			-- @Returns: (Gizmo)

		-- SetValueBGColor (color)
			-- @Description: Changes color of the background element of the displayed value
			-- @Parameters:
					color (Color3) = New color for the background element
			-- @Returns: (Gizmo)

		-- SetValueTextColor (color)
			-- @Description: Changes color of the displayed value
			-- @Parameters:
					color (Color3) = New color for the displayed value
			-- @Returns: (Gizmo)

		-- SetMinValue (NewMinValue)
			-- @Description: Changes the min value and updates the current value to clamp it properly
			-- @Parameters:
					NewMinValue (number) = New lowest value for the slider
			-- @Returns: (Gizmo)

		-- SetMaxValue (NewMaxValue)
			-- @Description: Changes the max value and updates the current value to clamp it properly
			-- @Parameters:
					NewMaxValue (number) = New highest value for the slider
			-- @Returns: (Gizmo)

		-- SetReadOnly (state)
			-- @Description: Will lock UI from being modified by the User
			-- @Parameters:
					state (Boolean) = LockState
			-- @Returns: (Gizmo)

		-- IsReadOnly ()
			-- @Description: Check the ReadOnly state
			-- @Returns: (Boolean)


	-- Gizmo (Separator) : small textbox to visually seperate a section

		-- SetName (name)
			-- @Description: Changes displayed name
			-- @Parameters:
					name (String) = New displayed name
			-- @Returns: (Gizmo)

		-- SetNameColor (color)
			-- @Description: Changes color of the text in the separator
			-- @Parameters:
					color (Color3) = New color for the separator text
			-- @Returns: (Gizmo)

		-- SetFrameColor (color)
			-- @Description: Changes color of the separator's frame
			-- @Parameters:
					color (Color3) = New color for the separator
			-- @Returns: (Gizmo)

		-- SetHeight (NewHeight)
			-- @Description: Modifies pixel height of the gizmo
			-- @Parameters:
					NewHeight (number) = height in pixels
			-- @Returns: (Gizmo)


	-- Gizmo (String) : editable textbox

		-- SetName (name)
			-- @Description: Changes displayed name
			-- @Parameters:
					name (String) = New displayed name
			-- @Returns: (Gizmo)

		-- SetNameColor (color)
			-- @Description: Changes color of the displayed name
			-- @Parameters:
					color (Color3) = New color for the displayed name
			-- @Returns: (Gizmo)

		-- SetValueBGColor (color)
			-- @Description: Changes color of the background element of the displayed value
			-- @Parameters:
					color (Color3) = New color for the background element
			-- @Returns: (Gizmo)

		-- SetValueTextColor (color)
			-- @Description: Changes color of the displayed value
			-- @Parameters:
					color (Color3) = New color for the displayed value
			-- @Returns: (Gizmo)

		-- SetReadOnly (state)
			-- @Description: Will lock UI from being modified by the User
			-- @Parameters:
					state (Boolean) = LockState
			-- @Returns: (Gizmo)

		-- IsReadOnly ()
			-- @Description: Check the ReadOnly state
			-- @Returns: (Boolean)


	-- Gizmo (Text) : non-editable textbox

		-- SetName (name)
			-- @Description: Changes displayed name
			-- @Parameters:
					name (String) = New displayed name
			-- @Returns: (Gizmo)

		-- SetNameColor (color)
			-- @Description: Changes color of the displayed name
			-- @Parameters:
					color (Color3) = New color for the displayed name
			-- @Returns: (Gizmo)

		-- SetValueTextColor (color)
			-- @Description: Changes color of the displayed value
			-- @Parameters:
					color (Color3) = New color for the displayed value
			-- @Returns: (Gizmo)


	-- Gizmo (Vector2) : stores 2 numbers

		-- SetName (name)
			-- @Description: Changes displayed name
			-- @Parameters:
					name (String) = New displayed name
			-- @Returns: (Gizmo)

		-- SetNameColor (color)
			-- @Description: Changes color of the displayed name
			-- @Parameters:
					color (Color3) = New color for the displayed name
			-- @Returns: (Gizmo)

		-- SetValueBGColor (color)
			-- @Description: Changes color of the background element of the displayed value
			-- @Parameters:
					color (Color3) = New color for the background element
			-- @Returns: (Gizmo)

		-- SetValueTextColor (color)
			-- @Description: Changes color of the displayed value
			-- @Parameters:
					color (Color3) = New color for the displayed value
			-- @Returns: (Gizmo)

		-- SetReadOnly (state)
			-- @Description: Will lock UI from being modified by the User
			-- @Parameters:
					state (Boolean) = LockState
			-- @Returns: (Gizmo)

		-- IsReadOnly ()
			-- @Description: Check the ReadOnly state
			-- @Returns: (Boolean)


	-- Gizmo (Vector3) : stores 3 numbers

		-- SetName (name)
			-- @Description: Changes displayed name
			-- @Parameters:
					name (String) = New displayed name
			-- @Returns: (Gizmo)

		-- SetNameColor (color)
			-- @Description: Changes color of the displayed name
			-- @Parameters:
					color (Color3) = New color for the displayed name
			-- @Returns: (Gizmo)

		-- SetValueBGColor (color)
			-- @Description: Changes color of the background element of the displayed value
			-- @Parameters:
					color (Color3) = New color for the background element
			-- @Returns: (Gizmo)

		-- SetValueTextColor (color)
			-- @Description: Changes color of the displayed value
			-- @Parameters:
					color (Color3) = New color for the displayed value
			-- @Returns: (Gizmo)

		-- SetReadOnly (state)
			-- @Description: Will lock UI from being modified by the User
			-- @Parameters:
					state (Boolean) = LockState
			-- @Returns: (Gizmo)

		-- IsReadOnly ()
			-- @Description: Check the ReadOnly state
			-- @Returns: (Boolean)


]]]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">46009198e08047480187a7bd000191e7</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX5F46530C6937412DAC0F75DFBAEEF36F">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Constants</string>
					<string name="ScriptGuid">{8A2F4442-4D5A-42E7-8114-9B4DE9E308F5}</string>
					<ProtectedString name="Source"><![CDATA[return {
	DEFAULT_WINDOW_TOPBAR_COLOR = Color3.fromRGB(64, 103, 157);
	DEFAULT_FOLDER_COLOR = Color3.fromRGB(59, 60, 120);
}]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0fc089a5a774912b0198804100a225a5</UniqueId>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="LuaWebService" referent="RBX2DE6A3F941D245E1BCC922BB06270FE3">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd00019117</UniqueId>
		</Properties>
	</Item>
	<Item class="ProcessInstancePhysicsService" referent="RBXD31AA94457B847D8B5663A8169DE9EDC">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ProcessInstancePhysicsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd0001911b</UniqueId>
		</Properties>
	</Item>
	<Item class="LanguageService" referent="RBX155A93E6D2624988A06D1AC1FA0C3923">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">LanguageService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000191ef</UniqueId>
		</Properties>
	</Item>
	<Item class="Lighting" referent="RBXF5AABC98F9924019985D7AF8E9141F57">
		<Properties>
			<Color3 name="Ambient">
				<R>0.274509817</R>
				<G>0.274509817</G>
				<B>0.274509817</B>
			</Color3>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<float name="Brightness">3</float>
			<Color3 name="ColorShift_Bottom">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<Color3 name="ColorShift_Top">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<float name="EnvironmentDiffuseScale">1</float>
			<float name="EnvironmentSpecularScale">1</float>
			<float name="ExposureCompensation">0</float>
			<Color3 name="FogColor">
				<R>0.752941251</R>
				<G>0.752941251</G>
				<B>0.752941251</B>
			</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">0</float>
			<bool name="GlobalShadows">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Lighting</string>
			<Color3 name="OutdoorAmbient">
				<R>0.274509817</R>
				<G>0.274509817</G>
				<B>0.274509817</B>
			</Color3>
			<bool name="Outlines">false</bool>
			<float name="ShadowSoftness">0.200000003</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<token name="Technology">3</token>
			<string name="TimeOfDay">14:00:00</string>
			<UniqueId name="UniqueId">46009198e08047480187a7bd00019136</UniqueId>
		</Properties>
		<Item class="Sky" referent="RBX866F2AC543AF4F7E916090D06409EF90">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="CelestialBodiesShown">true</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="MoonAngularSize">11</float>
				<Content name="MoonTextureId"><url>rbxassetid://6444320592</url></Content>
				<string name="Name">Sky</string>
				<Content name="SkyboxBk"><url>rbxassetid://6444884337</url></Content>
				<Content name="SkyboxDn"><url>rbxassetid://6444884785</url></Content>
				<Content name="SkyboxFt"><url>rbxassetid://6444884337</url></Content>
				<Content name="SkyboxLf"><url>rbxassetid://6444884337</url></Content>
				<Content name="SkyboxRt"><url>rbxassetid://6444884337</url></Content>
				<Content name="SkyboxUp"><url>rbxassetid://6412503613</url></Content>
				<int64 name="SourceAssetId">332039975</int64>
				<int name="StarCount">3000</int>
				<float name="SunAngularSize">11</float>
				<Content name="SunTextureId"><url>rbxassetid://6196665106</url></Content>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">46009198e08047480187a7bd000191e8</UniqueId>
			</Properties>
		</Item>
		<Item class="SunRaysEffect" referent="RBXA38D9D14AC76490E80275547B3275AEB">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="Enabled">true</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="Intensity">0.00999999978</float>
				<string name="Name">SunRays</string>
				<int64 name="SourceAssetId">-1</int64>
				<float name="Spread">0.100000001</float>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">46009198e08047480187a7bd000191e9</UniqueId>
			</Properties>
		</Item>
		<Item class="Atmosphere" referent="RBX746DE486E91D46C4A17CDEABC8C471B3">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Color3 name="Color">
					<R>0.78039217</R>
					<G>0.78039217</G>
					<B>0.78039217</B>
				</Color3>
				<Color3 name="Decay">
					<R>0.41568628</R>
					<G>0.43921569</G>
					<B>0.490196079</B>
				</Color3>
				<float name="Density">0.300000012</float>
				<float name="Glare">0</float>
				<float name="Haze">0</float>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Atmosphere</string>
				<float name="Offset">0.25</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">46009198e08047480187a7bd000191ea</UniqueId>
			</Properties>
		</Item>
		<Item class="BloomEffect" referent="RBX9EFDB9C73FF947DF81EA37C9B955E79D">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="Enabled">true</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="Intensity">1</float>
				<string name="Name">Bloom</string>
				<float name="Size">24</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="Threshold">2</float>
				<UniqueId name="UniqueId">46009198e08047480187a7bd000191eb</UniqueId>
			</Properties>
		</Item>
		<Item class="DepthOfFieldEffect" referent="RBX97B2694706B749169F87D1E536D050AC">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="Enabled">false</bool>
				<float name="FarIntensity">0.100000001</float>
				<float name="FocusDistance">0.0500000007</float>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="InFocusRadius">30</float>
				<string name="Name">DepthOfField</string>
				<float name="NearIntensity">0.75</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">46009198e08047480187a7bd000191ec</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="LodDataService" referent="RBX799A986FB2CE451C9ADB940BAAB1B149">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30b11c95d04e923501ecfac7000196cb</UniqueId>
		</Properties>
	</Item>
	<Item class="DataStoreService" referent="RBX16373B19BB9940BB9F9A35A9E3F4FF63">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutomaticRetry">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="LegacyNamingScheme">false</bool>
			<string name="Name">DataStoreService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000191ed</UniqueId>
		</Properties>
	</Item>
	<Item class="HttpService" referent="RBX38BD93E8C04A460CA5B29B7DA319C5BB">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="HttpEnabled">false</bool>
			<string name="Name">HttpService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000191ee</UniqueId>
		</Properties>
	</Item>
	<Item class="Teams" referent="RBX636FC8B8607D4BEB8C3BC6B886491E18">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Teams</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000191f0</UniqueId>
		</Properties>
	</Item>
	<Item class="TestService" referent="RBX46F38FC077CB4F559438F9D4186D9C08">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutoRuns">true</bool>
			<string name="Description"></string>
			<bool name="ExecuteWithStudioRun">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="Is30FpsThrottleEnabled">true</bool>
			<bool name="IsPhysicsEnvironmentalThrottled">true</bool>
			<bool name="IsSleepAllowed">true</bool>
			<string name="Name">TestService</string>
			<int name="NumberOfPlayers">0</int>
			<double name="SimulateSecondsLag">0</double>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<double name="Timeout">10</double>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000191f1</UniqueId>
		</Properties>
	</Item>
	<Item class="VirtualInputManager" referent="RBX6F605A817D5E47059E63D5A56A158EAB">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">VirtualInputManager</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000191f2</UniqueId>
		</Properties>
	</Item>
	<Item class="ProximityPromptService" referent="RBX7E755389EC3549FCB6946E9051AF106F">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="Enabled">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<int name="MaxPromptsVisible">16</int>
			<string name="Name">ProximityPromptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">46009198e08047480187a7bd000afcc6</UniqueId>
		</Properties>
	</Item>
	<SharedStrings>
		<SharedString md5="yuZpQdnvvUBOTYh1jqZ2cA=="></SharedString>
	</SharedStrings>
</roblox>